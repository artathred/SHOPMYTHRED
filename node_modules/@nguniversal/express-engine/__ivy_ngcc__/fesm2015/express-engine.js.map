{"version":3,"file":"express-engine.js","sources":["../../../../../../modules/express-engine/src/main.ts","../../../../../../modules/express-engine/public_api.ts","../../../../../../modules/express-engine/index.ts","../../../../../../modules/express-engine/express-engine.ts"],"names":[],"mappings":";;;AA6BA;AACA;AACA;AACA,SAAgB,eAAe,CAAC,YAAsC;AACtE,IAAE,MAAM,MAAM,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,SAAS,EAAE,YAAY,CAAC,SAAS,CAAC,CAAC;AAClF,IACE,OAAO,UACL,QAAgB,EAChB,OAAe,EACf,QAAqD;AACvD;AAEY,QADV,IAAI;AACR,YAAM,MAAM,aAAa,GAAG,kBAAK,OAAO,CAAmB,CAAC;AAC5D,YAAM,IAAI,CAAC,YAAY,CAAC,SAAS,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE;AAC/D,gBAAQ,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;AAC7F,aAAO;AACP,YACM,MAAM,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC;AACpC,YAAM,MAAM,GAAG,GAAG,aAAa,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC;AAC/C,YACM,aAAa,CAAC,GAAG;AACvB,gBAAQ,aAAa,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,QAAQ,MAAM,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;AAC5F,YAAM,aAAa,CAAC,gBAAgB,GAAG,aAAa,CAAC,gBAAgB,IAAI,QAAQ,CAAC;AAClF,YAAM,aAAa,CAAC,SAAS,GAAG,CAAC,IAAI,aAAa,CAAC,SAAS,IAAI,EAAE,CAAC,EAAE,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AACnG,YAAM,CAAC,aAAa,CAAC,UAAU;AAC/B,gBAAQ,MAAA,MAAA,aAAa,CAAC,UAAU,mCAAI,YAAY,CAAC,UAAU,mCAAI,MAAC,OAAe,CAAC,QAAQ,0CAAE,KAAK;AAC/F,iBAAS,aAAa,CAAC,iBAAiB;AACxC,oBAAU,MAAA,aAAa,CAAC,iBAAiB,mCAAI,YAAY,CAAC,iBAAiB,CAAC,CAAC;AAC7E,YACM,MAAM;AACZ,iBAAS,MAAM,CAAC,aAAa,CAAC;AAC9B,iBAAS,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7C,iBAAS,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzB,SAAK;AAAC,QAAA,OAAO,GAAG,EAAE;AAClB,YAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpB,SAAK;AACL,KAAG,CAAC;AACJ,CAAC;AAED;AACA;AACA;AACA,SAAS,kBAAkB,CAAC,GAAY,EAAE,GAAc;AAAI,IAC1D,MAAM,SAAS,GAAqB;AACtC,QAAI;AACJ,YAAM,OAAO,EAAE,OAAO;AACtB,YAAM,QAAQ,EAAE,GAAG;AACnB,SAAK;AACL,KAAG,CAAC;AACJ,IAAE,IAAI,GAAG,EAAE;AACX,QAAI,SAAS,CAAC,IAAI,CAAC;AACnB,YAAM,OAAO,EAAE,QAAQ;AACvB,YAAM,QAAQ,EAAE,GAAG;AACnB,SAAK,CAAC,CAAC;AACP,KAAG;AACH,IACE,OAAO,SAAS,CAAC;AACnB;AACA;ACvFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACG","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Request, Response } from 'express';\n\nimport { StaticProvider } from '@angular/core';\nimport { CommonEngine, RenderOptions as CommonRenderOptions } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * These are the allowed options for the engine\n */\nexport type NgSetupOptions = Pick<\n  CommonRenderOptions,\n  'bootstrap' | 'providers' | 'publicPath' | 'inlineCriticalCss'\n>;\n\n/**\n * These are the allowed options for the render\n */\nexport interface RenderOptions extends CommonRenderOptions {\n  req: Request;\n  res?: Response;\n}\n\n/**\n * This is an express engine for handling Angular Applications\n */\nexport function ngExpressEngine(setupOptions: Readonly<NgSetupOptions>) {\n  const engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n\n  return function (\n    filePath: string,\n    options: object,\n    callback: (err?: Error | null, html?: string) => void,\n  ) {\n    try {\n      const renderOptions = { ...options } as RenderOptions;\n      if (!setupOptions.bootstrap && !renderOptions.bootstrap) {\n        throw new Error('You must pass in a NgModule or NgModuleFactory to be bootstrapped');\n      }\n\n      const req = renderOptions.req;\n      const res = renderOptions.res || req.res;\n\n      renderOptions.url =\n        renderOptions.url || `${req.protocol}://${req.get('host') || ''}${req.originalUrl}`;\n      renderOptions.documentFilePath = renderOptions.documentFilePath || filePath;\n      renderOptions.providers = [...(renderOptions.providers || []), getReqResProviders(req, res)];\n      (renderOptions.publicPath =\n        renderOptions.publicPath ?? setupOptions.publicPath ?? (options as any).settings?.views),\n        (renderOptions.inlineCriticalCss =\n          renderOptions.inlineCriticalCss ?? setupOptions.inlineCriticalCss);\n\n      engine\n        .render(renderOptions)\n        .then((html) => callback(null, html))\n        .catch(callback);\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req: Request, res?: Response): StaticProvider[] {\n  const providers: StaticProvider[] = [\n    {\n      provide: REQUEST,\n      useValue: req,\n    },\n  ];\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res,\n    });\n  }\n\n  return providers;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { ngExpressEngine, NgSetupOptions, RenderOptions } from './src/main';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}