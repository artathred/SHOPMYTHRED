{"ast":null,"code":"\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nvar _asyncToGenerator = require(\"/Users/artakoroushnia/Desktop/thred-web/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DeadlineFilterFactory = exports.DeadlineFilter = void 0;\n\nconst constants_1 = require(\"./constants\");\n\nconst filter_1 = require(\"./filter\");\n\nconst units = [['m', 1], ['S', 1000], ['M', 60 * 1000], ['H', 60 * 60 * 1000]];\n\nfunction getDeadline(deadline) {\n  const now = new Date().getTime();\n  const timeoutMs = Math.max(deadline - now, 0);\n\n  for (const [unit, factor] of units) {\n    const amount = timeoutMs / factor;\n\n    if (amount < 1e8) {\n      return String(Math.ceil(amount)) + unit;\n    }\n  }\n\n  throw new Error('Deadline is too far in the future');\n}\n\nclass DeadlineFilter extends filter_1.BaseFilter {\n  constructor(channel, callStream) {\n    var _a, _b;\n\n    super();\n    this.channel = channel;\n    this.callStream = callStream;\n    this.timer = null;\n    const callDeadline = callStream.getDeadline();\n\n    if (callDeadline instanceof Date) {\n      this.deadline = callDeadline.getTime();\n    } else {\n      this.deadline = callDeadline;\n    }\n\n    const now = new Date().getTime();\n    let timeout = this.deadline - now;\n\n    if (timeout <= 0) {\n      process.nextTick(() => {\n        callStream.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n      });\n    } else if (this.deadline !== Infinity) {\n      this.timer = setTimeout(() => {\n        callStream.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n      }, timeout);\n      (_b = (_a = this.timer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n  }\n\n  sendMetadata(metadata) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.deadline === Infinity) {\n        return metadata;\n      }\n      /* The input metadata promise depends on the original channel.connect()\n       * promise, so when it is complete that implies that the channel is\n       * connected */\n\n\n      const finalMetadata = yield metadata;\n      const timeoutString = getDeadline(_this.deadline);\n      finalMetadata.set('grpc-timeout', timeoutString);\n      return finalMetadata;\n    })();\n  }\n\n  receiveTrailers(status) {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    return status;\n  }\n\n}\n\nexports.DeadlineFilter = DeadlineFilter;\n\nclass DeadlineFilterFactory {\n  constructor(channel) {\n    this.channel = channel;\n  }\n\n  createFilter(callStream) {\n    return new DeadlineFilter(this.channel, callStream);\n  }\n\n}\n\nexports.DeadlineFilterFactory = DeadlineFilterFactory; //# sourceMappingURL=deadline-filter.js.map","map":{"version":3,"sources":["/Users/artakoroushnia/Desktop/thred-web/node_modules/@grpc/grpc-js/build/src/deadline-filter.js"],"names":["Object","defineProperty","exports","value","DeadlineFilterFactory","DeadlineFilter","constants_1","require","filter_1","units","getDeadline","deadline","now","Date","getTime","timeoutMs","Math","max","unit","factor","amount","String","ceil","Error","BaseFilter","constructor","channel","callStream","_a","_b","timer","callDeadline","timeout","process","nextTick","cancelWithStatus","Status","DEADLINE_EXCEEDED","Infinity","setTimeout","unref","call","sendMetadata","metadata","finalMetadata","timeoutString","set","receiveTrailers","status","clearTimeout","createFilter"],"mappings":"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","sourcesContent":["\"use strict\";\n/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeadlineFilterFactory = exports.DeadlineFilter = void 0;\nconst constants_1 = require(\"./constants\");\nconst filter_1 = require(\"./filter\");\nconst units = [\n    ['m', 1],\n    ['S', 1000],\n    ['M', 60 * 1000],\n    ['H', 60 * 60 * 1000],\n];\nfunction getDeadline(deadline) {\n    const now = new Date().getTime();\n    const timeoutMs = Math.max(deadline - now, 0);\n    for (const [unit, factor] of units) {\n        const amount = timeoutMs / factor;\n        if (amount < 1e8) {\n            return String(Math.ceil(amount)) + unit;\n        }\n    }\n    throw new Error('Deadline is too far in the future');\n}\nclass DeadlineFilter extends filter_1.BaseFilter {\n    constructor(channel, callStream) {\n        var _a, _b;\n        super();\n        this.channel = channel;\n        this.callStream = callStream;\n        this.timer = null;\n        const callDeadline = callStream.getDeadline();\n        if (callDeadline instanceof Date) {\n            this.deadline = callDeadline.getTime();\n        }\n        else {\n            this.deadline = callDeadline;\n        }\n        const now = new Date().getTime();\n        let timeout = this.deadline - now;\n        if (timeout <= 0) {\n            process.nextTick(() => {\n                callStream.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n            });\n        }\n        else if (this.deadline !== Infinity) {\n            this.timer = setTimeout(() => {\n                callStream.cancelWithStatus(constants_1.Status.DEADLINE_EXCEEDED, 'Deadline exceeded');\n            }, timeout);\n            (_b = (_a = this.timer).unref) === null || _b === void 0 ? void 0 : _b.call(_a);\n        }\n    }\n    async sendMetadata(metadata) {\n        if (this.deadline === Infinity) {\n            return metadata;\n        }\n        /* The input metadata promise depends on the original channel.connect()\n         * promise, so when it is complete that implies that the channel is\n         * connected */\n        const finalMetadata = await metadata;\n        const timeoutString = getDeadline(this.deadline);\n        finalMetadata.set('grpc-timeout', timeoutString);\n        return finalMetadata;\n    }\n    receiveTrailers(status) {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n        return status;\n    }\n}\nexports.DeadlineFilter = DeadlineFilter;\nclass DeadlineFilterFactory {\n    constructor(channel) {\n        this.channel = channel;\n    }\n    createFilter(callStream) {\n        return new DeadlineFilter(this.channel, callStream);\n    }\n}\nexports.DeadlineFilterFactory = DeadlineFilterFactory;\n//# sourceMappingURL=deadline-filter.js.map"]},"metadata":{},"sourceType":"script"}