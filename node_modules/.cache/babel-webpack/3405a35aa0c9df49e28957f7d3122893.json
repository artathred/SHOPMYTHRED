{"ast":null,"code":"import _asyncToGenerator from \"/Users/artakoroushnia/Desktop/thred-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { Product } from 'src/app/models/product.model';\nimport { isPlatformBrowser } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { ModelViewerComponent } from '../model-viewer/model-viewer.component';\nimport { Globals } from '../globals';\nimport { ProductInCart } from '../models/product-in-cart.model';\nimport { LoginComponent } from '../login/login.component';\nlet ProductComponent = class ProductComponent {\n  constructor(platformID, cdr, db, router, titleService, metaService, loadService, modalService, route, rootComponent, _router, spinner) {\n    this.platformID = platformID;\n    this.cdr = cdr;\n    this.db = db;\n    this.router = router;\n    this.titleService = titleService;\n    this.metaService = metaService;\n    this.loadService = loadService;\n    this.modalService = modalService;\n    this.route = route;\n    this.rootComponent = rootComponent;\n    this._router = _router;\n    this.spinner = spinner;\n    this.productToBuy = new ProductInCart();\n    this.quantityNumbers = [];\n    this.isSpinning = false;\n  }\n\n  storeInfo() {\n    return Globals.storeInfo;\n  }\n\n  availableCurrencies() {\n    return Globals.availableCurrencies;\n  }\n\n  selectedCurrency() {\n    return Globals.selectedCurrency;\n  }\n\n  templates() {\n    return Globals.availableTemplates;\n  }\n\n  availableTemplates() {\n    return Globals.availableTemplates;\n  }\n\n  selectedTemplate() {\n    return Globals.selectedTemplate;\n  }\n\n  products() {\n    return Globals.products;\n  }\n\n  selectedProduct() {\n    return Globals.selectedProduct;\n  }\n\n  cart() {\n    return Globals.cart;\n  }\n\n  selectedIndicator() {\n    var _a, _b, _c, _d, _e, _f;\n\n    let co = (_b = (_a = Globals.storeInfo) === null || _a === void 0 ? void 0 : _a.loading) === null || _b === void 0 ? void 0 : _b.color;\n    let bco = (_d = (_c = Globals.storeInfo) === null || _c === void 0 ? void 0 : _c.loading) === null || _d === void 0 ? void 0 : _d.bg_color;\n    let name = (_f = (_e = Globals.storeInfo) === null || _e === void 0 ? void 0 : _e.loading) === null || _f === void 0 ? void 0 : _f.name;\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\";\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\";\n    let indicator = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    };\n    return indicator;\n  }\n\n  ngOnInit() {\n    const productID = this.getProductID();\n    Globals.selectedProduct = undefined;\n    Globals.selectedTemplate = undefined;\n    Globals.selectedCurrency = undefined;\n    Globals.storeInfo.uid = undefined;\n    Globals.cart = undefined;\n\n    this.loadService.myCallback = () => this.checkLoad(productID, false);\n\n    this.checkLoad(productID, false);\n\n    for (let i = 0; i < 9; i++) {\n      this.quantityNumbers.push(i + 1);\n    } // this.route.navigate([], {\n    //   queryParams: {\n    //     id: productID\n    //   },\n    //   queryParamsHandling: 'merge',\n    // });\n\n  }\n\n  ngAfterViewInit() {}\n\n  open() {\n    if (isPlatformBrowser(this.platformID) && this.has3D()) {\n      const modalRef = this.modalService.open(ModelViewerComponent, {\n        size: \"lg\"\n      });\n      modalRef.componentInstance.data = {\n        \"template\": this.selectedTemplate(),\n        \"product\": this.selectedProduct()\n      };\n    }\n  }\n\n  has3D() {\n    var _a, _b;\n\n    return (_b = (_a = this.selectedTemplate()) === null || _a === void 0 ? void 0 : _a.has3D) !== null && _b !== void 0 ? _b : false;\n  }\n\n  nextweek() {\n    var d = new Date();\n    return this.format(new Date(d.getFullYear(), d.getMonth(), d.getDate() + 10));\n  }\n\n  format(d) {\n    return Globals.days[d.getDay()] + ', ' + Globals.months[d.getMonth()] + \" \" + d.getDate();\n  }\n\n  formattedInfo() {\n    var _a, _b;\n\n    return (_b = (_a = this.selectedTemplate()) === null || _a === void 0 ? void 0 : _a.moreInfo.replace(/\\\\n/g, \"<br>\")) !== null && _b !== void 0 ? _b : \"\";\n  }\n\n  sizes(popFirst) {\n    var _a, _b, _c, _d;\n\n    if (popFirst) {\n      return (_b = (_a = this.selectedTemplate()) === null || _a === void 0 ? void 0 : _a.sizes.slice(1)) !== null && _b !== void 0 ? _b : [];\n    }\n\n    return (_d = (_c = this.selectedTemplate()) === null || _c === void 0 ? void 0 : _c.sizes) !== null && _d !== void 0 ? _d : [];\n  }\n\n  isBrowser() {\n    return isPlatformBrowser(this.platformID);\n  }\n\n  selectedTheme() {\n    var _a, _b, _c, _d, _e, _f;\n\n    let co = (_b = (_a = Globals.storeInfo) === null || _a === void 0 ? void 0 : _a.colorStyle) === null || _b === void 0 ? void 0 : _b.btn_color;\n    let bco = (_d = (_c = Globals.storeInfo) === null || _c === void 0 ? void 0 : _c.colorStyle) === null || _d === void 0 ? void 0 : _d.bg_color;\n    let name = (_f = (_e = Globals.storeInfo) === null || _e === void 0 ? void 0 : _e.colorStyle) === null || _f === void 0 ? void 0 : _f.name;\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\";\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\";\n    var theme = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    };\n    return theme;\n  }\n\n  routeTo404() {\n    const storeName = this.getStoreName();\n\n    this._router.navigateByUrl(storeName + '/' + \"not-found\");\n  }\n\n  routeToMain404() {\n    this._router.navigateByUrl(\"not-found\");\n  }\n\n  showSpinner() {\n    if (!this.isSpinning) {\n      this.isSpinning = true;\n\n      if (isPlatformBrowser(this.platformID)) {\n        this.spinner.show();\n      }\n\n      ;\n      setTimeout(() => {\n        this.spinner.hide();\n      }, 1000);\n    }\n  }\n\n  hideSpinner() {\n    if (this.isSpinning) {\n      this.isSpinning = false; // this.spinner.hide()\n    }\n  }\n\n  checkLoad(productID, addCart) {\n    var _a;\n\n    if (Globals.selectedProduct == undefined) {\n      Globals.selectedProduct = new Product();\n      this.loadService.getPost(productID);\n      this.productToBuy.product = Globals.selectedProduct;\n    } else {\n      if (!Globals.selectedProduct.isAvailable) {\n        this.routeTo404();\n        console.log(\"OFOFOF\");\n        return;\n      } else {\n        console.log(Globals.selectedProduct);\n      }\n\n      this.addTags(Globals.selectedProduct.name, Globals.selectedProduct.url.toString(), this.formatPrice(Globals.selectedProduct.price / 100) + \". \" + Globals.selectedProduct.description, \"https://shopmythred.com\");\n\n      if (isPlatformBrowser(this.platformID)) {\n        if (Globals.storeInfo.uid == undefined) {\n          const storeName = this.getStoreName();\n          this.loadService.getUser(storeName);\n          return;\n        } else {\n          this.showSpinner();\n\n          if (Globals.storeInfo.uid != Globals.selectedProduct.uid) {\n            this.routeToMain404();\n          } else if (Globals.userInfo == undefined && isPlatformBrowser(this.platformID)) {\n            this.loadService.getCustomer();\n          } else if (Globals.selectedTemplate == undefined) {\n            this.rootComponent.setOptions();\n            this.loadService.getTemplate((_a = Globals.selectedProduct.productType) !== null && _a !== void 0 ? _a : \"\");\n            return;\n          } else if (Globals.selectedCurrency == undefined) {\n            console.log(\"countries\");\n            this.loadService.getCountries();\n            return;\n          } else if (Globals.cart == undefined) {\n            console.log(\"ok\");\n            Globals.cart = [];\n            this.loadService.getCart();\n          } else {\n            //ADD TAGS\n            //console.log(glob.selectedCurrency.flag)\n            if (addCart !== null && addCart !== void 0 ? addCart : false) {\n              console.log(\"ho\");\n              this.addToCart();\n            }\n\n            this.cdr.detectChanges();\n          }\n        }\n      }\n    }\n  }\n\n  selectSize(size, $event) {\n    // this.loadService.signOut()\n    this.productToBuy.size = size;\n    console.log(size);\n    let clickedElement = $event.target || $event.srcElement;\n    console.log(clickedElement.nodeName);\n\n    if (clickedElement.nodeName === \"BUTTON\") {\n      let isCertainButtonAlreadyActive = clickedElement.parentElement.querySelector(\".active\"); // if a Button already has Class: .active\n\n      if (isCertainButtonAlreadyActive) {\n        isCertainButtonAlreadyActive.classList.remove(\"active\");\n      }\n\n      clickedElement.className += \" active\";\n    }\n  }\n\n  selectQuantity(qty) {\n    this.productToBuy.quantity = Number(qty);\n  }\n\n  quantity() {\n    var _a;\n\n    return (_a = this.productToBuy.quantity) !== null && _a !== void 0 ? _a : \"1\";\n  }\n\n  closeBtn() {\n    this.modalService.dismissAll(\"success\");\n    Globals.cart = undefined;\n\n    this.loadService.myCallback = () => this.checkLoad(Globals.selectedProduct.productID, true);\n\n    this.checkLoad(this.getProductID(), true);\n  }\n\n  addToCart() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      if (Globals.selectedProduct == undefined) return;\n      _this.productToBuy.product = JSON.parse(JSON.stringify(Globals.selectedProduct));\n      let product = JSON.parse(JSON.stringify(_this.productToBuy));\n      let mappedData = {\n        \"UID\": (_a = product.product) === null || _a === void 0 ? void 0 : _a.uid,\n        \"Size\": product.size,\n        \"Qty\": product.quantity,\n        \"Timestamp\": new Date(),\n        \"Post_ID\": (_b = product.product) === null || _b === void 0 ? void 0 : _b.productID\n      };\n\n      if (yield _this.loadService.authenticated()) {\n        console.log(\"gogog\");\n        yield _this.loadService.addToCart(mappedData);\n        (_c = Globals.cart) === null || _c === void 0 ? void 0 : _c.push(product);\n\n        _this.rootComponent.cdr.detectChanges();\n      } else {\n        _this.loadService.myCallback = () => _this.closeBtn();\n\n        let ngbModalOptions = {\n          size: \"lg\"\n        };\n\n        const modalRef = _this.modalService.open(LoginComponent, ngbModalOptions);\n\n        modalRef.componentInstance.authMode = 1;\n      } // let data = {\n      //     \"Cart_List\" : FieldValue.arrayUnion([mappedData])\n      // }\n      // // Analytics.logEvent(\"added_to_cart\", parameters: [\n      // //     \"name\": \"Add to Cart\",\n      // //     \"full_text\": \"User added to cart\"\n      // // ])\n      // Firestore.firestore().collection(\"Users/\\(uid)/Cart_Info\").document(\"Cart_List\").setData(data, merge: true, completion: { error in\n      //     if let err = error{\n      //         completed()\n      //         print(err.localizedDescription)\n      //     }\n      //     else{\n      //         completed()\n      //     }\n      // })\n\n    })();\n  }\n\n  addTags(title, imgUrl, description, url) {\n    var _a, _b;\n\n    this.metaService.updateTag({\n      property: 'og:title',\n      content: title\n    });\n    this.metaService.updateTag({\n      property: 'og:image',\n      content: imgUrl\n    });\n    this.metaService.updateTag({\n      property: 'og:url',\n      content: url\n    });\n    this.metaService.updateTag({\n      property: 'og:description',\n      content: description\n    });\n    var newTitle = title;\n\n    if (Globals.storeInfo.fullName) {\n      newTitle += (_b = \" - \" + ((_a = Globals.storeInfo) === null || _a === void 0 ? void 0 : _a.fullName)) !== null && _b !== void 0 ? _b : \"\";\n    }\n\n    this.titleService.setTitle(newTitle);\n    this.metaService.updateTag({\n      property: 'description',\n      content: description\n    });\n  }\n\n  formatPrice(price) {\n    var _a, _b, _c, _d;\n\n    var priceAsString = new String((price * ((_b = (_a = this.selectedCurrency()) === null || _a === void 0 ? void 0 : _a.rate) !== null && _b !== void 0 ? _b : 1)).toFixed(2));\n    let index = priceAsString.indexOf(\".\");\n\n    switch (index) {\n      case priceAsString.length - 1:\n        priceAsString += \"00\";\n        break;\n\n      case priceAsString.length - 2:\n        priceAsString += \"0\";\n        break;\n\n      default:\n        break;\n    }\n\n    return this.numberWithCommas(this.getCurrencyForCountry(((_d = (_c = this.selectedCurrency()) === null || _c === void 0 ? void 0 : _c.name) !== null && _d !== void 0 ? _d : \"US\") != \"US\", this.selectedCurrency()) + priceAsString);\n  }\n\n  numberWithCommas(x) {\n    return x.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  getURL(uid, productID) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FProducts%2F' + productID + '%2Flink_' + productID + '.png?alt=media';\n  }\n\n  getCurrencyForCountry(shouldShowName, country) {\n    var _a, _b;\n\n    var returnItem = (_a = country === null || country === void 0 ? void 0 : country.currency_symbol) !== null && _a !== void 0 ? _a : \"$\";\n    if (shouldShowName) returnItem = ((_b = country === null || country === void 0 ? void 0 : country.name) !== null && _b !== void 0 ? _b : \"US\") + \" \" + returnItem;\n    return returnItem;\n  }\n\n  getStoreName() {\n    const routeParams = this.router.snapshot.paramMap;\n    const storeID = routeParams.get('user');\n    const productID = routeParams.get('product'); // Find the product that correspond with the id provided in route.\n\n    console.log(storeID);\n    console.log(productID);\n    return storeID;\n  }\n\n  getProductID() {\n    const routeParams = this.router.snapshot.paramMap;\n    const productID = routeParams.get('product'); // Find the product that correspond with the id provided in route.\n\n    console.log(productID);\n    return productID;\n  }\n\n};\nProductComponent = __decorate([Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n}), __param(0, Inject(PLATFORM_ID))], ProductComponent);\nexport { ProductComponent };","map":{"version":3,"sources":["/Users/artakoroushnia/Desktop/thred-web/src/app/product/product.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ChangeDetectorRef, Component, OnInit, Inject, AfterViewInit } from '@angular/core';\nimport { AngularFirestore, DocumentSnapshot, DocumentData, Query, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport { Product } from 'src/app/models/product.model';\nimport { Store } from 'src/app/models/store.model';\n\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Template } from '../models/template.model';\nimport { TemplateSide } from '../models/template-side.model';\nimport { Color } from '../models/color.model';\nimport { Country } from '../models/shipping-country.model';\nimport { Title, Meta } from '@angular/platform-browser';  \nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { PLATFORM_ID } from '@angular/core';\nimport { LoadService, Dict } from '../services/load.service';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { ModelViewerComponent } from '../model-viewer/model-viewer.component';\nimport { Globals } from '../globals';\nimport { ProductInCart } from '../models/product-in-cart.model';\nimport { LoginComponent } from '../login/login.component';\nimport { AppComponent } from '../app.component';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit, AfterViewInit {\n\n  storeInfo(){return Globals.storeInfo}\n  availableCurrencies(){return Globals.availableCurrencies}\n  selectedCurrency(){return Globals.selectedCurrency}\n  templates(){return Globals.availableTemplates}\n  availableTemplates(){return Globals.availableTemplates}\n  selectedTemplate(){return Globals.selectedTemplate}\n  products(){return Globals.products}\n  selectedProduct(){return Globals.selectedProduct}\n  cart(){\n    return Globals.cart\n  }\n\n  productToBuy = new ProductInCart()\n  \n  quantityNumbers: Array<number> = []\n\n  \n  constructor(    \n    @Inject(PLATFORM_ID) private platformID: Object,\n    private cdr: ChangeDetectorRef,\n    private db: AngularFirestore,\n    private router: ActivatedRoute,\n    private titleService: Title, \n    private metaService: Meta,\n    private loadService: LoadService,\n    private modalService: NgbModal,\n    private route: Router,\n    private rootComponent: AppComponent,\n    private _router: Router,\n    private spinner: NgxSpinnerService,\n  ) { }\n\n  selectedIndicator(){\n\n    let co = Globals.storeInfo?.loading?.color\n    let bco = Globals.storeInfo?.loading?.bg_color\n    let name = Globals.storeInfo?.loading?.name\n    \n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\"\n\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\"\n\n    let indicator: Dict<string> = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    }\n    return indicator\n  }\n\n  ngOnInit(): void {\n    const productID = this.getProductID()\n\n    Globals.selectedProduct = undefined\n    Globals.selectedTemplate = undefined\n    Globals.selectedCurrency = undefined\n    Globals.storeInfo.uid = undefined\n    Globals.cart = undefined\n\n    this.loadService.myCallback = () => this.checkLoad(productID, false)\n    \n    this.checkLoad(productID, false)\n\n    for (let i = 0; i < 9; i++) {\n        this.quantityNumbers.push(i + 1)\n    }\n    // this.route.navigate([], {\n    //   queryParams: {\n    //     id: productID\n    //   },\n    //   queryParamsHandling: 'merge',\n    // });\n  }\n\n  ngAfterViewInit(): void{\n    \n  }\n\n\n  open() {\n    if (isPlatformBrowser(this.platformID) && this.has3D()){\n      \n      const modalRef = this.modalService.open(ModelViewerComponent, {size : \"lg\"});\n      modalRef.componentInstance.data = {\n        \"template\": this.selectedTemplate(),\n        \"product\": this.selectedProduct()\n      };\n    }\n  }\n\n  has3D(){\n    return this.selectedTemplate()?.has3D ?? false\n  }\n\n  nextweek(){\n    var d = new Date();\n    return this.format(new Date(d.getFullYear(), d.getMonth(), d.getDate() + 10))\n  }\n\n  format(d: Date) {\n    return Globals.days[d.getDay()] + ', ' + Globals.months[d.getMonth()] + \" \" + d.getDate()\n  }\n\n  formattedInfo(){\n    return this.selectedTemplate()?.moreInfo.replace(/\\\\n/g, \"<br>\") ?? \"\";\n  }\n\n  sizes(popFirst: boolean){\n    if (popFirst){\n      return this.selectedTemplate()?.sizes.slice(1) ?? []\n    }\n    return this.selectedTemplate()?.sizes ?? []\n  }\n\n  isBrowser(){\n    return isPlatformBrowser(this.platformID)\n  }\n\n  selectedTheme(){\n    \n    let co = Globals.storeInfo?.colorStyle?.btn_color\n    let bco = Globals.storeInfo?.colorStyle?.bg_color\n    let name = Globals.storeInfo?.colorStyle?.name\n\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\"\n\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\"\n\n    var theme: Dict<string> = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    }\n    return theme\n  }\n\n  routeTo404(){\n    const storeName = this.getStoreName()\n    this._router.navigateByUrl(storeName + '/' + \"not-found\")\n  }\n\n  routeToMain404(){\n    this._router.navigateByUrl(\"not-found\")\n  }\n\n  isSpinning = false\n\n    showSpinner(){\n      if (!this.isSpinning){\n        this.isSpinning = true\n        if (isPlatformBrowser(this.platformID)){\n          this.spinner.show()\n        };\n  \n        setTimeout(() => {\n            this.spinner.hide()\n        }, 1000);\n      }\n    }\n  \n    hideSpinner(){\n      if (this.isSpinning){\n        this.isSpinning = false\n        // this.spinner.hide()\n      }\n    }\n\n  checkLoad(productID: string, addCart?: boolean){\n      if (Globals.selectedProduct == undefined){\n        Globals.selectedProduct = new Product()\n        this.loadService.getPost(productID)\n        this.productToBuy.product = Globals.selectedProduct\n      }\n      else{\n        if (!(Globals.selectedProduct.isAvailable)){\n          this.routeTo404()\n          console.log(\"OFOFOF\")\n          return\n        }\n        else{\n          console.log(Globals.selectedProduct)\n        }\n        this.addTags(Globals.selectedProduct.name, Globals.selectedProduct.url.toString(), this.formatPrice(Globals.selectedProduct.price / 100) + \". \" + Globals.selectedProduct.description, \"https://shopmythred.com\")\n        if (isPlatformBrowser(this.platformID)){\n          if (Globals.storeInfo.uid == undefined){\n            const storeName = this.getStoreName()\n            this.loadService.getUser(storeName)\n            return\n          }\n          else{\n            this.showSpinner()\n            if (Globals.storeInfo.uid != Globals.selectedProduct.uid){\n              this.routeToMain404()\n            }\n            else if (Globals.userInfo == undefined && isPlatformBrowser(this.platformID)){\n              this.loadService.getCustomer()\n            }\n            else if (Globals.selectedTemplate == undefined){\n              this.rootComponent.setOptions()\n              this.loadService.getTemplate(Globals.selectedProduct!.productType ?? \"\")\n              return\n            }\n            else if (Globals.selectedCurrency == undefined){\n              console.log(\"countries\")\n              this.loadService.getCountries()\n              return\n            }\n            else if (Globals.cart == undefined){\n  \n              console.log(\"ok\")\n              Globals.cart = []\n              this.loadService.getCart()\n            }\n            else{\n              //ADD TAGS\n              //console.log(glob.selectedCurrency.flag)\n  \n              if (addCart ?? false){\n                console.log(\"ho\")\n                this.addToCart()\n              }\n  \n              this.cdr.detectChanges()\n            }\n          }\n        }\n      }\n  }\n\n  selectSize(size: string, $event: { target: any; srcElement: any; }){\n\n    // this.loadService.signOut()\n\n    this.productToBuy.size = size\n    console.log(size)\n    let clickedElement = $event.target || $event.srcElement;\n\n    console.log(clickedElement.nodeName)\n    if( clickedElement.nodeName === \"BUTTON\" ) {\n\n      let isCertainButtonAlreadyActive = clickedElement.parentElement.querySelector(\".active\");\n      // if a Button already has Class: .active\n      if( isCertainButtonAlreadyActive ) {\n        isCertainButtonAlreadyActive.classList.remove(\"active\");\n      }\n      clickedElement.className += \" active\";\n    }\n  }\n  selectQuantity(qty?: number){\n\n    this.productToBuy.quantity = Number(qty)\n  }\n\n  quantity(){\n\n    return this.productToBuy.quantity ?? \"1\"\n  }\n\n  closeBtn(){\n    this.modalService.dismissAll(\"success\")\n    Globals.cart = undefined\n    this.loadService.myCallback = () => this.checkLoad(Globals.selectedProduct!.productID, true)\n    this.checkLoad(this.getProductID(), true)\n  }\n\n  async addToCart(){\n        \n    if (Globals.selectedProduct! == undefined)return;\n\n\n    this.productToBuy.product = JSON.parse(JSON.stringify(Globals.selectedProduct))\n\n    let product = JSON.parse(JSON.stringify(this.productToBuy)) as ProductInCart\n\n    let mappedData = {\n        \"UID\" : product.product?.uid,\n        \"Size\" : product.size,\n        \"Qty\" : product.quantity,\n        \"Timestamp\" : new Date(),\n        \"Post_ID\" : product.product?.productID\n    }\n    \n    if (await this.loadService.authenticated()){\n      console.log(\"gogog\")\n      await this.loadService.addToCart(mappedData)\n      Globals.cart?.push(product)\n      this.rootComponent.cdr.detectChanges()\n    }\n    else{\n      this.loadService.myCallback = () => this.closeBtn()\n      let ngbModalOptions: NgbModalOptions = {\n        size: \"lg\"\n      };\n\n      const modalRef = this.modalService.open(LoginComponent, ngbModalOptions);\n      \n      \n\n      modalRef.componentInstance.authMode = 1\n    }\n\n\n\n\n\n\n\n\n\n    // let data = {\n    //     \"Cart_List\" : FieldValue.arrayUnion([mappedData])\n    // }\n    \n    // // Analytics.logEvent(\"added_to_cart\", parameters: [\n    // //     \"name\": \"Add to Cart\",\n    // //     \"full_text\": \"User added to cart\"\n    // // ])\n    \n    // Firestore.firestore().collection(\"Users/\\(uid)/Cart_Info\").document(\"Cart_List\").setData(data, merge: true, completion: { error in\n    //     if let err = error{\n    //         completed()\n    //         print(err.localizedDescription)\n    //     }\n    //     else{\n    //         completed()\n    //     }\n    // })\n}\n\n  addTags(title: string, imgUrl: string, description: string, url: string){\n    this.metaService.updateTag({property: 'og:title', content: title});\n    this.metaService.updateTag({property: 'og:image', content: imgUrl});\n    this.metaService.updateTag({property: 'og:url', content: url})\n    this.metaService.updateTag({property: 'og:description', content: description})\n    var newTitle = title\n    if (Globals.storeInfo.fullName){\n      newTitle += \" - \" + Globals.storeInfo?.fullName ?? \"\"\n    }\n    this.titleService.setTitle(newTitle)\n    this.metaService.updateTag({property: 'description', content: description})\n  }\n\n\n  formatPrice(price: number){\n    var priceAsString = new String((price * (this.selectedCurrency()?.rate ?? 1)).toFixed(2))\n    let index = priceAsString.indexOf(\".\")\n\n    switch (index){\n    case priceAsString.length - 1:\n        priceAsString += \"00\"\n        break\n    case priceAsString.length - 2:\n        priceAsString += \"0\"\n        break\n    default:\n\n        break\n    }\n    return this.numberWithCommas(this.getCurrencyForCountry((this.selectedCurrency()?.name ?? \"US\") != \"US\", this.selectedCurrency()) + priceAsString)\n  }\n\n  numberWithCommas(x: string) {\n    return x.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\ngetURL(uid: string, productID: string){\n  return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FProducts%2F' + productID + '%2Flink_' + productID + '.png?alt=media'\n}\n\n\ngetCurrencyForCountry(shouldShowName: boolean, country?: Country){\n\n  var returnItem = country?.currency_symbol ?? \"$\"\n  if (shouldShowName) returnItem = (country?.name ?? \"US\") + \" \" + returnItem\n\n  return returnItem\n}\n\n  getStoreName(){\n    const routeParams = this.router.snapshot.paramMap;\n    const storeID = routeParams.get('user') as string;\n    const productID = routeParams.get('product') as string;\n\n  // Find the product that correspond with the id provided in route.\n    console.log(storeID)\n    console.log(productID)\n    return storeID\n  }\n\n  getProductID(){\n    const routeParams = this.router.snapshot.paramMap;\n    const productID = routeParams.get('product') as string;\n\n  // Find the product that correspond with the id provided in route.\n    console.log(productID)\n    return productID\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}