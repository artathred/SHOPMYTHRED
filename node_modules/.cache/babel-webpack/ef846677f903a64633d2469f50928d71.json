{"ast":null,"code":"import _asyncToGenerator from \"/Users/artakoroushnia/Desktop/thred-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate, __param } from \"tslib\";\nimport { Component, Inject, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { Globals } from '../globals';\nimport { isPlatformBrowser } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Validators } from '@angular/forms';\nimport { CropperComponent } from '../cropper/cropper.component';\nimport { DesignComponent } from '../design/design.component';\nlet AdminViewComponent = class AdminViewComponent {\n  constructor(platformID, cdr, router, titleService, metaService, loadService, rootComponent, fb, modalService, spinner, _router) {\n    this.platformID = platformID;\n    this.cdr = cdr;\n    this.router = router;\n    this.titleService = titleService;\n    this.metaService = metaService;\n    this.loadService = loadService;\n    this.rootComponent = rootComponent;\n    this.fb = fb;\n    this.modalService = modalService;\n    this.spinner = spinner;\n    this._router = _router;\n    this.state = 'default';\n    this.panels = [{\n      \"Category\": \"SETTINGS\",\n      \"Options\": [{\n        \"Title\": \"PROFILE\",\n        \"Icon\": \"person_outline\",\n        \"Active\": true\n      }, {\n        \"Title\": \"STORE\",\n        \"Icon\": \"shopping_bag\",\n        \"Active\": false\n      }, {\n        \"Title\": \"PRODUCTS\",\n        \"Icon\": \"brush\",\n        \"Active\": false\n      }, {\n        \"Title\": \"PRIVACY\",\n        \"Icon\": \"admin_panel_settings\",\n        \"Active\": false\n      }]\n    }, {\n      \"Category\": \"DASHBOARD\",\n      \"Options\": [{\n        \"Title\": \"ANALYTICS\",\n        \"Icon\": \"person_outline\",\n        \"Active\": false\n      }]\n    }];\n    this.defaultBio = \"\";\n    this.color = \"\";\n    this.bg_color = \"\";\n    this.theme = 'Light';\n    this.userForm = this.fb.group({\n      username: [null, Validators.required],\n      full_name: [null, Validators.required],\n      bio: [null],\n      profile_pic: [null]\n    });\n    this.storeForm = this.fb.group({\n      slogan: [null, Validators.required],\n      loadingIndicator: [null, Validators.required],\n      loadingIndicatorColor: [null, Validators.required],\n      loadingIndicatorBgColor: [null, Validators.required],\n      themeImg: [null],\n      homeImg: [null],\n      actionImg: [null],\n      storeTheme: [null, Validators.required],\n      font: [null, Validators.required]\n    });\n    this.classApplied = false;\n    this.chartOptions = {\n      series: [{\n        name: \"Income\",\n        type: \"column\",\n        data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n      }, {\n        name: \"Cashflow\",\n        type: \"column\",\n        data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n      }, {\n        name: \"Revenue\",\n        type: \"line\",\n        data: [20, 29, 37, 36, 44, 45, 50, 58]\n      }],\n      chart: {\n        height: 350,\n        type: \"line\",\n        stacked: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [1, 1, 4]\n      },\n      title: {\n        text: \"XYZ - Stock Analysis (2009 - 2016)\",\n        align: \"left\",\n        offsetX: 110\n      },\n      xaxis: {\n        categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\n      },\n      yaxis: [{\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: \"#008FFB\"\n        },\n        labels: {\n          style: {\n            colors: \"#008FFB\"\n          }\n        },\n        title: {\n          text: \"Income (thousand crores)\",\n          style: {\n            color: \"#008FFB\"\n          }\n        },\n        tooltip: {\n          enabled: true\n        }\n      }, {\n        seriesName: \"Income\",\n        opposite: true,\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: \"#00E396\"\n        },\n        labels: {\n          style: {\n            colors: \"#00E396\"\n          }\n        },\n        title: {\n          text: \"Operating Cashflow (thousand crores)\",\n          style: {\n            color: \"#00E396\"\n          }\n        }\n      }, {\n        seriesName: \"Revenue\",\n        opposite: true,\n        axisTicks: {\n          show: true\n        },\n        axisBorder: {\n          show: true,\n          color: \"#FEB019\"\n        },\n        labels: {\n          style: {\n            colors: \"#FEB019\"\n          }\n        },\n        title: {\n          text: \"Revenue (thousand crores)\",\n          style: {\n            color: \"#FEB019\"\n          }\n        }\n      }],\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: \"topLeft\",\n          offsetY: 30,\n          offsetX: 60\n        }\n      },\n      legend: {\n        horizontalAlign: \"left\",\n        offsetX: 40\n      }\n    }; // this.chart!.yaxis.formatter = function (value) {\n    //   return value + \"$\";\n    // }\n\n    console.log(\"spamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssm\");\n  }\n\n  loaders() {\n    return Globals.loaders;\n  }\n\n  storeInfo() {\n    return Globals.storeInfo;\n  }\n\n  userInfo() {\n    return Globals.userInfo;\n  }\n\n  availableCurrencies() {\n    return Globals.availableCurrencies;\n  }\n\n  selectedCurrency() {\n    return Globals.selectedCurrency;\n  }\n\n  templates() {\n    return Globals.availableTemplates;\n  }\n\n  availableTemplates() {\n    return Globals.availableTemplates;\n  }\n\n  products() {\n    var _a;\n\n    return (_a = Globals.products) === null || _a === void 0 ? void 0 : _a.sort(function (a, b) {\n      if (a.timestamp > b.timestamp) {\n        return -1;\n      }\n\n      if (a.timestamp < b.timestamp) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  themes() {\n    return Globals.themes;\n  }\n\n  fonts() {\n    return Globals.fonts;\n  }\n\n  selectedIndicator() {\n    let color = this.storeForm.controls.loadingIndicatorColor.value;\n    let bg_color = this.storeForm.controls.loadingIndicatorBgColor.value;\n    let indicator = {\n      \"name\": this.storeForm.controls.loadingIndicator.value,\n      \"color\": color,\n      \"bg_color\": bg_color\n    };\n    return indicator;\n  }\n\n  formatPrice(price) {\n    var priceAsString = new String((price * Globals.selectedCurrency.rate).toFixed(2));\n    let index = priceAsString.indexOf(\".\");\n\n    switch (index) {\n      case priceAsString.length - 1:\n        priceAsString += \"00\";\n        break;\n\n      case priceAsString.length - 2:\n        priceAsString += \"0\";\n        break;\n\n      default:\n        break;\n    }\n\n    return this.getCurrencyForCountry(Globals.selectedCurrency, Globals.selectedCurrency.name != \"US\") + priceAsString;\n  }\n\n  getCurrencyForCountry(country, shouldShowName) {\n    var returnItem = country.currency_symbol;\n    if (shouldShowName) returnItem = country.name + \" \" + returnItem;\n    return returnItem;\n  }\n\n  showSpinner() {\n    if (isPlatformBrowser(this.platformID)) {\n      this.spinner.show();\n    }\n\n    ;\n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      if (isPlatformBrowser(this.platformID)) {\n        this.spinner.hide();\n      }\n\n      ;\n    }, 2000);\n  }\n\n  getSelectedPanel() {\n    let selected = this.panels.filter(panel => panel.Options.filter(option => option.Active).length != 0)[0].Options.filter(option => option.Active)[0];\n    console.log(selected.Title);\n    return selected;\n  }\n\n  setForm() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6;\n\n    this.userForm.controls.username.setValue((_b = (_a = Globals.userInfo) === null || _a === void 0 ? void 0 : _a.username) !== null && _b !== void 0 ? _b : \"\");\n    this.userForm.controls.full_name.setValue((_d = (_c = Globals.userInfo) === null || _c === void 0 ? void 0 : _c.fullName) !== null && _d !== void 0 ? _d : \"\");\n    this.userForm.controls.bio.setValue((_f = (_e = Globals.userInfo) === null || _e === void 0 ? void 0 : _e.bio) !== null && _f !== void 0 ? _f : \"\");\n    this.storeForm.controls.slogan.setValue((_h = (_g = Globals.userInfo) === null || _g === void 0 ? void 0 : _g.slogan) !== null && _h !== void 0 ? _h : \"\");\n    this.storeForm.controls.loadingIndicator.setValue((_l = (_k = (_j = Globals.userInfo) === null || _j === void 0 ? void 0 : _j.loading) === null || _k === void 0 ? void 0 : _k.name) !== null && _l !== void 0 ? _l : \"\");\n    this.storeForm.controls.themeImg.setValue((_o = (_m = Globals.userInfo) === null || _m === void 0 ? void 0 : _m.themeLink) === null || _o === void 0 ? void 0 : _o.toString());\n    this.storeForm.controls.homeImg.setValue((_q = (_p = Globals.userInfo) === null || _p === void 0 ? void 0 : _p.homeLink) === null || _q === void 0 ? void 0 : _q.toString());\n    this.storeForm.controls.actionImg.setValue((_s = (_r = Globals.userInfo) === null || _r === void 0 ? void 0 : _r.actionLink) === null || _s === void 0 ? void 0 : _s.toString());\n    this.storeForm.controls.font.setValue((_t = Globals.userInfo) === null || _t === void 0 ? void 0 : _t.fontName);\n    console.log((_v = (_u = Globals.userInfo) === null || _u === void 0 ? void 0 : _u.actionLink) === null || _v === void 0 ? void 0 : _v.toString());\n    this.storeForm.controls.storeTheme.setValue((_x = (_w = Globals.userInfo) === null || _w === void 0 ? void 0 : _w.colorStyle) === null || _x === void 0 ? void 0 : _x.name.toString());\n    this.theme = (_0 = (_z = (_y = Globals.userInfo) === null || _y === void 0 ? void 0 : _y.colorStyle) === null || _z === void 0 ? void 0 : _z.name.toString()) !== null && _0 !== void 0 ? _0 : 'Light';\n    console.log((_2 = (_1 = Globals.userInfo) === null || _1 === void 0 ? void 0 : _1.colorStyle) === null || _2 === void 0 ? void 0 : _2.name.toString());\n    let co = (_4 = (_3 = Globals.userInfo) === null || _3 === void 0 ? void 0 : _3.loading) === null || _4 === void 0 ? void 0 : _4.color;\n    let bco = (_6 = (_5 = Globals.userInfo) === null || _5 === void 0 ? void 0 : _5.loading) === null || _6 === void 0 ? void 0 : _6.bg_color;\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\";\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\";\n    this.storeForm.controls.loadingIndicatorColor.setValue(color !== null && color !== void 0 ? color : []);\n    this.storeForm.controls.loadingIndicatorBgColor.setValue(bg_color !== null && bg_color !== void 0 ? bg_color : []);\n  }\n\n  isBase64(str) {\n    try {\n      return btoa(atob(str)) == str;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  selectColor(value, isPrimary) {\n    console.log(value);\n\n    if (isPrimary) {\n      this.storeForm.controls.loadingIndicatorColor.setValue(value !== null && value !== void 0 ? value : []);\n    } else {\n      this.storeForm.controls.loadingIndicatorBgColor.setValue(value !== null && value !== void 0 ? value : []);\n    }\n\n    this.showSpinner();\n  }\n\n  fileChangeEvent(event, type = \"Profile\") {\n    const modalRef = this.modalService.open(CropperComponent, {\n      size: \"lg\"\n    });\n    modalRef.componentInstance.imageChangedEvent = event;\n    console.log(type);\n\n    if (type == \"Profile\") {\n      modalRef.componentInstance.ratio = 1;\n      modalRef.componentInstance.width = 200;\n      modalRef.componentInstance.height = 200;\n      modalRef.dismissed.subscribe(img => {\n        if (img != '0') {\n          this.userForm.controls.profile_pic.setValue(img);\n        }\n      });\n    } else if (type == \"Background\") {\n      modalRef.componentInstance.ratio = 1.78;\n      modalRef.componentInstance.width = 2560;\n      modalRef.componentInstance.height = 1440;\n      modalRef.dismissed.subscribe(img => {\n        if (img != '0') {\n          this.storeForm.controls.themeImg.setValue(img);\n        }\n      });\n    } else if (type == \"Promotion\") {\n      modalRef.componentInstance.ratio = 1.78;\n      modalRef.componentInstance.width = 2560;\n      modalRef.componentInstance.height = 1440;\n      modalRef.dismissed.subscribe(img => {\n        if (img != '0') {\n          this.storeForm.controls.homeImg.setValue(img);\n        }\n      });\n    } else if (type == \"Action\") {\n      modalRef.componentInstance.ratio = 1.78;\n      modalRef.componentInstance.width = 2560;\n      modalRef.componentInstance.height = 1440;\n      modalRef.dismissed.subscribe(img => {\n        if (img != '0') {\n          this.storeForm.controls.actionImg.setValue(img);\n        }\n      });\n    }\n  }\n\n  getImgSrc() {\n    var _a;\n\n    if (this.userForm.controls.profile_pic.value) {\n      return this.userForm.controls.profile_pic.value;\n    }\n\n    return (_a = this.userInfo()) === null || _a === void 0 ? void 0 : _a.profileLink;\n  }\n\n  getUsername() {\n    var _a, _b;\n\n    if (this.userForm.controls.full_name.value) {\n      return this.userForm.controls.full_name.value;\n    }\n\n    return (_b = (_a = this.userInfo()) === null || _a === void 0 ? void 0 : _a.fullName) !== null && _b !== void 0 ? _b : \"Brian's Tees\";\n  }\n\n  saveProfile() {\n    if (this.userForm.valid) {\n      let data = {\n        username: this.userForm.controls.username.value,\n        full_name: this.userForm.controls.full_name.value,\n        bio: this.userForm.controls.bio.value,\n        profile_pic: this.userForm.controls.profile_pic.value\n      };\n\n      this.loadService.myCallback = () => this.toast(\"Profile Information Updated!\");\n\n      this.loadService.saveUser(data);\n    } else {\n      console.log(\"man\");\n    }\n  }\n\n  joinColor(color) {\n    let c = color.replace(\"rgb\", \"\").replace(\"a\", \"\").replace(\"(\", \"\").replace(\")\", \"\").split(\",\");\n    var returnArr = new Array();\n    c.forEach(element => {\n      returnArr.push(element.trim());\n    });\n\n    if (returnArr.length < 4) {\n      for (let i = 0; i < 4 - returnArr.length; i++) {\n        returnArr.push(\"1\");\n      }\n    }\n\n    return returnArr.join(\",\");\n  }\n\n  numToColor(color) {\n    var returnArr = new Array();\n    color.forEach(color => {\n      returnArr.push(color.toString());\n    });\n    return returnArr.join(\",\");\n  }\n\n  selectedTheme() {\n    var _a, _b, _c, _d, _e, _f;\n\n    let co = (_b = (_a = Globals.storeInfo) === null || _a === void 0 ? void 0 : _a.colorStyle) === null || _b === void 0 ? void 0 : _b.btn_color;\n    let bco = (_d = (_c = Globals.storeInfo) === null || _c === void 0 ? void 0 : _c.colorStyle) === null || _d === void 0 ? void 0 : _d.bg_color;\n    let name = (_f = (_e = Globals.storeInfo) === null || _e === void 0 ? void 0 : _e.colorStyle) === null || _f === void 0 ? void 0 : _f.name;\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\";\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\";\n    var theme = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    };\n    return theme;\n  }\n\n  saveStore() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      if (_this.storeForm.valid) {\n        var color = _this.joinColor(_this.storeForm.controls.loadingIndicatorColor.value);\n\n        var bg_color = _this.joinColor(_this.storeForm.controls.loadingIndicatorBgColor.value);\n\n        var data = {\n          slogan: _this.storeForm.controls.slogan.value,\n          indicator: {\n            name: _this.storeForm.controls.loadingIndicator.value,\n            color: color,\n            bg_color: bg_color\n          },\n          loadingIndicatorColor: color,\n          loadingIndicatorBgColor: bg_color,\n          font: _this.storeForm.controls.font.value\n        };\n        var selectedTheme = _this.storeForm.controls.storeTheme.value;\n        let matchingTheme = (_a = _this.themes()) === null || _a === void 0 ? void 0 : _a.filter(theme => theme.name == selectedTheme)[0];\n\n        if (matchingTheme) {\n          var color = _this.numToColor(matchingTheme.btn_color);\n\n          var bg_color = _this.numToColor(matchingTheme.bg_color);\n\n          data.theme = {\n            back_code: matchingTheme.back_code,\n            text_code: matchingTheme.text_code,\n            bg_color: bg_color,\n            btn_color: color,\n            name: matchingTheme.name\n          };\n        }\n\n        var images = new Array();\n\n        if (_this.storeForm.controls.themeImg.value && _this.isBase64(_this.storeForm.controls.themeImg.value.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''))) {\n          images.push({\n            \"type\": \"theme\",\n            \"img\": _this.storeForm.controls.themeImg.value\n          });\n        }\n\n        if (_this.storeForm.controls.homeImg.value && _this.isBase64(_this.storeForm.controls.homeImg.value.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''))) {\n          images.push({\n            \"type\": \"home\",\n            \"img\": _this.storeForm.controls.homeImg.value\n          });\n        }\n\n        if (_this.storeForm.controls.actionImg.value && _this.isBase64(_this.storeForm.controls.actionImg.value.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''))) {\n          console.log(_this.storeForm.controls.actionImg.value);\n          images.push({\n            \"type\": \"action\",\n            \"img\": _this.storeForm.controls.actionImg.value\n          });\n        }\n\n        data.images = images;\n        console.log(images);\n\n        _this.loadService.myCallback = () => _this.toast(\"Store Information Updated!\");\n\n        yield _this.loadService.saveStore(data);\n      } else {\n        console.log(_this.storeForm.controls.loadingIndicator);\n      }\n    })();\n  }\n\n  toast(message) {\n    this.loadService.openSnackBar(message);\n  }\n\n  selectSetting(index, section) {\n    this.panels.forEach(panel => {\n      panel.Options.forEach(option => {\n        option.Active = false;\n      });\n    });\n    this.panels[section].Options[index].Active = true;\n    this.cdr.detectChanges();\n  }\n\n  isBrowser() {\n    return isPlatformBrowser(this.platformID);\n  }\n\n  toggleSidebar() {\n    this.classApplied = !this.classApplied;\n\n    if (this.classApplied) {\n      this.state = 'rotated';\n    } else {\n      this.state = 'default';\n    }\n  }\n\n  storeBio() {\n    var _a, _b, _c;\n\n    let bio = this.storeInfo().bio;\n\n    if (bio == \"\" || bio == undefined) {\n      return this.defaultBio.replace(/FULL9NAME/g, (_b = (_a = this.storeInfo().fullName) === null || _a === void 0 ? void 0 : _a.trim()) !== null && _b !== void 0 ? _b : \"This brand\");\n    }\n\n    return (_c = bio.replace(/\\n/g, \"<br>\")) !== null && _c !== void 0 ? _c : \"\";\n  }\n\n  ngOnInit() {\n    this.init();\n  }\n\n  routeTo404() {\n    this._router.navigateByUrl(\"not-found\");\n  }\n\n  routeToProduct(productID) {\n    var _a, _b, _c;\n\n    if ((_a = Globals.storeInfo) === null || _a === void 0 ? void 0 : _a.username) {\n      this._router.navigateByUrl(((_b = Globals.storeInfo) === null || _b === void 0 ? void 0 : _b.username) + \"/\" + \"products/\" + productID);\n    } else {\n      console.log((_c = Globals.storeInfo) === null || _c === void 0 ? void 0 : _c.username);\n    }\n  }\n\n  callback() {\n    var _a, _b, _c, _d;\n\n    if (Globals.storeInfo.username) {\n      this.rootComponent.setOptions();\n      this.addTags((_a = Globals.storeInfo.fullName) !== null && _a !== void 0 ? _a : \"Thred\", ((_b = Globals.storeInfo.profileLink) !== null && _b !== void 0 ? _b : new URL(\"https://shopmythred.com\")).toString(), (_c = Globals.storeInfo.bio) !== null && _c !== void 0 ? _c : \"Check out my Thred Store!\", \"shopmythred.com/\" + Globals.storeInfo.username);\n\n      if (Globals.userInfo == undefined && isPlatformBrowser(this.platformID)) {\n        this.loadService.getCustomer();\n      } else if (Globals.selectedCurrency == undefined) {\n        console.log(\"countries\");\n        this.loadService.getCountries();\n      } else if (Globals.themes == undefined) {\n        this.loadService.getThemes();\n      } else if (Globals.templates.length == 0 && isPlatformBrowser(this.platformID)) {\n        this.loadService.getTemplates();\n      } else if (Globals.products == undefined && isPlatformBrowser(this.platformID)) {\n        this.loadService.getPosts();\n      } else {\n        if (isPlatformBrowser(this.platformID)) {\n          console.log(Globals.selectedCurrency);\n          this.setForm();\n          console.log((_d = this.userInfo()) === null || _d === void 0 ? void 0 : _d.themeLink);\n          this.cdr.detectChanges();\n        }\n      }\n    } else {\n      this.routeTo404();\n    }\n  }\n\n  init() {\n    const storeName = this.getStoreName();\n    Globals.userInfo = undefined;\n    Globals.selectedCurrency = undefined;\n    Globals.themes = undefined;\n    this.downloadAllStoreInfo(storeName);\n\n    if (this.classApplied) {\n      this.state = 'rotated';\n    } else {\n      this.state = 'default';\n    }\n  }\n\n  editProduct(product) {}\n\n  createNewProduct() {\n    let ngbModalOptions = {\n      backdrop: 'static',\n      keyboard: false\n    };\n    const modalRef = this.modalService.open(DesignComponent, ngbModalOptions);\n    modalRef.componentInstance.templates = this.templates();\n  }\n\n  routeToHome() {\n    var _a, _b;\n\n    if ((_a = Globals.storeInfo) === null || _a === void 0 ? void 0 : _a.username) this._router.navigateByUrl(((_b = Globals.storeInfo) === null || _b === void 0 ? void 0 : _b.username) + \"/\" + \"home\");\n  }\n\n  signOutPressed() {\n    this.loadService.myCallback = () => this.routeToHome();\n\n    this.loadService.signOut();\n  }\n\n  downloadAllStoreInfo(storeName) {\n    this.loadService.myCallback = () => this.callback();\n\n    this.loadService.getUser(storeName);\n  }\n\n  addTags(title, imgUrl, description, url) {\n    this.metaService.updateTag({\n      property: 'og:title',\n      content: title + \" - \" + \"About\"\n    });\n    this.metaService.updateTag({\n      property: 'og:image',\n      content: imgUrl\n    });\n    this.metaService.updateTag({\n      property: 'og:url',\n      content: url\n    });\n    this.metaService.updateTag({\n      property: 'og:description',\n      content: description\n    });\n    this.titleService.setTitle(title);\n    this.metaService.updateTag({\n      property: 'description',\n      content: description\n    });\n  }\n\n  getStoreName() {\n    const routeParams = this.router.snapshot.paramMap;\n    const storeID = routeParams.get('user'); // Find the product that correspond with the id provided in route.\n\n    console.log(storeID);\n    return storeID;\n  }\n\n};\n\n__decorate([ViewChild(\"chart\")], AdminViewComponent.prototype, \"chart\", void 0);\n\nAdminViewComponent = __decorate([Component({\n  selector: 'app-admin-view',\n  templateUrl: './admin-view.component.html',\n  styleUrls: ['./admin-view.component.css'],\n  animations: [// Each unique animation requires its own trigger. The first argument of the trigger function is the name\n  trigger('rotatedState', [state('default', style({\n    transform: 'rotateY(0)'\n  })), state('rotated', style({\n    transform: 'rotateY(-180deg)'\n  })), transition('rotated => default', animate('200ms ease-out')), transition('default => rotated', animate('200ms ease-in'))])]\n}), __param(0, Inject(PLATFORM_ID))], AdminViewComponent);\nexport { AdminViewComponent };","map":{"version":3,"sources":["/Users/artakoroushnia/Desktop/thred-web/src/app/admin-view/admin-view.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Inject, PLATFORM_ID, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { LoadService, Dict } from '../services/load.service';\nimport { AppComponent } from '../app.component';\nimport { Globals } from '../globals';\nimport { isPlatformBrowser } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { ImageCroppedEvent, LoadedImage } from 'ngx-image-cropper';\nimport { NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { CropperComponent } from '../cropper/cropper.component';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { Country } from '../models/shipping-country.model';\nimport { Product } from '../models/product.model';\nimport { DesignComponent } from '../design/design.component';\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexTitleSubtitle,\n  ApexYAxis,\n  ApexDataLabels,\n  ApexLegend,\n  ApexFill,\n  ApexTooltip\n} from \"ng-apexcharts\";\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  markers: any; //ApexMarkers;\n  stroke: any; //ApexStroke;\n  yaxis: ApexYAxis | ApexYAxis[];\n  dataLabels: ApexDataLabels;\n  title: ApexTitleSubtitle;\n  legend: ApexLegend;\n  fill: ApexFill;\n  tooltip: ApexTooltip;\n};\n\n@Component({\n  selector: 'app-admin-view',\n  templateUrl: './admin-view.component.html',\n  styleUrls: ['./admin-view.component.css'],\n  animations: [\n    // Each unique animation requires its own trigger. The first argument of the trigger function is the name\n    trigger('rotatedState', [\n      state('default', style({ transform: 'rotateY(0)' })),\n      state('rotated', style({ transform: 'rotateY(-180deg)' })),\n      transition('rotated => default', animate('200ms ease-out')),\n      transition('default => rotated', animate('200ms ease-in'))\n    ])\n  ]\n})\nexport class AdminViewComponent implements OnInit {\n  @ViewChild(\"chart\") chart?: ChartComponent;\n  public chartOptions: Partial<ChartOptions>;\n\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformID: Object,\n    private cdr: ChangeDetectorRef,\n    private router: ActivatedRoute,\n    private titleService: Title, \n    private metaService: Meta,\n    private loadService: LoadService,\n    private rootComponent: AppComponent,\n    private fb: FormBuilder,\n    private modalService: NgbModal,\n    private spinner: NgxSpinnerService,\n    private _router: Router,\n\n  ) {\n    this.chartOptions = {\n      series: [\n        {\n          name: \"Income\",\n          type: \"column\",\n          data: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6]\n        },\n        {\n          name: \"Cashflow\",\n          type: \"column\",\n          data: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5]\n        },\n        {\n          name: \"Revenue\",\n          type: \"line\",\n          data: [20, 29, 37, 36, 44, 45, 50, 58]\n        }\n      ],\n      chart: {\n        height: 350,\n        type: \"line\",\n        stacked: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        width: [1, 1, 4]\n      },\n      title: {\n        text: \"XYZ - Stock Analysis (2009 - 2016)\",\n        align: \"left\",\n        offsetX: 110\n      },\n      xaxis: {\n        categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\n      },\n      yaxis: [\n        {\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: \"#008FFB\"\n          },\n          labels: {\n            style: {\n              colors: \"#008FFB\"\n            }\n          },\n          title: {\n            text: \"Income (thousand crores)\",\n            style: {\n              color: \"#008FFB\"\n            }\n          },\n          tooltip: {\n            enabled: true\n          }\n        },\n        {\n          seriesName: \"Income\",\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: \"#00E396\"\n          },\n          labels: {\n            style: {\n              colors: \"#00E396\"\n            }\n          },\n          title: {\n            text: \"Operating Cashflow (thousand crores)\",\n            style: {\n              color: \"#00E396\"\n            }\n          }\n        },\n        {\n          seriesName: \"Revenue\",\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: \"#FEB019\"\n          },\n          labels: {\n            style: {\n              colors: \"#FEB019\"\n            }\n          },\n          title: {\n            text: \"Revenue (thousand crores)\",\n            style: {\n              color: \"#FEB019\"\n            }\n          }\n        }\n      ],\n      tooltip: {\n        fixed: {\n          enabled: true,\n          position: \"topLeft\", // topRight, topLeft, bottomRight, bottomLeft\n          offsetY: 30,\n          offsetX: 60\n        }\n      },\n      legend: {\n        horizontalAlign: \"left\",\n        offsetX: 40\n      }\n    };\n\n    // this.chart!.yaxis.formatter = function (value) {\n    //   return value + \"$\";\n    // }\n    console.log(\"spamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssmspamsomaosmosmsomomssmsmssm\")\n    \n  }\n\n  state: string = 'default';\n\n  loaders(){\n\n    return Globals.loaders\n  }\n\n\n\n  storeInfo(){return Globals.storeInfo}\n\n  userInfo(){return Globals.userInfo}\n\n\n  availableCurrencies(){return Globals.availableCurrencies}\n\n  selectedCurrency(){return Globals.selectedCurrency}\n\n  templates(){return Globals.availableTemplates}\n\n  availableTemplates(){return Globals.availableTemplates}\n\n  products(){\n    \n    return Globals.products?.sort(function(a, b){\n      if(a.timestamp > b.timestamp) { return -1; }\n      if(a.timestamp < b.timestamp) { return 1; }\n      return 0;\n    })\n  }\n\n  themes(){return Globals.themes}\n\n  fonts(){return Globals.fonts}\n\n  panels = [\n    {\n      \"Category\": \"SETTINGS\",\n      \"Options\": [\n        {\n          \"Title\": \"PROFILE\",\n          \"Icon\": \"person_outline\",\n          \"Active\": true\n        },\n        {\n          \"Title\": \"STORE\",\n          \"Icon\": \"shopping_bag\",\n          \"Active\": false\n        },\n        {\n          \"Title\": \"PRODUCTS\",\n          \"Icon\": \"brush\",\n          \"Active\": false\n        },\n        {\n          \"Title\": \"PRIVACY\",\n          \"Icon\": \"admin_panel_settings\",\n          \"Active\": false\n        },\n      ]\n    },\n    {\n      \"Category\": \"DASHBOARD\",\n      \"Options\": [\n        {\n          \"Title\": \"ANALYTICS\",\n          \"Icon\": \"person_outline\",\n          \"Active\": false\n        },\n        \n      ]\n    }  \n  ]\n\n\n  defaultBio = \"\"\n  color = \"\"\n  bg_color = \"\"\n\n  selectedIndicator(){\n    \n    let color = this.storeForm.controls.loadingIndicatorColor.value as string\n    let bg_color = this.storeForm.controls.loadingIndicatorBgColor.value as string\n\n    let indicator: Dict<string> = {\n      \"name\": this.storeForm.controls.loadingIndicator.value,\n      \"color\": color,\n      \"bg_color\": bg_color\n    }\n    return indicator\n  }\n\n  formatPrice(price: number){\n    var priceAsString = new String((price * Globals.selectedCurrency!.rate).toFixed(2))\n    let index = priceAsString.indexOf(\".\")\n\n    switch (index){\n    case priceAsString.length - 1:\n        priceAsString += \"00\"\n        break\n    case priceAsString.length - 2:\n        priceAsString += \"0\"\n        break\n    default:\n\n        break\n    }\n    return this.getCurrencyForCountry(Globals.selectedCurrency!, Globals.selectedCurrency!.name != \"US\") + priceAsString\n}\n  \ngetCurrencyForCountry(country: Country, shouldShowName: boolean){\n\n  var returnItem = country.currency_symbol\n  if (shouldShowName) returnItem = country.name + \" \" + returnItem\n\n  return returnItem\n}\n\n\n\n\n  showSpinner(){\n    if (isPlatformBrowser(this.platformID)){\n          this.spinner.show()\n    };\n\n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      if (isPlatformBrowser(this.platformID)){\n          this.spinner.hide()\n      };\n    }, 2000);\n  }\n\n  theme = 'Light'\n\n  userForm = this.fb.group({\n    username: [null, Validators.required],\n    full_name: [null, Validators.required],\n    bio: [null],\n    profile_pic: [null],\n  });\n\n  storeForm = this.fb.group({\n    slogan: [null, Validators.required],\n    loadingIndicator: [null, Validators.required],\n    loadingIndicatorColor: [null, Validators.required],\n    loadingIndicatorBgColor: [null, Validators.required],\n    themeImg: [null],\n    homeImg: [null],\n    actionImg: [null],\n    storeTheme: [null, Validators.required],\n    font: [null, Validators.required]\n  });\n  \n  getSelectedPanel(){\n    let selected = this.panels.filter(panel => panel.Options.filter(option => option.Active).length != 0)[0].Options.filter(option => option.Active)[0]\n    console.log(selected.Title)\n    return selected\n  }\n\n  setForm(){\n    this.userForm.controls.username.setValue(Globals.userInfo?.username ?? \"\")\n    this.userForm.controls.full_name.setValue(Globals.userInfo?.fullName ?? \"\")\n    this.userForm.controls.bio.setValue(Globals.userInfo?.bio ?? \"\")\n\n\n    this.storeForm.controls.slogan.setValue(Globals.userInfo?.slogan ?? \"\")\n    this.storeForm.controls.loadingIndicator.setValue(Globals.userInfo?.loading?.name ?? \"\")\n\n    this.storeForm.controls.themeImg.setValue(Globals.userInfo?.themeLink?.toString())\n    this.storeForm.controls.homeImg.setValue(Globals.userInfo?.homeLink?.toString())\n    this.storeForm.controls.actionImg.setValue(Globals.userInfo?.actionLink?.toString())\n\n    this.storeForm.controls.font.setValue(Globals.userInfo?.fontName)\n\n    console.log(Globals.userInfo?.actionLink?.toString())\n\n    this.storeForm.controls.storeTheme.setValue(Globals.userInfo?.colorStyle?.name.toString())\n    this.theme = Globals.userInfo?.colorStyle?.name.toString() ?? 'Light'\n\n    console.log(Globals.userInfo?.colorStyle?.name.toString())\n\n    let co = Globals.userInfo?.loading?.color\n    let bco = Globals.userInfo?.loading?.bg_color\n\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\"\n\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\"\n\n    this.storeForm.controls.loadingIndicatorColor.setValue(color ?? [])\n    this.storeForm.controls.loadingIndicatorBgColor.setValue(bg_color ?? [])\n\n\n  }\n\n  isBase64(str: string) {\n    try {\n        return btoa(atob(str)) == str;\n    } catch (err) {\n        return false;\n    }\n  }\n\n  selectColor(value: string, isPrimary: boolean){\n      console.log(value)\n\n      if (isPrimary){\n        this.storeForm.controls.loadingIndicatorColor.setValue(value ?? [])\n      }\n      else{\n        this.storeForm.controls.loadingIndicatorBgColor.setValue(value ?? [])\n      }\n\n      this.showSpinner()\n\n  }\n\n\n    fileChangeEvent(event: any, type = \"Profile\"): void {\n        const modalRef = this.modalService.open(CropperComponent, {size : \"lg\"});\n        modalRef.componentInstance.imageChangedEvent = event\n\n\n        console.log(type)\n\n        if (type == \"Profile\"){\n          modalRef.componentInstance.ratio = 1\n          modalRef.componentInstance.width = 200\n          modalRef.componentInstance.height = 200\n\n          modalRef.dismissed.subscribe((img: string) => {\n            if (img != '0'){\n              this.userForm.controls.profile_pic.setValue(img)\n            }\n          })\n        }\n        else if (type == \"Background\"){\n          modalRef.componentInstance.ratio = 1.78\n          modalRef.componentInstance.width = 2560\n          modalRef.componentInstance.height = 1440\n\n          modalRef.dismissed.subscribe((img: string) => {\n            if (img != '0'){\n              this.storeForm.controls.themeImg.setValue(img)\n            }\n          })\n        }\n        else if (type == \"Promotion\"){\n          modalRef.componentInstance.ratio = 1.78\n          modalRef.componentInstance.width = 2560\n          modalRef.componentInstance.height = 1440\n\n          modalRef.dismissed.subscribe((img: string) => {\n            if (img != '0'){\n              this.storeForm.controls.homeImg.setValue(img)\n            }\n          })\n        }\n        else if (type == \"Action\"){\n          modalRef.componentInstance.ratio = 1.78\n          modalRef.componentInstance.width = 2560\n          modalRef.componentInstance.height = 1440\n\n          modalRef.dismissed.subscribe((img: string) => {\n            if (img != '0'){\n              this.storeForm.controls.actionImg.setValue(img)\n            }\n          })\n        }\n    }\n    \n\n    \n\n  getImgSrc(){\n    \n    if (this.userForm.controls.profile_pic.value){\n      return this.userForm.controls.profile_pic.value\n    }\n    return this.userInfo()?.profileLink\n  }\n\n  getUsername(){\n    \n    if (this.userForm.controls.full_name.value){\n      return this.userForm.controls.full_name.value\n    }\n    return this.userInfo()?.fullName ?? \"Brian's Tees\"\n  }\n\n  saveProfile(){\n\n    if (this.userForm.valid){\n      let data = {\n        username: this.userForm.controls.username.value,\n        full_name: this.userForm.controls.full_name.value,\n        bio: this.userForm.controls.bio.value,\n        profile_pic: this.userForm.controls.profile_pic.value\n      }\n      this.loadService.myCallback = () => this.toast(\"Profile Information Updated!\")\n      this.loadService.saveUser(data)\n    }\n    else{\n      console.log(\"man\")\n    }\n  }\n\n  joinColor(color: string){\n\n    let c = color.replace(\"rgb\", \"\").replace(\"a\", \"\").replace(\"(\", \"\").replace(\")\", \"\").split(\",\")\n    var returnArr = new Array<string>()\n    c.forEach(element => {\n      returnArr.push(element.trim())\n    });\n\n    if (returnArr.length < 4){\n      for (let i = 0; i < (4 - returnArr.length); i++) {\n          returnArr.push(\"1\")\n      }\n    }\n\n    return returnArr.join(\",\")\n  }\n\n  numToColor(color: Array<number>){\n\n    var returnArr = new Array<string>()\n\n    color.forEach(color => {\n      returnArr.push(color.toString())\n    })\n\n    return returnArr.join(\",\")\n  }\n\n  selectedTheme(){\n    \n    let co = Globals.storeInfo?.colorStyle?.btn_color\n    let bco = Globals.storeInfo?.colorStyle?.bg_color\n    let name = Globals.storeInfo?.colorStyle?.name\n\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\"\n\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\"\n\n    var theme: Dict<string> = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    }\n    return theme\n  }\n\n  async saveStore(){\n\n    if (this.storeForm.valid){\n\n      var color = this.joinColor(this.storeForm.controls.loadingIndicatorColor.value)\n      var bg_color = this.joinColor(this.storeForm.controls.loadingIndicatorBgColor.value)\n\n\n      \n\n  \n\n\n      var data: Dict<any> = {\n        slogan: this.storeForm.controls.slogan.value,\n        indicator: {\n          name: this.storeForm.controls.loadingIndicator.value,\n          color: color,\n          bg_color: bg_color\n        },\n        loadingIndicatorColor: color,\n        loadingIndicatorBgColor: bg_color,\n        font: this.storeForm.controls.font.value\n      }\n\n      var selectedTheme = this.storeForm.controls.storeTheme.value as string\n\n      let matchingTheme = this.themes()?.filter(theme => theme.name == selectedTheme)[0]\n\n      if (matchingTheme){\n        var color = this.numToColor(matchingTheme.btn_color)\n        var bg_color = this.numToColor(matchingTheme.bg_color)\n\n        data.theme = {\n          back_code: matchingTheme.back_code,\n          text_code: matchingTheme.text_code,\n          bg_color: bg_color,\n          btn_color: color,\n          name: matchingTheme.name\n        }\n      }\n\n    \n\n      var images = new Array<Dict<string>>()\n      if (this.storeForm.controls.themeImg.value && this.isBase64(this.storeForm.controls.themeImg.value.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''))){\n          images.push({\n            \"type\" : \"theme\",\n            \"img\" : this.storeForm.controls.themeImg.value\n          })\n      }\n      if (this.storeForm.controls.homeImg.value && this.isBase64(this.storeForm.controls.homeImg.value.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''))){\n        images.push({\n          \"type\" : \"home\",\n          \"img\" : this.storeForm.controls.homeImg.value\n        })\n      }\n      if (this.storeForm.controls.actionImg.value && this.isBase64(this.storeForm.controls.actionImg.value.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''))){\n        console.log(this.storeForm.controls.actionImg.value)\n        images.push({\n          \"type\" : \"action\",\n          \"img\" : this.storeForm.controls.actionImg.value\n        })\n      }\n\n      data.images = images\n\n      console.log(images)\n\n      this.loadService.myCallback = () => this.toast(\"Store Information Updated!\")\n      await this.loadService.saveStore(data)\n    }\n    else{\n      console.log(this.storeForm.controls.loadingIndicator)\n    }\n  }\n\n  toast(message: string){\n\n    this.loadService.openSnackBar(message)\n\n  }\n\n  selectSetting(index: number, section: number){\n\n    this.panels.forEach(panel => {\n      panel.Options.forEach(option => {\n        option.Active = false\n      });\n    });\n\n    this.panels[section].Options[index].Active = true\n    \n    this.cdr.detectChanges()\n  }\n\n\n  isBrowser(){\n    return isPlatformBrowser(this.platformID)\n  }\n\n  classApplied = false;\n\n  toggleSidebar() {\n    \n\n    this.classApplied = !this.classApplied;\n\n    if (this.classApplied){\n      this.state ='rotated'\n    }\n    else{\n      this.state = 'default'\n    }\n  }\n\n  storeBio(){\n    let bio = this.storeInfo().bio\n\n    if (bio == \"\" || bio == undefined){\n      return this.defaultBio.replace(/FULL9NAME/g, this.storeInfo().fullName?.trim() ?? \"This brand\")\n    }\n    return bio.replace(/\\n/g, \"<br>\") ?? \"\";\n  }\n\n    ngOnInit(): void {\n      this.init()\n    }\n\n    routeTo404(){\n      this._router.navigateByUrl(\"not-found\")\n    }\n\n    routeToProduct(productID: string){\n      if (Globals.storeInfo?.username){\n        this._router.navigateByUrl(Globals.storeInfo?.username + \"/\" + \"products/\" + productID)\n      }\n      else{\n        console.log(Globals.storeInfo?.username)\n      }\n    }\n  \n    callback(){\n      if (Globals.storeInfo.username){\n        this.rootComponent.setOptions()\n        this.addTags(Globals.storeInfo.fullName ?? \"Thred\", (Globals.storeInfo.profileLink ?? new URL(\"https://shopmythred.com\")).toString(), Globals.storeInfo.bio ?? \"Check out my Thred Store!\", \"shopmythred.com/\" + Globals.storeInfo.username)\n\n        if (Globals.userInfo == undefined && isPlatformBrowser(this.platformID)){\n          this.loadService.getCustomer()\n        }\n        else if (Globals.selectedCurrency == undefined){\n          console.log(\"countries\")\n          this.loadService.getCountries()\n        }\n        else if (Globals.themes == undefined){\n          this.loadService.getThemes()\n        }\n        else if (Globals.templates.length == 0 && isPlatformBrowser(this.platformID)){\n          this.loadService.getTemplates()\n        }\n        else if (Globals.products == undefined&& isPlatformBrowser(this.platformID)){\n          this.loadService.getPosts()\n        }\n        else{\n          if (isPlatformBrowser(this.platformID)){\n            console.log(Globals.selectedCurrency)\n\n            this.setForm()\n            console.log(this.userInfo()?.themeLink)\n            this.cdr.detectChanges()\n          }  \n        }\n      }\n      else{\n        this.routeTo404()\n      }\n    }\n    \n    init() {\n  \n      const storeName = this.getStoreName()\n      Globals.userInfo = undefined\n      Globals.selectedCurrency = undefined\n      Globals.themes = undefined\n\n      this.downloadAllStoreInfo(storeName)\n      \n      if (this.classApplied){\n        this.state ='rotated'\n  \n      }\n      else{\n        this.state = 'default'\n      }\n  \n    }\n\n    editProduct(product: Product){\n\n    }\n\n    createNewProduct(){\n      let ngbModalOptions: NgbModalOptions = {\n        backdrop : 'static',\n        keyboard : false,\n      };\n      const modalRef = this.modalService.open(DesignComponent, ngbModalOptions);\n      modalRef.componentInstance.templates = this.templates()\n    }\n\n    routeToHome(){\n      if (Globals.storeInfo?.username)\n      this._router.navigateByUrl(Globals.storeInfo?.username + \"/\" + \"home\")\n    }\n\n    signOutPressed(){\n      this.loadService.myCallback = () => this.routeToHome()\n      this.loadService.signOut()\n    }\n\n\n    downloadAllStoreInfo(storeName: string){\n      this.loadService.myCallback = () => this.callback()\n      this.loadService.getUser(storeName)\n    }\n\n\n    addTags(title: string, imgUrl: string, description: string, url: string){\n      this.metaService.updateTag({property: 'og:title', content: title + \" - \" + \"About\"});\n      this.metaService.updateTag({property: 'og:image', content: imgUrl});\n      this.metaService.updateTag({property: 'og:url', content: url})\n      this.metaService.updateTag({property: 'og:description', content: description})\n      this.titleService.setTitle(title)\n      this.metaService.updateTag({property: 'description', content: description})\n  \n    }\n   \n\n  getStoreName(){\n    const routeParams = this.router.snapshot.paramMap;\n    const storeID = routeParams.get('user') as string;\n\n  // Find the product that correspond with the id provided in route.\n    console.log(storeID)\n    return storeID\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}