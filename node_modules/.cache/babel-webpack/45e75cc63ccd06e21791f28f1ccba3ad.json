{"ast":null,"code":"import _asyncToGenerator from \"/Users/artakoroushnia/Desktop/thred-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport { Globals } from '../globals';\nimport { Product } from '../models/product.model';\nimport { Template } from '../models/template.model';\nimport { TemplateSide } from '../models/template-side.model';\nimport { Color } from '../models/color.model';\nimport { Country } from '../models/shipping-country.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport class LoadService {\n  constructor(db) {\n    this.db = db;\n  }\n\n  getCountries() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.db.collection(\"Print_Info\").doc(\"Shipping_Info\").valueChanges().subscribe(docData => {\n        const data = docData;\n        const usShipping = Math.round(data.shipping_rate_us * 100);\n        const caShipping = Math.round(data.shipping_rate_canada * 100);\n        const intlShipping = Math.round(data.shipping_rate_intl * 100);\n        const currencies = data.supportedCurrencies;\n        currencies.forEach(currency => {\n          const name = currency.country;\n          const flag = currency.flag;\n          const currency_name = currency.name;\n          const rate = currency.rate;\n          const is_main_currency = currency.is_main_currency;\n          const symbol = currency.symbol;\n          const name_full = currency.country_full;\n          const country = new Country(name, flag, name_full, currency_name, symbol, rate, is_main_currency, 0);\n\n          if (name == \"CA\") {\n            country.shipping_rate_usd = caShipping;\n          } else if (name == \"US\") {\n            country.shipping_rate_usd = usShipping;\n            Globals.selectedCurrency = country;\n          } else {\n            country.shipping_rate_usd = intlShipping;\n          }\n\n          Globals.availableCurrencies.push(country);\n        });\n        Globals.availableCurrencies.sort(function (a, b) {\n          if (a.name < b.name) {\n            return -1;\n          }\n\n          if (a.name > b.name) {\n            return 1;\n          }\n\n          return 0;\n        });\n      });\n    })();\n  }\n\n  getUser(username) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"starting\");\n      return _this2.db.collection(\"Users\", ref => ref.where(\"Username\", '==', username)).valueChanges({\n        idField: 'UID'\n      }).subscribe(doc => {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n\n        let docData = doc[0];\n\n        if (docData) {\n          let uid = docData.UID; //UID OF COMMENT IMAGE\n\n          console.log(uid);\n          let dpUID = docData[\"ProfilePicID\"]; //UID OF COMMENT IMAGE\n\n          let username = docData[\"Username\"]; //COMMENTER'S USERNAME\n\n          let fullName = docData[\"Full_Name\"];\n          let bio = docData[\"Bio\"];\n          let notifID = docData[\"Notification ID\"];\n          let userFollowing = (_a = docData[\"Following_List\"]) !== null && _a !== void 0 ? _a : [];\n          let usersBlocking = (_b = docData[\"Users_Blocking\"]) !== null && _b !== void 0 ? _b : [];\n          let followerCount = (_c = docData[\"Followers_Count\"]) !== null && _c !== void 0 ? _c : 0;\n          let followingCount = (_d = docData[\"Following_Count\"]) !== null && _d !== void 0 ? _d : 0;\n          let postCount = (_e = docData[\"Posts_Count\"]) !== null && _e !== void 0 ? _e : 0;\n          let verified = (_f = docData[\"Verified\"]) !== null && _f !== void 0 ? _f : false;\n          let postNotifs = (_g = docData[\"Post_Notifications\"]) !== null && _g !== void 0 ? _g : [];\n          let isPublic = (_h = docData[\"Public\"]) !== null && _h !== void 0 ? _h : true;\n          Globals.storeInfo.uid = uid;\n          Globals.storeInfo.dpID = dpUID;\n          Globals.storeInfo.username = username;\n          Globals.storeInfo.fullName = fullName;\n          Globals.storeInfo.bio = bio;\n          Globals.storeInfo.notifID = notifID;\n          Globals.storeInfo.userFollowing = userFollowing;\n          Globals.storeInfo.usersBlocking = usersBlocking;\n          Globals.storeInfo.followerCount = followerCount;\n          Globals.storeInfo.followingCount = followingCount;\n          Globals.storeInfo.postCount = postCount;\n          Globals.storeInfo.verified = verified;\n          Globals.storeInfo.postNotifsList = postNotifs;\n          Globals.storeInfo.isPublic = isPublic;\n          Globals.storeInfo.profileLink = new URL(_this2.getProfileURL(uid, dpUID));\n        }\n      });\n    })();\n  }\n\n  getPosts(uid, filterID) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const time = firebase.firestore.Timestamp.now();\n\n      var query = _this3.db.collection(\"Users/\" + uid + \"/Products\", ref => ref.where(\"Timestamp\", '<=', time).where(\"Has_Picture\", '==', true).where(\"Available\", '==', true).where(\"Public\", '==', true).orderBy(\"Timestamp\", \"desc\"));\n\n      if (filterID) {\n        query = _this3.db.collection(\"Users/\" + uid + \"/Products\", ref => ref.where(\"Timestamp\", '<=', time).where(\"Type\", '==', filterID).where(\"Available\", '==', true).where(\"Public\", '==', true).orderBy(\"Timestamp\", \"desc\"));\n      }\n\n      return query.valueChanges().subscribe(docDatas => {\n        docDatas.forEach(doc => {\n          var _a, _b, _c, _d;\n\n          let docData = doc;\n\n          if (docData) {\n            let uid = docData.UID;\n            let productID = docData.Product_ID;\n            let timestamp = docData.Timestamp.toDate();\n            let description = docData.description;\n            let name = docData.Name;\n            let blurred = docData.Blurred;\n            let templateColor = docData.Template_Color;\n            let likes = docData.Likes;\n            let priceCents = docData.Price_Cents;\n            let comments = docData.Comments;\n            let isPublic = (_a = docData.Public) !== null && _a !== void 0 ? _a : true;\n            let productType = (_b = docData.Type) !== null && _b !== void 0 ? _b : \"ATC1000\";\n            let displaySide = (_c = docData.Side) !== null && _c !== void 0 ? _c : \"front\";\n            let sides = (_d = docData[\"Sides\"]) !== null && _d !== void 0 ? _d : [\"Front\"];\n            let product = new Product(uid, productID, description, productID, timestamp, \"\", blurred, priceCents, name, templateColor, likes, false, comments, true, isPublic, productType, displaySide, sides, _this3.getURL(uid, productID));\n            Globals.products.push(product);\n          }\n        });\n\n        if (!filterID) {\n          Globals.availableTemplates = _this3.getTemplatesFiltered();\n        } //return\n\n\n        console.log(\"Posts 2 Loaded\");\n      });\n    })();\n  }\n\n  getTemplatesFiltered() {\n    return Globals.templates.filter(template => Globals.products.some(product => product.productType === template.productCode));\n  }\n\n  getURL(uid, productID) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FProducts%2F' + productID + '%2Flink_' + productID + '.png?alt=media';\n  }\n\n  getProfileURL(uid, dpID) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2Fprofile_pic-' + dpID + '.jpeg?alt=media';\n  }\n\n  getAltURL() {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Resources%2Flink_empty.jpeg?alt=media';\n  }\n\n  getTemplates() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return _this4.db.collection(\"Templates\", ref => ref.orderBy(\"index\", \"asc\")).valueChanges({\n        idField: \"TemplateID\"\n      }).subscribe(docDatas => {\n        docDatas.forEach(doc => {\n          var docData = doc;\n\n          if (docData) {\n            let type = doc.TemplateID;\n            let testingAccounts = docData[\"testingAccounts\"];\n            let isAvailable = docData[\"isAvailable\"]; // guard isAvailable ?? false || testingAccounts?.contains(pUserInfo.uid ?? \"\") ?? false else{\n            //     continue\n            //   }\n\n            let display = docData[\"Display_Name\"];\n            let info = docData[\"Info\"];\n            let supportedSides = docData[\"Supported_Sides\"];\n\n            if (!supportedSides || supportedSides.length == 0) {\n              return;\n            }\n\n            let vari = docData[\"Colors\"];\n            let minPrice = docData[\"Min_Price_USD\"];\n            let extra = docData[\"Extra_Cost_USD\"];\n            let code = docData[\"Code\"];\n            let sizes = docData[\"Sizes\"];\n            let category = docData[\"category\"];\n            let has3D = docData[\"has3D\"];\n            let moreInfo = docData[\"More_info\"]; // let discountInfo = docData[\"Discount\"] as Dict<any>\n            // let discountedUsers = discountInfo[\"Artists\"] as Array<string>\n            // let discountedPrice = discountInfo.Minimum_Price_USD as number\n            // let discountCodes = discountInfo.Discount_Codes as Array<Dict<any>>   \n\n            const template = new Template(type, display, info, [], sizes, minPrice, code, category, moreInfo, false, [], extra, has3D);\n            supportedSides.forEach(side => {\n              var _a;\n\n              let name = side[\"Name\"];\n              let height = side[\"HeightCM\"];\n              let width = side[\"WidthCM\"];\n              let widthMultiplier = side[\"WidthMultiplier\"];\n              let centerYConst = side[\"CenterYConst\"];\n              let centerXConst = side[\"CenterXConst\"];\n              let rotation = side[\"Rotation\"];\n              let useReverseAspect = (_a = side[\"useReverseAspect\"]) !== null && _a !== void 0 ? _a : false;\n              let supportedSide = new TemplateSide(name, height, width, widthMultiplier, centerYConst, centerXConst, useReverseAspect, rotation);\n              template.supportedSides.push(supportedSide);\n            });\n            vari.forEach(v => {\n              let code = v[\"Code\"];\n              let display = v[\"Display\"];\n              let img = v[\"IMG\"];\n              let backImg = v[\"IMG_BACK\"];\n              let rgb = v[\"RGB\"];\n              let color = new Color(code, display, rgb, img, backImg);\n              template.colors.push(color);\n            });\n            Globals.templates.push(template);\n          }\n        });\n      });\n    })();\n  }\n\n}\n\nLoadService.ɵfac = function LoadService_Factory(t) {\n  return new (t || LoadService)(i0.ɵɵinject(i1.AngularFirestore));\n};\n\nLoadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadService,\n  factory: LoadService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/artakoroushnia/Desktop/thred-web/src/app/services/load.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore, DocumentSnapshot, DocumentData, Query, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport firebase from 'firebase/app';\nimport { Globals } from '../globals';\nimport { Product } from '../models/product.model';\nimport { Template } from '../models/template.model';\nimport { TemplateSide } from '../models/template-side.model';\nimport { Color } from '../models/color.model';\nimport { Country } from '../models/shipping-country.model';\n\nexport interface Dict<T> {\n  [key: string]: T;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class LoadService {\n\n  constructor(private db: AngularFirestore) { }\n\n  async getCountries(){\n\n    this.db.collection(\"Print_Info\").doc(\"Shipping_Info\").valueChanges().subscribe((docData) => {\n\n        const data = docData as DocumentData\n\n        const usShipping = Math.round(data.shipping_rate_us * 100)\n        const caShipping = Math.round(data.shipping_rate_canada * 100)\n        const intlShipping = Math.round(data.shipping_rate_intl * 100)\n\n        const currencies = data.supportedCurrencies as Array<Dict<any>>\n         \n        currencies.forEach((currency) => {\n\n          const name = currency.country\n          const flag = currency.flag\n          const currency_name = currency.name\n          const rate = currency.rate\n          const is_main_currency = currency.is_main_currency\n          const symbol = currency.symbol\n          const name_full = currency.country_full\n\n          const country = new Country(\n            name,\n            flag,\n            name_full,\n            currency_name,\n            symbol,\n            rate,\n            is_main_currency,\n            0\n          )\n\n\n          if (name == \"CA\"){\n            country.shipping_rate_usd = caShipping\n          }\n          else if (name == \"US\"){\n            country.shipping_rate_usd = usShipping\n            Globals.selectedCurrency = country\n          }\n          else{\n            country.shipping_rate_usd = intlShipping\n          }\n\n          Globals.availableCurrencies.push(country)\n\n          \n        })\n        Globals.availableCurrencies.sort(function(a, b){\n          if(a.name < b.name) { return -1; }\n          if(a.name > b.name) { return 1; }\n          return 0;\n        })\n    })\n  }\n\n  async getUser(username: string){\n    console.log(\"starting\")\n\n    return this.db.collection(\"Users\", ref => ref.where(\"Username\",'==', username)).valueChanges({idField: 'UID'}).subscribe((doc) => {\n    \n        let docData = doc[0] as DocumentData\n\n        if (docData){\n          let uid = docData.UID //UID OF COMMENT IMAGE\n          console.log(uid)\n          let dpUID = docData[\"ProfilePicID\"] as string //UID OF COMMENT IMAGE\n          let username = docData[\"Username\"] as string //COMMENTER'S USERNAME\n          let fullName = docData[\"Full_Name\"] as string\n          let bio = docData[\"Bio\"] as string\n          let notifID = docData[\"Notification ID\"] as string\n          let userFollowing = (docData[\"Following_List\"] as Array<string>) ?? []\n          let usersBlocking = (docData[\"Users_Blocking\"] as Array<string>) ?? []\n          let followerCount = (docData[\"Followers_Count\"] as number) ?? 0\n          let followingCount = (docData[\"Following_Count\"] as number) ?? 0\n          let postCount = (docData[\"Posts_Count\"] as number) ?? 0\n          let verified = docData[\"Verified\"] as boolean ?? false\n          let postNotifs = docData[\"Post_Notifications\"] as Array<string> ?? []\n          let isPublic = docData[\"Public\"] as boolean ?? true\n\n\n          Globals.storeInfo.uid = uid\n          Globals.storeInfo.dpID = dpUID\n          Globals.storeInfo.username = username\n          Globals.storeInfo.fullName = fullName\n          Globals.storeInfo.bio = bio\n          Globals.storeInfo.notifID = notifID\n          Globals.storeInfo.userFollowing = userFollowing\n          Globals.storeInfo.usersBlocking = usersBlocking\n          Globals.storeInfo.followerCount = followerCount\n          Globals.storeInfo.followingCount = followingCount\n          Globals.storeInfo.postCount = postCount\n          Globals.storeInfo.verified = verified\n          Globals.storeInfo.postNotifsList = postNotifs\n          Globals.storeInfo.isPublic = isPublic\n          Globals.storeInfo.profileLink = new URL(this.getProfileURL(uid, dpUID))\n        }\n    });\n  }\n  \n  async getPosts(uid: string, filterID?: string){\n    const time = firebase.firestore.Timestamp.now()\n\n\n    var query = this.db.collection(\"Users/\" + uid + \"/Products\", ref => ref.where(\"Timestamp\",'<=', time).where(\"Has_Picture\",'==', true).where(\"Available\",'==', true).where(\"Public\",'==', true).orderBy(\"Timestamp\", \"desc\"))\n\n    if (filterID){\n      query = this.db.collection(\"Users/\" + uid + \"/Products\", ref => ref.where(\"Timestamp\",'<=', time).where(\"Type\",'==', filterID).where(\"Available\",'==', true).where(\"Public\",'==', true).orderBy(\"Timestamp\", \"desc\"))\n    }\n    \n    return query.valueChanges().subscribe((docDatas) => {\n\n\n      docDatas.forEach((doc) => {\n  \n        let docData = doc as DocumentData\n  \n        if (docData){\n          let uid = docData.UID as string\n          let productID = docData.Product_ID as string\n          let timestamp = (docData.Timestamp as firebase.firestore.Timestamp).toDate()\n          let description = docData.description as string\n          let name = docData.Name as string\n  \n          let blurred = docData.Blurred as boolean\n          let templateColor = docData.Template_Color as string\n  \n          let likes = docData.Likes as number\n  \n          let priceCents = docData.Price_Cents as number\n          let comments = docData.Comments as number\n          let isPublic = docData.Public as boolean ?? true\n          let productType = docData.Type as string ?? \"ATC1000\"\n          let displaySide = docData.Side as string ?? \"front\"\n          let sides = docData[\"Sides\"] as Array<string> ?? [\"Front\"]\n  \n\n  \n          let product = new Product(\n            uid, \n            productID, \n            description, \n            productID, \n            timestamp, \n            \"\", \n            blurred, \n            priceCents, \n            name, \n            templateColor, \n            likes, \n            false, \n            comments, \n            true, \n            isPublic, \n            productType, \n            displaySide, \n            sides,\n            this.getURL(uid, productID)\n          )\n\n          Globals.products.push(product);\n        }\n      });\n      if (!filterID){\n        Globals.availableTemplates = this.getTemplatesFiltered()\n      }\n      //return\n      console.log(\"Posts 2 Loaded\")\n    });\n  }\n  \n  getTemplatesFiltered(){\n\n    return Globals.templates.filter(\n      template => Globals.products.some(product => product.productType === template.productCode));\n  }\n  \n  getURL(uid: string, productID: string){\n      return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FProducts%2F' + productID + '%2Flink_' + productID + '.png?alt=media'\n  }\n\n  getProfileURL(uid: string, dpID: string){\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2Fprofile_pic-' + dpID + '.jpeg?alt=media'\n  }\n  \n  getAltURL(){\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Resources%2Flink_empty.jpeg?alt=media'\n  }\n\n\n\n  async getTemplates(){\n\n    return this.db.collection(\"Templates\", ref => ref.orderBy(\"index\", \"asc\")).valueChanges({idField : \"TemplateID\"}).subscribe((docDatas) => {\n\n      docDatas.forEach((doc) => {\n  \n        var docData = doc as DocumentData\n  \n        if (docData){\n          let type = doc.TemplateID\n          let testingAccounts = docData[\"testingAccounts\"] as Array<string>\n          let isAvailable = docData[\"isAvailable\"] as boolean\n\n          // guard isAvailable ?? false || testingAccounts?.contains(pUserInfo.uid ?? \"\") ?? false else{\n              \n          //     continue\n          //   }\n          \n          let display = docData[\"Display_Name\"] as string\n          let info = docData[\"Info\"] as string\n          let supportedSides = docData[\"Supported_Sides\"] as Array<Dict<any>>\n          \n          if (!supportedSides || supportedSides.length == 0){\n            return\n          }\n\n          let vari = docData[\"Colors\"] as Array<Dict<any>>\n          \n          let minPrice = docData[\"Min_Price_USD\"] as number\n          let extra = docData[\"Extra_Cost_USD\"] as number\n          let code = docData[\"Code\"] as string\n          let sizes = docData[\"Sizes\"] as Array<string>\n          let category = docData[\"category\"] as string\n          let has3D = docData[\"has3D\"] as boolean\n\n          let moreInfo = (docData[\"More_info\"] as string)\n          // let discountInfo = docData[\"Discount\"] as Dict<any>\n          // let discountedUsers = discountInfo[\"Artists\"] as Array<string>\n          // let discountedPrice = discountInfo.Minimum_Price_USD as number\n          // let discountCodes = discountInfo.Discount_Codes as Array<Dict<any>>   \n          \n          const template = new Template(\n            type,\n            display,\n            info,\n            [],\n            sizes,\n            minPrice,\n            code,\n            category,\n            moreInfo,\n            false,\n            [],\n            extra,\n            has3D,\n          );\n\n          supportedSides.forEach((side) => {\n            let name = side[\"Name\"] as string\n            let height = side[\"HeightCM\"] as number\n            let width = side[\"WidthCM\"] as number\n            let widthMultiplier = side[\"WidthMultiplier\"] as number\n            let centerYConst = side[\"CenterYConst\"] as number\n            let centerXConst = side[\"CenterXConst\"] as number\n            let rotation = side[\"Rotation\"] as number\n            let useReverseAspect = side[\"useReverseAspect\"] as boolean ?? false\n            \n            let supportedSide = new TemplateSide(\n              name,\n              height,\n              width,\n              widthMultiplier,\n              centerYConst,\n              centerXConst,\n              useReverseAspect,\n              rotation\n            )\n            template.supportedSides.push(supportedSide)\n          })\n\n          vari.forEach((v) => {\n            let code = v[\"Code\"] as string\n            let display = v[\"Display\"] as string\n            let img = v[\"IMG\"] as Blob\n            let backImg = v[\"IMG_BACK\"] as Blob\n            let rgb = v[\"RGB\"] as Array<number>\n            let color = new Color(\n              code,\n              display,\n              rgb,\n              img,\n              backImg\n            )\n            template.colors.push(color)\n          })\n          Globals.templates.push(template)\n        }\n      });\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}