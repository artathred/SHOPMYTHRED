{"ast":null,"code":"import _asyncToGenerator from \"/Users/artakoroushnia/Desktop/thred-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { PLATFORM_ID } from '@angular/core';\nimport firebase from 'firebase/app';\nimport { Product } from '../models/product.model';\nimport { Template } from '../models/template.model';\nimport { TemplateSide } from '../models/template-side.model';\nimport { Color } from '../models/color.model';\nimport { Country } from '../models/shipping-country.model';\nimport { Globals } from '../globals';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Blog } from '../models/blog.model';\nimport { first } from 'rxjs/operators';\nimport { ProductInCart } from '../models/product-in-cart.model';\nimport { ShippingInfo } from '../models/shipping-address.model';\nimport { BillingInfo } from '../models/billing-address.model';\nimport { Inventory } from '../models/inventory.model';\nimport { v4 as uuid } from 'uuid';\nimport { Order } from '../models/order.model';\nimport { Store } from '../models/store.model';\nimport { StoreTheme } from '../models/theme.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nimport * as i2 from \"@angular/fire/auth\";\nimport * as i3 from \"@angular/fire/functions\";\nimport * as i4 from \"@angular/fire/storage\";\nimport * as i5 from \"ngx-stripe\";\nimport * as i6 from \"@angular/material/snack-bar\";\nexport class LoadService {\n  constructor(platformID, db, auth, functions, storage, stripeService, snackBar) {\n    this.platformID = platformID;\n    this.db = db;\n    this.auth = auth;\n    this.functions = functions;\n    this.storage = storage;\n    this.stripeService = stripeService;\n    this.snackBar = snackBar;\n    this.isShop = false;\n    this.hideCart = false;\n    this.shouldShowCurrency = false;\n  }\n\n  logView() {\n    if (!Globals.didLog && Globals.storeInfo.uid) {\n      Globals.didLog = true;\n      this.functions.httpsCallable(\"updateView\")({\n        storeUID: Globals.storeInfo.uid\n      }).pipe(first()).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (resp) {\n          if (resp) {} else {}\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(), err => {\n        console.error({\n          err\n        });\n      });\n    }\n  }\n\n  beginBankAdd(callback) {\n    this.functions.httpsCallable(\"getExpressCreateLink\")({}).pipe(first()).subscribe( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (resp) {\n        if (resp) {\n          console.log(resp);\n          callback(resp);\n        }\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(), err => {\n      console.error({\n        err\n      });\n    });\n  }\n\n  getBankInfo(callback) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      let sub = _this.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Identifiers\").valueChanges().subscribe(doc => {\n        let docData = doc;\n\n        if (docData) {\n          let activeMerchant = docData.activeMerchant;\n          let merchantID = docData.merchant_id;\n\n          if (activeMerchant && merchantID) {\n            _this.functions.httpsCallable('getBankInfo')({}).pipe(first()).subscribe(resp => {\n              callback(resp);\n            }, err => {\n              callback(undefined);\n              console.error({\n                err\n              });\n            });\n          } else {\n            callback(undefined);\n          }\n        } else {\n          callback(undefined);\n        }\n\n        if (isPlatformBrowser(_this.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  getSubInfo(callback) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this2.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      let sub = _this2.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Identifiers\").valueChanges().subscribe(doc => {\n        var _a;\n\n        let docData = doc;\n\n        if (docData) {\n          let plan_id = docData.plan_id;\n          let can_trial = (_a = docData.canTrial) !== null && _a !== void 0 ? _a : true;\n\n          if (plan_id && plan_id != \"\") {\n            _this2.functions.httpsCallable('getSubInfo')({}).pipe(first()).subscribe(resp => {\n              callback(resp);\n            }, err => {\n              callback(undefined, can_trial);\n              console.error({\n                err\n              });\n            });\n          } else {\n            if (!can_trial) {\n              callback(undefined, false);\n            }\n          }\n        } else {\n          callback(undefined, true);\n        }\n\n        if (isPlatformBrowser(_this2.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  getInventory(callback) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this3.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      let sub = _this3.db.collection(\"Users/\" + uid + \"/Inventory\").valueChanges({\n        idField: 'inventoryID'\n      }).subscribe(docDatas => {\n        let totalInventory = new Array();\n        docDatas.forEach(doc => {\n          var _a;\n\n          let docData = doc;\n\n          if (docData) {\n            let amt = docData.amount;\n            let code = docData.id;\n            let id = docData.inventoryID;\n            let autoReload = (_a = docData.auto_reload) !== null && _a !== void 0 ? _a : false;\n            let timestamp = docData.timestamp.toDate();\n            console.log(Globals.templates);\n            console.log(code);\n            let name = Globals.templates.filter(obj => {\n              return obj.productCode == code;\n            })[0].templateDisplayName;\n            let inventory = new Inventory(code, name, amt, timestamp, id, autoReload);\n            totalInventory.push(inventory);\n          }\n\n          if (isPlatformBrowser(_this3.platformID)) sub.unsubscribe();\n        });\n        callback(totalInventory);\n      });\n    })();\n  }\n\n  setAutoReload(inventory, callback) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this4.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      yield _this4.db.collection(\"Users/\" + uid + \"/Inventory\").doc(inventory.id).update({\n        auto_reload: true\n      });\n      callback(true);\n    })();\n  }\n\n  removeAutoReload(inventory, callback) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this5.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      yield _this5.db.collection(\"Users/\" + uid + \"/Inventory\").doc(inventory.id).update({\n        auto_reload: false\n      });\n      callback(true);\n    })();\n  }\n\n  getCountries() {\n    let sub = this.db.collection(\"Print_Info\").doc(\"Shipping_Info\").valueChanges().subscribe(docData => {\n      const data = docData;\n      const usShipping = Math.round(data.shipping_rate_us * 100);\n      const caShipping = Math.round(data.shipping_rate_canada * 100);\n      const intlShipping = Math.round(data.shipping_rate_intl * 100);\n      const currencies = data.supportedCurrencies;\n      Globals.availableCurrencies = [];\n      currencies.forEach(currency => {\n        var _a;\n\n        const name = currency.country;\n        const flag = currency.flag;\n        const currency_name = currency.name;\n        const rate = currency.rate;\n        const is_main_currency = currency.is_main_currency;\n        const symbol = currency.symbol;\n        const name_full = currency.country_full;\n        const country = new Country(name, flag, name_full, currency_name, symbol, rate, is_main_currency, 0);\n\n        if (name == \"CA\") {\n          country.shipping_rate_usd = caShipping;\n        } else if (name == \"US\") {\n          country.shipping_rate_usd = usShipping;\n          Globals.selectedCurrency = country;\n        } else {\n          country.shipping_rate_usd = intlShipping;\n        }\n\n        if (!((_a = Globals.availableCurrencies) === null || _a === void 0 ? void 0 : _a.includes(country))) {\n          Globals.availableCurrencies.push(country);\n        }\n      });\n      Globals.availableCurrencies.sort(function (a, b) {\n        if (a.name < b.name) {\n          return -1;\n        }\n\n        if (a.name > b.name) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      if (isPlatformBrowser(this.platformID)) {\n        let cacheCurrency = localStorage.getItem(\"LOCAL_CURRENCY\");\n\n        if (cacheCurrency && cacheCurrency != null && cacheCurrency != \"\") {\n          Globals.selectedCurrency = Globals.availableCurrencies.find(currency => currency.currency_name == cacheCurrency);\n        } else {\n          Globals.selectedCurrency = Globals.availableCurrencies.find(currency => currency.currency_name == \"USD\");\n        }\n      }\n\n      if (this.myCallback) this.myCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  getUser(username, uid) {\n    var query = this.db.collection(\"Users\", ref => ref.where(\"Username\", '==', username));\n\n    if (uid) {\n      query = this.db.collection(\"Users\", ref => ref.where(firebase.firestore.FieldPath.documentId(), '==', uid));\n    }\n\n    let sub = query.valueChanges({\n      idField: 'UID'\n    }).subscribe(doc => {\n      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n      let docData = doc[0];\n\n      if (docData) {\n        let uid = docData.UID; //UID OF COMMENT IMAGE\n\n        let dpUID = docData[\"ProfilePicID\"]; //UID OF COMMENT IMAGE\n\n        let username = docData[\"Username\"]; //COMMENTER'S USERNAME\n\n        let fullName = docData[\"Full_Name\"];\n        let bio = docData[\"Bio\"];\n        let notifID = docData[\"Notification ID\"];\n        let userFollowing = (_a = docData[\"Following_List\"]) !== null && _a !== void 0 ? _a : [];\n        let usersBlocking = (_b = docData[\"Users_Blocking\"]) !== null && _b !== void 0 ? _b : [];\n        let followerCount = (_c = docData[\"Followers_Count\"]) !== null && _c !== void 0 ? _c : 0;\n        let followingCount = (_d = docData[\"Following_Count\"]) !== null && _d !== void 0 ? _d : 0;\n        let postCount = (_e = docData[\"Posts_Count\"]) !== null && _e !== void 0 ? _e : 0;\n        let verified = (_f = docData[\"Verified\"]) !== null && _f !== void 0 ? _f : false;\n        let postNotifs = (_g = docData[\"Post_Notifications\"]) !== null && _g !== void 0 ? _g : [];\n        let isPublic = (_h = docData[\"Public\"]) !== null && _h !== void 0 ? _h : true;\n        let slogan = docData[\"Slogan\"];\n        let loading = docData[\"indicator\"];\n        let style = docData[\"store_style\"];\n        let font = docData[\"font\"];\n        let socials = docData[\"Socials\"];\n        Globals.storeInfo = new Store(uid, dpUID, username, fullName, bio, notifID, userFollowing, [], followerCount, postCount, followingCount, usersBlocking, this.getProfileURL(uid, dpUID), verified, isPublic, postNotifs, slogan, undefined, this.getDefaultURL(), this.getDefaultURL(), this.getDefaultURL(), undefined, font, socials);\n        let list = (_j = docData[\"image_list\"]) !== null && _j !== void 0 ? _j : [];\n        list.forEach(type => {\n          if (type == 'theme') {\n            Globals.storeInfo.themeLink = new URL(this.getThemeURL(uid));\n          } else if (type == 'home') {\n            Globals.storeInfo.homeLink = new URL(this.getHomeURL(uid));\n          } else if (type == 'action') {\n            Globals.storeInfo.actionLink = new URL(this.getActionURL(uid));\n          }\n        });\n\n        if (loading === null || loading === void 0 ? void 0 : loading.name) {\n          Globals.storeInfo.loading.name = loading === null || loading === void 0 ? void 0 : loading.name;\n        }\n\n        if (loading === null || loading === void 0 ? void 0 : loading.color) {\n          Globals.storeInfo.loading.color = this.parseColor(loading.color);\n        }\n\n        if (loading === null || loading === void 0 ? void 0 : loading.bg_color) {\n          Globals.storeInfo.loading.bg_color = this.parseColor(loading.bg_color);\n        }\n\n        if (style) {\n          Globals.storeInfo.colorStyle = new StoreTheme(style === null || style === void 0 ? void 0 : style.name, style === null || style === void 0 ? void 0 : style.back_code, style === null || style === void 0 ? void 0 : style.text_code, this.parseColor(style === null || style === void 0 ? void 0 : style.bg_color), this.parseColor(style === null || style === void 0 ? void 0 : style.btn_color));\n        }\n      } else {\n        Globals.storeInfo.uid = \"\";\n      }\n\n      if (this.myCallback) this.myCallback();\n\n      if (isPlatformBrowser(this.platformID)) {\n        (_k = this.rootComponent) === null || _k === void 0 ? void 0 : _k.getCart();\n        sub.unsubscribe();\n      }\n    });\n  }\n\n  parseColor(color) {\n    var finalArr = new Array();\n    color === null || color === void 0 ? void 0 : color.split(\",\").forEach(color => {\n      finalArr.push(Number(color.trim()));\n    });\n    return finalArr;\n  }\n\n  getCustomer() {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      Globals.userInfo = new Store();\n      let uid = (_a = yield _this6.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      if (uid) {\n        let sub = _this6.db.collection(\"Users\").doc(uid).valueChanges({\n          idField: 'UID'\n        }).subscribe(doc => {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n          let docData = doc;\n\n          if (docData) {\n            let uid = docData.UID; //UID OF COMMENT IMAGE\n\n            let dpUID = docData[\"ProfilePicID\"]; //UID OF COMMENT IMAGE\n\n            let username = docData[\"Username\"]; //COMMENTER'S USERNAME\n\n            let fullName = docData[\"Full_Name\"];\n            let bio = docData[\"Bio\"];\n            let notifID = docData[\"Notification ID\"];\n            let userFollowing = (_a = docData[\"Following_List\"]) !== null && _a !== void 0 ? _a : [];\n            let usersBlocking = (_b = docData[\"Users_Blocking\"]) !== null && _b !== void 0 ? _b : [];\n            let followerCount = (_c = docData[\"Followers_Count\"]) !== null && _c !== void 0 ? _c : 0;\n            let followingCount = (_d = docData[\"Following_Count\"]) !== null && _d !== void 0 ? _d : 0;\n            let postCount = (_e = docData[\"Posts_Count\"]) !== null && _e !== void 0 ? _e : 0;\n            let verified = (_f = docData[\"Verified\"]) !== null && _f !== void 0 ? _f : false;\n            let postNotifs = (_g = docData[\"Post_Notifications\"]) !== null && _g !== void 0 ? _g : [];\n            let isPublic = (_h = docData[\"Public\"]) !== null && _h !== void 0 ? _h : true;\n            let slogan = docData[\"Slogan\"];\n            let style = docData[\"store_style\"];\n            let font = docData[\"font\"];\n            let socials = docData[\"Socials\"];\n            let loading = docData[\"indicator\"];\n            Globals.userInfo = new Store(uid, dpUID, username, fullName, bio, notifID, userFollowing, [], followerCount, postCount, followingCount, usersBlocking, _this6.getProfileURL(uid, dpUID), verified, isPublic, postNotifs, slogan, undefined, _this6.getDefaultURL(), _this6.getDefaultURL(), _this6.getDefaultURL(), undefined, font, socials);\n            let list = (_j = docData[\"image_list\"]) !== null && _j !== void 0 ? _j : [];\n            list.forEach(type => {\n              if (type == 'theme') {\n                Globals.userInfo.themeLink = new URL(_this6.getThemeURL(uid));\n              } else if (type == 'home') {\n                Globals.userInfo.homeLink = new URL(_this6.getHomeURL(uid));\n              } else if (type == 'action') {\n                Globals.userInfo.actionLink = new URL(_this6.getActionURL(uid));\n              }\n            });\n\n            if (loading === null || loading === void 0 ? void 0 : loading.name) {\n              Globals.userInfo.loading.name = loading === null || loading === void 0 ? void 0 : loading.name;\n            }\n\n            if (loading === null || loading === void 0 ? void 0 : loading.color) {\n              Globals.userInfo.loading.color = _this6.parseColor(loading.color);\n            }\n\n            if (loading === null || loading === void 0 ? void 0 : loading.bg_color) {\n              Globals.userInfo.loading.bg_color = _this6.parseColor(loading.bg_color);\n            }\n\n            if (style) {\n              Globals.userInfo.colorStyle = new StoreTheme(style === null || style === void 0 ? void 0 : style.name, style === null || style === void 0 ? void 0 : style.back_code, style === null || style === void 0 ? void 0 : style.text_code, _this6.parseColor(style === null || style === void 0 ? void 0 : style.bg_color), _this6.parseColor(style === null || style === void 0 ? void 0 : style.btn_color));\n            }\n\n            if (_this6.myCallback) _this6.myCallback();\n            if (isPlatformBrowser(_this6.platformID)) sub.unsubscribe();\n          }\n        });\n      } else {\n        if (_this6.myCallback) _this6.myCallback();\n      }\n    })();\n  }\n\n  getThemes() {\n    Globals.themes = [];\n    var query = this.db.collection(\"Store_Themes\", ref => ref.orderBy(\"index\", \"asc\"));\n    let sub = query.valueChanges().subscribe(docDatas => {\n      docDatas.forEach(doc => {\n        var _a;\n\n        let docData = doc;\n\n        if (docData) {\n          let name = docData.name;\n          let btn_color = docData.btn_color;\n          let bg_color = docData.bg_color;\n          let back_code = docData.back_code;\n          let text_code = docData.text_code;\n          let theme = new StoreTheme(name, back_code, text_code, this.parseColor(bg_color), this.parseColor(btn_color));\n          (_a = Globals.themes) === null || _a === void 0 ? void 0 : _a.push(theme);\n        }\n      });\n      if (this.myCallback) this.myCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  getPosts(callback, filterID, uid = Globals.storeInfo.uid) {\n    const time = firebase.firestore.Timestamp.now();\n    var query = this.db.collection(\"Users/\" + uid + \"/Products\", ref => ref.where(\"Timestamp\", '<=', time).where(\"Has_Picture\", '==', true).where(\"Available\", '==', true).where(\"Public\", '==', true).orderBy(\"Timestamp\", \"desc\"));\n\n    if (filterID) {\n      query = this.db.collection(\"Users/\" + uid + \"/Products\", ref => ref.where(\"Timestamp\", '<=', time).where(\"Type\", '==', filterID).where(\"Available\", '==', true).where(\"Public\", '==', true).orderBy(\"Timestamp\", \"desc\"));\n    }\n\n    let sub = query.get().subscribe(docDatas => {\n      var products = new Array();\n      console.log(docDatas);\n      docDatas.docs.forEach(doc => {\n        var _a, _b, _c, _d;\n\n        let docData = doc.data();\n\n        if (docData) {\n          let uid = docData.UID;\n          let productID = docData.Product_ID;\n          let timestamp = docData.Timestamp.toDate();\n          let description = docData.Description;\n          let name = docData.Name;\n          let blurred = docData.Blurred;\n          let templateColor = docData.Template_Color;\n          let likes = docData.Likes;\n          let priceCents = docData.Price_Cents;\n          let comments = docData.Comments;\n          let isPublic = (_a = docData.Public) !== null && _a !== void 0 ? _a : true;\n          let productType = (_b = docData.Type) !== null && _b !== void 0 ? _b : \"ATC1000\";\n          let displaySide = (_c = docData.Side) !== null && _c !== void 0 ? _c : \"front\";\n          let sides = (_d = docData[\"Sides\"]) !== null && _d !== void 0 ? _d : [\"Front\"];\n          let product = new Product(uid, productID, description, productID, timestamp, \"\", blurred, priceCents, name, templateColor, likes, false, comments, true, isPublic, productType, displaySide, sides, this.getURL(uid, productID));\n          products.push(product);\n        }\n      });\n\n      if (!filterID) {\n        Globals.availableTemplates = this.getTemplatesFiltered(products);\n      }\n\n      console.log(products);\n      products.sort(function (a, b) {\n        if (a.timestamp > b.timestamp) {\n          return -1;\n        }\n\n        if (a.timestamp < b.timestamp) {\n          return 1;\n        }\n\n        return 0;\n      });\n\n      if (isPlatformBrowser(this.platformID)) {\n        sub.unsubscribe();\n      }\n\n      callback(products);\n    });\n  }\n\n  setFilterProducts(products) {\n    if (this.shopComponent) this.shopComponent.storeProducts = products;\n  }\n\n  addProduct(product) {\n    var _a, _b, _c;\n\n    if (this.shopComponent) (_a = this.shopComponent.storeProducts) === null || _a === void 0 ? void 0 : _a.unshift(product);\n    if (this.adminComponent) (_b = this.adminComponent.storeProducts) === null || _b === void 0 ? void 0 : _b.unshift(product);\n    if (this.homeComponent) (_c = this.homeComponent.storeProducts) === null || _c === void 0 ? void 0 : _c.unshift(product);\n  }\n\n  editProduct(product) {\n    var _a, _b, _c;\n\n    if (this.shopComponent) {\n      let p = (_a = this.shopComponent.storeProducts) === null || _a === void 0 ? void 0 : _a.filter(obj => {\n        return obj.productID == product.productID;\n      })[0];\n      p.name = product.name;\n      p.description = product.description;\n      p.price = product.price;\n    }\n\n    if (this.adminComponent) {\n      let p = (_b = this.adminComponent.storeProducts) === null || _b === void 0 ? void 0 : _b.filter(obj => {\n        return obj.productID == product.productID;\n      })[0];\n      p.name = product.name;\n      p.description = product.description;\n      p.price = product.price;\n    }\n\n    if (this.homeComponent) {\n      let p = (_c = this.homeComponent.storeProducts) === null || _c === void 0 ? void 0 : _c.filter(obj => {\n        return obj.productID == product.productID;\n      })[0];\n      p.name = product.name;\n      p.description = product.description;\n      p.price = product.price;\n    }\n  }\n\n  removeProduct(product) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n\n    if (this.shopComponent) {\n      let p = (_a = this.shopComponent.storeProducts) === null || _a === void 0 ? void 0 : _a.filter(obj => {\n        return obj.productID == product.productID;\n      })[0];\n      let index = (_b = this.shopComponent.storeProducts) === null || _b === void 0 ? void 0 : _b.indexOf(p);\n\n      if (index) {\n        (_c = this.shopComponent.storeProducts) === null || _c === void 0 ? void 0 : _c.splice(index, 1);\n      }\n    }\n\n    if (this.adminComponent) {\n      let p = (_d = this.adminComponent.storeProducts) === null || _d === void 0 ? void 0 : _d.filter(obj => {\n        return obj.productID == product.productID;\n      })[0];\n      let index = (_e = this.adminComponent.storeProducts) === null || _e === void 0 ? void 0 : _e.indexOf(p);\n\n      if (index) {\n        (_f = this.adminComponent.storeProducts) === null || _f === void 0 ? void 0 : _f.splice(index, 1);\n      }\n    }\n\n    if (this.homeComponent) {\n      let p = (_g = this.homeComponent.storeProducts) === null || _g === void 0 ? void 0 : _g.filter(obj => {\n        return obj.productID == product.productID;\n      })[0];\n      let index = (_h = this.homeComponent.storeProducts) === null || _h === void 0 ? void 0 : _h.indexOf(p);\n\n      if (index) {\n        (_j = this.homeComponent.storeProducts) === null || _j === void 0 ? void 0 : _j.splice(index, 1);\n      }\n    }\n  }\n\n  getBlogs(filterID) {\n    Globals.blogs = [];\n    const time = firebase.firestore.Timestamp.now();\n    var query = this.db.collection(\"Users/\" + Globals.storeInfo.uid + \"/Blogs\", ref => ref.where(\"Timestamp\", '<=', time).where(\"isAvailable\", '==', true).orderBy(\"Timestamp\", \"desc\"));\n    let sub = query.valueChanges({\n      idField: \"Blog_ID\"\n    }).subscribe(docDatas => {\n      docDatas.forEach(doc => {\n        let docData = doc;\n\n        if (docData) {\n          let uid = docData.UID;\n          let title = docData.Title;\n          let timestamp = docData.Timestamp.toDate();\n          let isAvailable = docData.isAvailable;\n          let blogID = docData.Blog_ID;\n          let blogItems = docData.Blog_Items;\n          let coverURL = docData.Cover_URL;\n          let blog = new Blog(uid, timestamp, \"\", isAvailable, title, blogItems, blogID, coverURL);\n          Globals.blogs.push(blog);\n        }\n      });\n      if (this.myCallback) this.myCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  hasEmptyProperties(obj, ignoreKeys) {\n    for (var key in obj) {\n      if (ignoreKeys.includes(key)) {\n        continue;\n      }\n\n      if (obj[key] == null || obj[key] == \"\" || obj[key] == undefined) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  linkAddress(callback) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      let uid = (_a = yield _this7.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      let shipping = Globals.shippingInfo;\n\n      if (uid && shipping && _this7.hasEmptyProperties(shipping, [\"unit\", \"company\", \"country_code\"])) {\n        return;\n      }\n\n      let email = shipping.email;\n\n      if ((_b = yield _this7.isLoggedIn()) === null || _b === void 0 ? void 0 : _b.isAnonymous) {\n        let fData = {\n          email: email\n        };\n\n        _this7.functions.httpsCallable('updateAuth')(fData).pipe(first()).subscribe( /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator(function* (resp) {\n            if (typeof resp == \"string\") {\n              yield _this7.setAddress(uid);\n\n              _this7.auth.signInWithEmailAndPassword(email, resp).then(() => {\n                // Signed in..\n                callback();\n              }).catch(error => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                console.log(errorMessage);\n                callback(\"An error occured, please try again.\"); // if (this.myCallback) \n                // this.myCallback()\n              });\n            } else {\n              //error\n              console.log(resp);\n\n              if (resp.errorInfo.code == \"auth/email-already-exists\") {\n                console.log(\"This email address is being used by another account.\"); //show popup ******\n\n                callback(\"Your email is being used by another Guest order.\");\n              } else {\n                console.log(resp.errorInfo.code);\n                callback(\"An error occured, please try again.\");\n              }\n            }\n          });\n\n          return function (_x3) {\n            return _ref3.apply(this, arguments);\n          };\n        }(), err => {\n          console.error({\n            err\n          });\n        });\n      } else {\n        yield _this7.setAddress(uid);\n        callback();\n      }\n    })();\n  }\n\n  setAddress(uid) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      let shipping = Globals.shippingInfo;\n      let data = {\n        Administrative_Area: shipping === null || shipping === void 0 ? void 0 : shipping.admin_area,\n        City: shipping === null || shipping === void 0 ? void 0 : shipping.city,\n        Country: shipping === null || shipping === void 0 ? void 0 : shipping.country,\n        First_Name: shipping === null || shipping === void 0 ? void 0 : shipping.name.split(' ').slice(0, -1).join(' '),\n        Last_Name: shipping === null || shipping === void 0 ? void 0 : shipping.name.split(' ').slice(-1).join(' '),\n        Phone_Num: shipping === null || shipping === void 0 ? void 0 : shipping.phone_num,\n        Email: shipping === null || shipping === void 0 ? void 0 : shipping.email,\n        Postal_Code: shipping === null || shipping === void 0 ? void 0 : shipping.postal,\n        Street: shipping === null || shipping === void 0 ? void 0 : shipping.street,\n        Company: (_a = shipping === null || shipping === void 0 ? void 0 : shipping.company) !== null && _a !== void 0 ? _a : \"\",\n        Unit_Number: (_b = shipping === null || shipping === void 0 ? void 0 : shipping.unit) !== null && _b !== void 0 ? _b : \"\"\n      };\n\n      if (uid) {\n        yield _this8.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Delivery_Address\").set(data);\n      }\n    })();\n  }\n\n  createPayment(storeID, isCard = true, callback) {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      _this9.functions.httpsCallable('createWebIntent')({\n        merchant_uid: storeID,\n        isCard: isCard\n      }).pipe(first()).subscribe( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator(function* (resp) {\n          callback(resp.order_id, resp.client_secret);\n        });\n\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }(), err => {\n        callback(\"\", \"\", err);\n      });\n    })();\n  }\n\n  stopSubscription(callback) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      _this10.functions.httpsCallable('removeSubIntent')({}).pipe(first()).subscribe( /*#__PURE__*/function () {\n        var _ref5 = _asyncToGenerator(function* (resp) {\n          console.log(resp);\n          callback(resp);\n        });\n\n        return function (_x5) {\n          return _ref5.apply(this, arguments);\n        };\n      }(), err => {\n        console.error({\n          err\n        });\n      });\n    })();\n  }\n\n  reactivateSubscription(callback) {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      _this11.functions.httpsCallable('reactivateSubIntent')({}).pipe(first()).subscribe( /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator(function* (resp) {\n          console.log(resp);\n          callback(resp);\n        });\n\n        return function (_x6) {\n          return _ref6.apply(this, arguments);\n        };\n      }(), err => {\n        console.error({\n          err\n        });\n      });\n    })();\n  }\n\n  startSubscription(callback) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      _this12.functions.httpsCallable('createSubIntent')({}).pipe(first()).subscribe( /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator(function* (resp) {\n          console.log(resp);\n          callback(resp);\n        });\n\n        return function (_x7) {\n          return _ref7.apply(this, arguments);\n        };\n      }(), err => {\n        console.error({\n          err\n        });\n      });\n    })();\n  }\n\n  createBulkPayment(type, callback) {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      _this13.functions.httpsCallable('createBulkIntent')({\n        type: type\n      }).pipe(first()).subscribe( /*#__PURE__*/function () {\n        var _ref8 = _asyncToGenerator(function* (resp) {\n          callback(resp);\n        });\n\n        return function (_x8) {\n          return _ref8.apply(this, arguments);\n        };\n      }(), err => {\n        console.error({\n          err\n        });\n      });\n    })();\n  }\n\n  linkCard(details, callback) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      var billing = Globals.billingInfo;\n      let uid = (_a = yield _this14.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      console.log(\"assssss\");\n\n      if (details.card && details.stripe) {\n        if (billing && _this14.hasEmptyProperties(billing, [\"unit\", \"company\", \"brand\", \"number\"])) {\n          console.log(billing);\n          return;\n        }\n\n        console.log(\"s\");\n        let stripe = details.stripe;\n\n        if (_this14.isUndefined(billing === null || billing === void 0 ? void 0 : billing.unit)) {\n          billing.unit = undefined;\n        }\n\n        let name = billing === null || billing === void 0 ? void 0 : billing.name;\n        let card = details.card;\n        var b = {\n          line1: billing === null || billing === void 0 ? void 0 : billing.street,\n          city: billing === null || billing === void 0 ? void 0 : billing.city,\n          state: billing === null || billing === void 0 ? void 0 : billing.admin_area,\n          postal_code: billing === null || billing === void 0 ? void 0 : billing.postal,\n          country: billing === null || billing === void 0 ? void 0 : billing.country_code\n        };\n\n        if (billing === null || billing === void 0 ? void 0 : billing.unit) {\n          b.line2 = billing.unit;\n        }\n\n        stripe.createPaymentMethod({\n          type: 'card',\n          card: card.element,\n          billing_details: {\n            address: b,\n            name: name\n          }\n        }).subscribe(result => {\n          var _a;\n\n          if (result.paymentMethod) {\n            // Use the token\n            var fData = {\n              token: result.paymentMethod.id,\n              name: billing === null || billing === void 0 ? void 0 : billing.name,\n              line1: billing === null || billing === void 0 ? void 0 : billing.street,\n              line2: (_a = billing === null || billing === void 0 ? void 0 : billing.unit) !== null && _a !== void 0 ? _a : null,\n              city: billing === null || billing === void 0 ? void 0 : billing.city,\n              state: billing === null || billing === void 0 ? void 0 : billing.admin_area,\n              zip: billing === null || billing === void 0 ? void 0 : billing.postal,\n              country: billing === null || billing === void 0 ? void 0 : billing.country_code\n            };\n\n            if (true) {\n              _this14.functions.httpsCallable('verifyCard')(fData).pipe(first()).subscribe( /*#__PURE__*/function () {\n                var _ref9 = _asyncToGenerator(function* (resp) {\n                  var _a, _b;\n\n                  let data = {\n                    Administrative_Area: billing === null || billing === void 0 ? void 0 : billing.admin_area,\n                    City: billing === null || billing === void 0 ? void 0 : billing.city,\n                    Country: billing === null || billing === void 0 ? void 0 : billing.country,\n                    First_Name: billing === null || billing === void 0 ? void 0 : billing.name.split(' ').slice(0, -1).join(' '),\n                    Last_Name: billing === null || billing === void 0 ? void 0 : billing.name.split(' ').slice(-1).join(' '),\n                    Postal_Code: billing === null || billing === void 0 ? void 0 : billing.postal,\n                    Street: billing === null || billing === void 0 ? void 0 : billing.street,\n                    Company: (_a = billing === null || billing === void 0 ? void 0 : billing.company) !== null && _a !== void 0 ? _a : \"\",\n                    Unit_Number: (_b = billing === null || billing === void 0 ? void 0 : billing.unit) !== null && _b !== void 0 ? _b : \"\"\n                  };\n\n                  if (uid) {\n                    yield _this14.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Billing_Address\").set(data);\n                  }\n\n                  callback();\n                });\n\n                return function (_x9) {\n                  return _ref9.apply(this, arguments);\n                };\n              }(), err => {\n                callback(err);\n                console.error({\n                  err\n                });\n              });\n            }\n          } else if (result.error) {\n            // Error creating the token\n            callback(result.error.message);\n            console.log(result.error.message);\n          }\n        });\n      } else {\n        let data = {\n          Administrative_Area: billing === null || billing === void 0 ? void 0 : billing.admin_area,\n          City: billing === null || billing === void 0 ? void 0 : billing.city,\n          Country: billing === null || billing === void 0 ? void 0 : billing.country,\n          First_Name: billing === null || billing === void 0 ? void 0 : billing.name.split(' ').slice(0, -1).join(' '),\n          Last_Name: billing === null || billing === void 0 ? void 0 : billing.name.split(' ').slice(-1).join(' '),\n          Postal_Code: billing === null || billing === void 0 ? void 0 : billing.postal,\n          Street: billing === null || billing === void 0 ? void 0 : billing.street,\n          Company: (_b = billing === null || billing === void 0 ? void 0 : billing.company) !== null && _b !== void 0 ? _b : \"\",\n          Unit_Number: (_c = billing === null || billing === void 0 ? void 0 : billing.unit) !== null && _c !== void 0 ? _c : \"\"\n        };\n\n        if (uid) {\n          console.log(\"adsfg\");\n          yield _this14.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Billing_Address\").set(data);\n        }\n\n        if (_this14.myCallback) _this14.myCallback();\n      }\n    })();\n  }\n\n  getBlog(blogID) {\n    Globals.selectedBlog = new Blog();\n    let sub = this.db.collectionGroup(\"Blogs\", ref => ref.where(\"Blog_ID\", '==', blogID)).valueChanges().subscribe(docDatas => {\n      docDatas.forEach(doc => {\n        const docData = doc;\n\n        if (docData) {\n          let uid = docData.UID;\n          let title = docData.Title;\n          let timestamp = docData.Timestamp.toDate();\n          let isAvailable = docData.isAvailable;\n          let blogID = docData.Blog_ID;\n          let blogItems = docData.Blog_Items;\n          let coverURL = docData.Cover_URL;\n          let blog = new Blog(uid, timestamp, \"\", isAvailable, title, blogItems, blogID, coverURL);\n          Globals.selectedBlog = blog;\n        }\n      });\n      if (this.myCallback) this.myCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  getAllBillingInfo() {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this15.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      let sub = _this15.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Identifiers\").valueChanges().subscribe(doc => {\n        let docData = doc;\n\n        if (docData) {\n          var card_type = docData.card_type;\n\n          if (card_type) {\n            card_type = card_type[0].toUpperCase() + card_type.slice(1);\n          }\n\n          let card_last_4 = docData.card_last_4;\n\n          if (Globals.billingInfo) {\n            Globals.billingInfo.brand = card_type;\n            Globals.billingInfo.number = card_last_4;\n          } else {\n            Globals.billingInfo = new BillingInfo(undefined, undefined, card_last_4, card_type);\n          }\n        } else {\n          Globals.billingInfo = new BillingInfo();\n        }\n\n        _this15.getBillingAddress();\n\n        if (isPlatformBrowser(_this15.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  getBillingInfo() {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this16.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      let sub = _this16.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Identifiers\").valueChanges().subscribe(doc => {\n        let docData = doc;\n\n        if (docData) {\n          let card_type = docData.card_type;\n          let card_last_4 = docData.card_last_4;\n\n          if (Globals.billingInfo) {\n            Globals.billingInfo.brand = card_type;\n            Globals.billingInfo.number = card_last_4;\n          } else {\n            Globals.billingInfo = new BillingInfo(undefined, undefined, card_last_4, card_type);\n          }\n        } else {\n          Globals.billingInfo = new BillingInfo();\n        }\n\n        if (_this16.myCallback) _this16.myCallback();\n        if (isPlatformBrowser(_this16.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  getShippingAddress(oUID) {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      var uid = oUID;\n\n      if (!uid) {\n        uid = (_a = yield _this17.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      }\n\n      let sub = _this17.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Delivery_Address\").valueChanges().subscribe(doc => {\n        var _a, _b, _c;\n\n        Globals.shippingInfo = undefined;\n        let docData = doc;\n\n        if (docData) {\n          let area = docData.Administrative_Area;\n          let city = docData.City;\n          let country = docData.Country;\n          let firstName = docData.First_Name;\n          let lastName = docData.Last_Name;\n          let name = firstName + \" \" + lastName;\n          let phone = docData.Phone_Num;\n          let postal_code = docData.Postal_Code;\n          let street = docData.Street;\n          var company = (_a = docData.Company) !== null && _a !== void 0 ? _a : \"\";\n          var email = (_b = docData.Email) !== null && _b !== void 0 ? _b : \"\";\n          if (company == \"\") company = undefined;\n          if (email == \"\") email = undefined;\n          var unit = (_c = docData.Unit_Number) !== null && _c !== void 0 ? _c : \"\";\n          if (unit == \"\") unit = undefined;\n          Globals.shippingInfo = new ShippingInfo(name, company, street, city, country, area, unit, postal_code, phone, undefined, email);\n        } else {\n          Globals.shippingInfo = new ShippingInfo();\n        }\n\n        if (_this17.myCallback) _this17.myCallback();\n        if (isPlatformBrowser(_this17.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  getBillingAddress() {\n    var _this18 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this18.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      let sub = _this18.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Billing_Address\").valueChanges().subscribe(doc => {\n        // Globals.selectedBlog = undefined\n        var _a, _b;\n\n        let docData = doc;\n\n        if (docData) {\n          let area = docData.Administrative_Area;\n          let city = docData.City;\n          let country = docData.Country;\n          let firstName = docData.First_Name;\n          let lastName = docData.Last_Name;\n          let name = firstName + \" \" + lastName;\n          let postal_code = docData.Postal_Code;\n          let street = docData.Street;\n          var company = (_a = docData.Company) !== null && _a !== void 0 ? _a : \"\";\n          if (company == \"\") company = undefined;\n          var unit = (_b = docData.Unit_Number) !== null && _b !== void 0 ? _b : \"\";\n          if (unit == \"\") unit = undefined;\n\n          if (Globals.billingInfo) {\n            Globals.billingInfo.admin_area = area;\n            Globals.billingInfo.city = city;\n            Globals.billingInfo.country = country;\n            Globals.billingInfo.name = name;\n            Globals.billingInfo.postal = postal_code;\n            Globals.billingInfo.street = street;\n            Globals.billingInfo.company = company !== null && company !== void 0 ? company : \"\";\n          } else {\n            Globals.billingInfo = new BillingInfo(name, company, undefined, undefined, street, city, country, area, unit, postal_code, undefined);\n          }\n        } else {\n          Globals.billingInfo = new BillingInfo();\n        }\n\n        if (_this18.myCallback) _this18.myCallback();\n        if (isPlatformBrowser(_this18.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  isUndefined(element) {\n    return element == undefined || element == null || element == \"\";\n  }\n\n  getTax(taxData) {\n    var _this19 = this;\n\n    return _asyncToGenerator(function* () {\n      // let uid = (await this.isLoggedIn())?.uid\n      var _a, _b;\n\n      const country = taxData.country;\n      const admin = taxData.admin_area;\n      const street = taxData.street;\n      const postal = taxData.postal;\n      var salesTax = 0.0;\n\n      if (country === \"Canada\" || country === \"CA\") {\n        console.log(admin);\n        let a = (_b = (_a = Globals.matchingProvince(admin)) === null || _a === void 0 ? void 0 : _a.abbreviation) !== null && _b !== void 0 ? _b : \"ON\";\n\n        let sub = _this19.db.collection(\"Canada_Tax_Docs\").doc(a).get().subscribe(doc => {\n          // Globals.selectedBlog = undefined\n          let taxDoc = doc.data();\n          console.log(taxDoc);\n\n          if (taxDoc) {\n            if (!_this19.isUndefined(taxDoc.HST)) {\n              salesTax += taxDoc.HST;\n            } else {\n              if (!_this19.isUndefined(taxDoc.GST)) {\n                salesTax += taxDoc.GST;\n              }\n\n              if (!_this19.isUndefined(taxDoc.PST)) {\n                salesTax += taxDoc.PST;\n              }\n            }\n          }\n\n          Globals.shippingTax = salesTax;\n          if (_this19.myCallback) _this19.myCallback();\n          if (isPlatformBrowser(_this19.platformID)) sub.unsubscribe();\n        });\n      } else if (country === \"United States\" || country === \"US\" || country === \"USA\") {\n        Globals.shippingTax = salesTax;\n        if (_this19.myCallback) _this19.myCallback();\n      } else if (country === \"United Kingdom\" || country === \"UK\" || country === \"GB\") {\n        let sub = _this19.db.collection(\"Canada_Tax_Docs\").doc(admin).valueChanges().subscribe(doc => {\n          // Globals.selectedBlog = undefined\n          let taxDoc = doc;\n\n          if (taxDoc) {\n            if (!_this19.isUndefined(taxDoc.HST)) {\n              salesTax += taxDoc.VAT;\n            }\n          }\n\n          Globals.shippingTax = salesTax;\n          if (_this19.myCallback) _this19.myCallback();\n          if (isPlatformBrowser(_this19.platformID)) sub.unsubscribe();\n        });\n      }\n    })();\n  }\n\n  addToCart(mappedData) {\n    var _this20 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      let uid = (_a = yield _this20.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      const storeUID = Globals.storeInfo.uid;\n\n      if (!storeUID) {\n        return;\n      }\n\n      let data = {\n        \"Cart_List\": firebase.firestore.FieldValue.arrayUnion(mappedData),\n        \"UID\": storeUID,\n        \"Timestamp\": mappedData.Timestamp\n      };\n\n      if (uid) {\n        yield _this20.db.collection(\"Users/\" + uid + \"/Cart_Info\").doc(\"Cart_List_\" + storeUID).set(data, {\n          merge: true\n        });\n      }\n\n      _this20.rootComponent.cart = undefined;\n      (_b = _this20.rootComponent) === null || _b === void 0 ? void 0 : _b.getCart();\n    })();\n  }\n\n  saveUser(mappedData) {\n    var _this21 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this21.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      if (mappedData.profile_pic) {\n        let picID = yield _this21.uploadFile(mappedData, uid);\n        mappedData.picID = picID;\n      }\n\n      yield _this21.saveUsername(mappedData, uid);\n    })();\n  }\n\n  saveEmail(mappedData, callback) {\n    var _this22 = this;\n\n    return _asyncToGenerator(function* () {\n      let user = yield _this22.isLoggedIn();\n      let email = user === null || user === void 0 ? void 0 : user.email;\n      let password = mappedData.password;\n      let newEmail = mappedData.newEmail;\n      const credentials = firebase.auth.EmailAuthProvider.credential(email, password);\n      user === null || user === void 0 ? void 0 : user.reauthenticateWithCredential(credentials).then( /*#__PURE__*/function () {\n        var _ref10 = _asyncToGenerator(function* (result) {\n          if (result) {\n            user === null || user === void 0 ? void 0 : user.updateEmail(newEmail).then( /*#__PURE__*/_asyncToGenerator(function* () {\n              callback(true);\n            }));\n          } else {\n            callback(false);\n          }\n        });\n\n        return function (_x10) {\n          return _ref10.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  savePassword(mappedData, callback) {\n    var _this23 = this;\n\n    return _asyncToGenerator(function* () {\n      let user = yield _this23.isLoggedIn();\n      let email = user === null || user === void 0 ? void 0 : user.email;\n      let password = mappedData.password;\n      let newPassword = mappedData.newPassword;\n      const credentials = firebase.auth.EmailAuthProvider.credential(email, password);\n      user === null || user === void 0 ? void 0 : user.reauthenticateWithCredential(credentials).then( /*#__PURE__*/function () {\n        var _ref12 = _asyncToGenerator(function* (result) {\n          if (result) {\n            user === null || user === void 0 ? void 0 : user.updatePassword(newPassword).then( /*#__PURE__*/_asyncToGenerator(function* () {\n              callback(true);\n            }));\n          } else {\n            callback(false);\n          }\n        });\n\n        return function (_x11) {\n          return _ref12.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  updateProduct(mappedData) {\n    var _this24 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      let uid = (_b = (_a = yield _this24.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : \"\";\n      let productID = mappedData.productID;\n      let data = {\n        \"Name\": (_c = mappedData.name) !== null && _c !== void 0 ? _c : \"Post\",\n        \"Search_Name\": (_d = mappedData.name.toLowerCase()) !== null && _d !== void 0 ? _d : \"post\",\n        \"Description\": (_e = mappedData.description) !== null && _e !== void 0 ? _e : \"\",\n        \"Price_Cents\": (_f = mappedData.price) !== null && _f !== void 0 ? _f : 2000,\n        \"Available\": (_g = mappedData.available) !== null && _g !== void 0 ? _g : true\n      };\n      yield _this24.db.collection(\"Users/\" + uid + \"/Products\").doc(productID).update(data);\n      let product = new Product(uid, productID, data.Description, productID, undefined, undefined, undefined, data.Price_Cents, data.Name, undefined, undefined, undefined, undefined, data.Available);\n\n      _this24.editProduct(product);\n\n      return console.log(\"Updated Product\");\n    })();\n  }\n\n  deleteProduct(mappedData) {\n    var _this25 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      let uid = (_b = (_a = yield _this25.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : \"\";\n      let productID = mappedData.productID;\n      let data = {\n        \"Available\": false\n      };\n      yield _this25.db.collection(\"Users/\" + uid + \"/Products\").doc(productID).update(data);\n      let product = new Product(undefined, undefined, undefined, productID);\n\n      _this25.removeProduct(product);\n    })();\n  }\n\n  createProduct(mappedData) {\n    var _this26 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c, _d;\n\n      let uid = (_b = (_a = yield _this26.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid) !== null && _b !== void 0 ? _b : \"\";\n\n      let productID = _this26.db.collection(\"Users/\" + uid + \"/Products\").doc().ref.id;\n\n      console.log(productID);\n      let data = (_c = yield _this26.saveProductInfo(mappedData, productID, uid)) !== null && _c !== void 0 ? _c : {};\n\n      if (((_d = mappedData.images) === null || _d === void 0 ? void 0 : _d.length) > 0) {\n        yield mappedData.images.forEach( /*#__PURE__*/function () {\n          var _ref14 = _asyncToGenerator(function* (image) {\n            let url = yield _this26.uploadProductImages(image.img, image.type, productID, uid);\n            console.log(url);\n          });\n\n          return function (_x12) {\n            return _ref14.apply(this, arguments);\n          };\n        }());\n        let url = mappedData.images.filter(obj => {\n          return obj.type == \"link_\";\n        })[0].img;\n        let product = new Product(uid, productID, data.Description, productID, data.Timestamp, undefined, data.Blurred, data.Price_Cents, data.Name, data.Template_Color, data.Likes, false, data.Comments, data.Available, data.Public, data.Type, data.Side, data.sides, url);\n\n        _this26.addProduct(product); // Globals.products?.unshift(product)\n\n      }\n    })();\n  }\n\n  saveStore(mappedData) {\n    var _this27 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      let uid = (_a = yield _this27.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n\n      if (((_b = mappedData.images) === null || _b === void 0 ? void 0 : _b.length) > 0) {\n        mappedData.image_list = new Array();\n        yield mappedData.images.forEach( /*#__PURE__*/function () {\n          var _ref15 = _asyncToGenerator(function* (image) {\n            mappedData.image_list.push(image.type);\n            let url = yield _this27.uploadStoreImages(image.img, image.type, uid);\n          });\n\n          return function (_x13) {\n            return _ref15.apply(this, arguments);\n          };\n        }());\n      }\n\n      yield _this27.saveStoreInfo(mappedData, uid);\n    })();\n  }\n\n  uploadProductImages(image, type, productID, uid) {\n    var _this28 = this;\n\n    return _asyncToGenerator(function* () {\n      const filePath = 'Users/' + uid + '/Products/' + productID + \"/\" + type + productID + '.png';\n\n      let ref = _this28.storage.ref(filePath);\n\n      const byteArray = new Buffer(image.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''), 'base64'); // const task = await this.storage.upload(filePath, byteArray);\n\n      const task = yield ref.put(byteArray);\n      const url = yield task.ref.getDownloadURL(); // if (type == \"theme\"){\n      //   Globals.userInfo!.themeLink = url\n      //   if (Globals.storeInfo.uid == Globals.userInfo?.uid){\n      //     Globals.storeInfo!.themeLink = url\n      //   }\n      // }\n      // else if (type == \"home\"){\n      //   Globals.userInfo!.homeLink = url\n      //   if (Globals.storeInfo.uid == Globals.userInfo?.uid){\n      //     Globals.storeInfo!.homeLink = url\n      //   }\n      // }\n      // else if (type == \"action\"){\n      //   Globals.userInfo!.actionLink = url\n      //   if (Globals.storeInfo.uid == Globals.userInfo?.uid){\n      //     Globals.storeInfo!.actionLink = url\n      //   }\n      // }\n\n      return url;\n      return undefined;\n    })();\n  }\n\n  uploadStoreImages(image, type, uid) {\n    var _this29 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      if (type) {\n        const filePath = 'Users/' + uid + '/Store_Images/' + type + '.png';\n\n        let ref = _this29.storage.ref(filePath);\n\n        const byteArray = new Buffer(image.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''), 'base64'); // const task = await this.storage.upload(filePath, byteArray);\n\n        const task = yield ref.put(byteArray);\n        const url = yield task.ref.getDownloadURL();\n\n        if (type == \"theme\") {\n          Globals.userInfo.themeLink = url;\n\n          if (Globals.storeInfo.uid == ((_a = Globals.userInfo) === null || _a === void 0 ? void 0 : _a.uid)) {\n            Globals.storeInfo.themeLink = url;\n          }\n        } else if (type == \"home\") {\n          Globals.userInfo.homeLink = url;\n\n          if (Globals.storeInfo.uid == ((_b = Globals.userInfo) === null || _b === void 0 ? void 0 : _b.uid)) {\n            Globals.storeInfo.homeLink = url;\n          }\n        } else if (type == \"action\") {\n          Globals.userInfo.actionLink = url;\n\n          if (Globals.storeInfo.uid == ((_c = Globals.userInfo) === null || _c === void 0 ? void 0 : _c.uid)) {\n            Globals.storeInfo.actionLink = url;\n          }\n        }\n\n        return url;\n      }\n\n      return undefined;\n    })();\n  }\n\n  saveProductInfo(mappedData, productID, uid) {\n    var _this30 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      let data = {\n        \"Name\": (_a = mappedData.name) !== null && _a !== void 0 ? _a : \"Post\",\n        \"Search_Name\": (_b = mappedData.name.toLowerCase()) !== null && _b !== void 0 ? _b : \"post\",\n        \"Description\": (_c = mappedData.description) !== null && _c !== void 0 ? _c : \"\",\n        \"Price_Cents\": (_d = mappedData.price) !== null && _d !== void 0 ? _d : 2000,\n        \"UID\": uid,\n        \"Blurred\": false,\n        \"Timestamp\": new Date(),\n        \"Template_Color\": (_e = mappedData.templateColor) !== null && _e !== void 0 ? _e : \"black\",\n        \"Likes\": 0,\n        \"Comments\": 0,\n        \"Has_Picture\": false,\n        \"Product_ID\": productID,\n        \"Available\": true,\n        \"Public\": true,\n        \"Type\": (_f = mappedData.productType) !== null && _f !== void 0 ? _f : \"ATC1000\",\n        \"Side\": (_g = mappedData.displaySide) !== null && _g !== void 0 ? _g : \"front\",\n        \"Sides\": mappedData.sides\n      };\n\n      if (uid) {\n        yield _this30.db.collection(\"Users/\" + uid + \"/Products\").doc(productID).set(data);\n        return data; // Globals.userInfo!.slogan = mappedData.slogan\n        // let matchingTheme = Globals.themes?.filter(theme => theme.name == mappedData.theme.name)[0]\n        // if (matchingTheme){\n        //   Globals.userInfo!.colorStyle = matchingTheme\n        // }\n        // Globals.userInfo!.slogan = mappedData.slogan\n        // Globals.userInfo!.fontName = mappedData.font\n        // if (Globals.storeInfo.uid == Globals.userInfo?.uid){\n        //   if (matchingTheme){\n        //     Globals.storeInfo!.colorStyle = matchingTheme\n        //     Globals.storeInfo!.fontName = mappedData.font\n        //   }\n        // }\n      }\n\n      return undefined;\n    })();\n  }\n\n  saveStoreInfo(mappedData, uid) {\n    var _this31 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b, _c;\n\n      var data = {\n        \"Slogan\": (_a = mappedData.slogan) !== null && _a !== void 0 ? _a : \"\"\n      };\n\n      if (mappedData.indicator) {\n        data[\"indicator\"] = mappedData.indicator;\n      }\n\n      if (mappedData.theme) {\n        data[\"store_style\"] = mappedData.theme;\n      }\n\n      if (mappedData.font) {\n        data[\"font\"] = mappedData.font;\n      }\n\n      if (mappedData.image_list) {\n        data[\"image_list\"] = firebase.firestore.FieldValue.arrayUnion(...mappedData.image_list);\n      }\n\n      if (uid) {\n        yield _this31.db.collection(\"Users\").doc(uid).update(data);\n        Globals.userInfo.slogan = mappedData.slogan;\n        let matchingTheme = (_b = Globals.themes) === null || _b === void 0 ? void 0 : _b.filter(theme => theme.name == mappedData.theme.name)[0];\n\n        if (matchingTheme) {\n          Globals.userInfo.colorStyle = matchingTheme;\n        }\n\n        Globals.userInfo.slogan = mappedData.slogan;\n        Globals.userInfo.fontName = mappedData.font;\n\n        if (Globals.storeInfo.uid == ((_c = Globals.userInfo) === null || _c === void 0 ? void 0 : _c.uid)) {\n          if (matchingTheme) {\n            Globals.storeInfo.colorStyle = matchingTheme;\n            Globals.storeInfo.fontName = mappedData.font;\n          }\n        }\n      }\n\n      if (_this31.myCallback) _this31.myCallback();\n    })();\n  }\n\n  uploadFile(mappedData, uid) {\n    var _this32 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let picID = uuid().toString().replace(\"-\", \"\");\n      const filePath = 'Users/' + uid + '/profile_pic-' + picID + '.jpeg';\n\n      let ref = _this32.storage.ref(filePath);\n\n      const byteArray = new Buffer(mappedData.profile_pic.replace(/^[\\w\\d;:\\/]+base64\\,/g, ''), 'base64'); // const task = await this.storage.upload(filePath, byteArray);\n\n      const task = yield ref.put(byteArray);\n      const url = yield task.ref.getDownloadURL();\n      Globals.userInfo.dpID = picID;\n      Globals.userInfo.profileLink = url;\n\n      if (Globals.storeInfo.uid == ((_a = Globals.userInfo) === null || _a === void 0 ? void 0 : _a.uid)) {\n        Globals.storeInfo.dpID = picID;\n        Globals.storeInfo.profileLink = url;\n      }\n\n      return picID;\n    })();\n  }\n\n  saveUsername(mappedData, uid) {\n    var _this33 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a, _b;\n\n      var data = {\n        \"Username\": mappedData.username,\n        \"Full_Name\": mappedData.full_name,\n        \"Bio\": mappedData.bio\n      };\n\n      if (mappedData.picID) {\n        data[\"ProfilePicID\"] = mappedData.picID;\n      }\n\n      if (mappedData.socials) {\n        data[\"Socials\"] = (_a = mappedData.socials) !== null && _a !== void 0 ? _a : [];\n      }\n\n      if (uid) {\n        yield _this33.db.collection(\"Users\").doc(uid).update(data);\n        Globals.userInfo.username = mappedData.username;\n        Globals.userInfo.fullName = mappedData.full_name;\n\n        if (Globals.storeInfo.uid == ((_b = Globals.userInfo) === null || _b === void 0 ? void 0 : _b.uid)) {\n          Globals.storeInfo.username = mappedData.username;\n          Globals.storeInfo.fullName = mappedData.full_name;\n        }\n      }\n\n      if (_this33.myCallback) _this33.myCallback();\n    })();\n  }\n\n  openSnackBar(message, timeDuration = 1000, horizontal = 'right', vertical = 'top') {\n    this.snackBar.open(message, '', {\n      duration: timeDuration,\n      horizontalPosition: horizontal,\n      verticalPosition: vertical\n    });\n  }\n\n  changeCart(mappedData) {\n    var _this34 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      let uid = (_a = yield _this34.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      let data = {\n        \"Cart_List\": mappedData\n      };\n      const storeUID = Globals.storeInfo.uid;\n\n      if (!storeUID) {\n        return;\n      }\n\n      if (uid) {\n        yield _this34.db.collection(\"Users/\" + uid + \"/Cart_Info\").doc(\"Cart_List_\" + storeUID).set(data);\n      }\n    })();\n  }\n\n  signOut() {\n    var _this35 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this35.auth.signOut().then(() => {\n        Globals.userInfo = undefined;\n        _this35.rootComponent.cart = [];\n        if (_this35.myCallback) _this35.myCallback();\n      }).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (_this35.errCallback) _this35.errCallback(errorMessage);\n      }); // Sign Out\n    })();\n  }\n\n  isLoggedIn() {\n    return this.auth.authState.pipe(first()).toPromise();\n  }\n\n  registerAccount(type, credentials, affiliate) {\n    var _this36 = this;\n\n    if (type == \"Guest\") {\n      this.auth.signInAnonymously().then(() => {\n        // Signed in..\n        if (this.myCallback) this.myCallback();\n      }).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (this.errCallback) this.errCallback(errorMessage);\n      });\n    } else if (type == \"Email_UP\") {\n      let username = credentials === null || credentials === void 0 ? void 0 : credentials.username;\n      let password = credentials === null || credentials === void 0 ? void 0 : credentials.password;\n      let email = credentials === null || credentials === void 0 ? void 0 : credentials.email;\n      this.auth.createUserWithEmailAndPassword(email, password).then( /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator(function* (result) {\n          var _a, _b, _c, _d; // Signed in..\n\n\n          yield (_a = result.user) === null || _a === void 0 ? void 0 : _a.sendEmailVerification();\n\n          if (result.user && username) {\n            Globals.isNewUser = (_c = (_b = result.additionalUserInfo) === null || _b === void 0 ? void 0 : _b.isNewUser) !== null && _c !== void 0 ? _c : false;\n            yield _this36.setUsername((_d = result.user) === null || _d === void 0 ? void 0 : _d.uid, username, true, affiliate);\n            if (_this36.myCallback) _this36.myCallback();\n          } else {\n            yield _this36.auth.signOut();\n            if (_this36.errCallback) _this36.errCallback(\"Unknown Error Occured. Please Try Again Later\");\n          }\n        });\n\n        return function (_x14) {\n          return _ref16.apply(this, arguments);\n        };\n      }()).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (this.errCallback) this.errCallback(errorMessage);\n        console.log(errorCode);\n      });\n    } else if (type == \"Email_IN\") {\n      let password = credentials === null || credentials === void 0 ? void 0 : credentials.password;\n      let email = credentials === null || credentials === void 0 ? void 0 : credentials.email;\n      this.auth.signInWithEmailAndPassword(email, password).then( /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator(function* (result) {\n          var _a, _b; // Signed in..\n\n\n          if (result.user) {\n            Globals.isNewUser = (_b = (_a = result.additionalUserInfo) === null || _a === void 0 ? void 0 : _a.isNewUser) !== null && _b !== void 0 ? _b : false;\n            if (_this36.myCallback) _this36.myCallback();\n          } else {\n            yield _this36.auth.signOut();\n            if (_this36.errCallback) _this36.errCallback(\"Unknown Error Occured. Please Try Again Later\");\n          }\n        });\n\n        return function (_x15) {\n          return _ref17.apply(this, arguments);\n        };\n      }()).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode == \"auth/wrong-password\") errorMessage = \"The password is incorrect.\";\n        if (this.errCallback) this.errCallback(errorMessage);\n        console.log(errorCode);\n      });\n    } else if (type == \"Email_IN_USER\") {\n      let data = {\n        \"Field\": credentials === null || credentials === void 0 ? void 0 : credentials.Field,\n        \"Term\": credentials === null || credentials === void 0 ? void 0 : credentials.Term\n      };\n      this.functions.httpsCallable('auth')(data).pipe(first()).subscribe( /*#__PURE__*/function () {\n        var _ref18 = _asyncToGenerator(function* (resp) {\n          if (resp) {\n            if (resp.includes(\"ERROR:\")) {\n              let err = resp.replace(\"ERROR:\", \"\");\n              if (_this36.errCallback) _this36.errCallback(err);\n              console.log(err);\n            } else {\n              let email = resp;\n              let password = credentials === null || credentials === void 0 ? void 0 : credentials.password;\n\n              _this36.auth.signInWithEmailAndPassword(email, password).then( /*#__PURE__*/function () {\n                var _ref19 = _asyncToGenerator(function* (result) {\n                  var _a, _b; // Signed in..\n\n\n                  if (result.user) {\n                    Globals.isNewUser = (_b = (_a = result.additionalUserInfo) === null || _a === void 0 ? void 0 : _a.isNewUser) !== null && _b !== void 0 ? _b : false;\n                    if (_this36.myCallback) _this36.myCallback();\n                  } else {\n                    yield _this36.auth.signOut();\n                    if (_this36.errCallback) _this36.errCallback(\"Unknown Error Occured. Please Try Again Later\");\n                  }\n                });\n\n                return function (_x17) {\n                  return _ref19.apply(this, arguments);\n                };\n              }()).catch(error => {\n                var errorCode = error.code;\n                var errorMessage = error.message;\n                if (errorCode == \"auth/wrong-password\") errorMessage = \"The password is incorrect.\";\n                if (_this36.errCallback) _this36.errCallback(errorMessage);\n                console.log(errorCode);\n              });\n            }\n          } else {\n            if (_this36.errCallback) _this36.errCallback(\"Unknown Error Occured. Please Try Again Later\");\n          }\n        });\n\n        return function (_x16) {\n          return _ref18.apply(this, arguments);\n        };\n      }(), err => {\n        var errorCode = err.code;\n        var errorMessage = err.message;\n        if (this.errCallback) this.errCallback(errorMessage);\n        console.log(errorCode);\n      });\n    } else if (type == \"Apple\") {\n      var appleProvider = new firebase.auth.OAuthProvider('apple.com');\n      appleProvider.addScope('email');\n      appleProvider.addScope('name');\n      this.auth.signInWithPopup(appleProvider).then( /*#__PURE__*/function () {\n        var _ref20 = _asyncToGenerator(function* (result) {\n          // Signed in..\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n\n          if (((_b = (_a = result.additionalUserInfo) === null || _a === void 0 ? void 0 : _a.isNewUser) !== null && _b !== void 0 ? _b : false) && ((_c = result.user) === null || _c === void 0 ? void 0 : _c.uid)) {\n            Globals.isNewUser = (_e = (_d = result.additionalUserInfo) === null || _d === void 0 ? void 0 : _d.isNewUser) !== null && _e !== void 0 ? _e : false;\n            yield (_f = result.user) === null || _f === void 0 ? void 0 : _f.sendEmailVerification();\n            yield _this36.setUsername((_g = result.user) === null || _g === void 0 ? void 0 : _g.uid, (_j = (_h = result === null || result === void 0 ? void 0 : result.additionalUserInfo) === null || _h === void 0 ? void 0 : _h.username) !== null && _j !== void 0 ? _j : 'user_' + uuid.toString(), !_this36.isUndefined((_k = result === null || result === void 0 ? void 0 : result.additionalUserInfo) === null || _k === void 0 ? void 0 : _k.username), affiliate);\n          }\n\n          if (_this36.myCallback) _this36.myCallback();\n        });\n\n        return function (_x18) {\n          return _ref20.apply(this, arguments);\n        };\n      }()).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (this.errCallback) this.errCallback(errorMessage);\n      });\n    } else if (type == \"Google\") {\n      var googleProvider = new firebase.auth.GoogleAuthProvider();\n      googleProvider.addScope('email');\n      googleProvider.addScope('profile');\n      this.auth.signInWithPopup(googleProvider).then( /*#__PURE__*/function () {\n        var _ref21 = _asyncToGenerator(function* (result) {\n          var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k; // Signed in..\n\n\n          if (((_b = (_a = result.additionalUserInfo) === null || _a === void 0 ? void 0 : _a.isNewUser) !== null && _b !== void 0 ? _b : false) && ((_c = result.user) === null || _c === void 0 ? void 0 : _c.uid)) {\n            yield (_d = result.user) === null || _d === void 0 ? void 0 : _d.sendEmailVerification();\n            Globals.isNewUser = (_f = (_e = result.additionalUserInfo) === null || _e === void 0 ? void 0 : _e.isNewUser) !== null && _f !== void 0 ? _f : false;\n            yield _this36.setUsername((_g = result.user) === null || _g === void 0 ? void 0 : _g.uid, (_j = (_h = result === null || result === void 0 ? void 0 : result.additionalUserInfo) === null || _h === void 0 ? void 0 : _h.username) !== null && _j !== void 0 ? _j : 'user_' + uuid().replace('-', ''), !_this36.isUndefined((_k = result === null || result === void 0 ? void 0 : result.additionalUserInfo) === null || _k === void 0 ? void 0 : _k.username), affiliate);\n          }\n\n          if (_this36.myCallback) _this36.myCallback();\n        });\n\n        return function (_x19) {\n          return _ref21.apply(this, arguments);\n        };\n      }()).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(error);\n        if (this.errCallback) this.errCallback(errorMessage);\n      });\n    }\n  }\n\n  roundedFavIconLink() {\n    return Globals.storeInfo.profileLink;\n  }\n\n  setUsername(uid, username, hasUsername, affiliate) {\n    var _this37 = this;\n\n    return _asyncToGenerator(function* () {\n      var data = {\n        'Full_Name': \"GUEST\",\n        'Username': username,\n        'Bio': '',\n        'ProfilePicID': null,\n        'notification_tokens': [],\n        'Following_List': [],\n        'Following_Count': 0,\n        'Followers_Count': 0,\n        'Posts_Count': 0,\n        'Platform': \"WEB\"\n      };\n\n      if (hasUsername !== null && hasUsername !== void 0 ? hasUsername : false) {\n        data.Full_Name = username.toUpperCase();\n      }\n\n      yield _this37.db.collection(\"Users\").doc(uid).set(data, {\n        merge: true\n      });\n\n      if (affiliate && affiliate != \"\") {\n        yield _this37.db.collection(\"Users/\" + uid + \"/Payment_Info\").doc(\"Identifiers\").set({\n          affiliate: {\n            id: affiliate,\n            timestamp: new Date()\n          }\n        }, {\n          merge: true\n        });\n      }\n\n      return true;\n    })();\n  }\n\n  checkUsername(username) {\n    var _this38 = this;\n\n    return _asyncToGenerator(function* () {\n      let sub = _this38.db.collection(\"Users\", ref => ref.where(\"Username\", '==', username)).valueChanges().subscribe(doc => {\n        if (doc && (doc === null || doc === void 0 ? void 0 : doc.length) != 0) {\n          if (_this38.errCallback) _this38.errCallback(\"This username already exists\");\n        } else {\n          if (_this38.myCallback) _this38.myCallback();\n        }\n\n        sub.unsubscribe();\n      });\n    })();\n  }\n\n  authenticated() {\n    var _this39 = this;\n\n    return _asyncToGenerator(function* () {\n      const user = yield _this39.isLoggedIn();\n\n      if (user) {\n        return true;\n      } else {\n        return false;\n      }\n    })();\n  }\n\n  getCart(shouldGetProducts = false, callback) {\n    var _this40 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const uid = (_a = yield _this40.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      const storeUID = Globals.storeInfo.uid;\n      console.log(\"moooooo\");\n\n      if (!storeUID || !uid) {\n        if (_this40.myCallback) _this40.myCallback();\n        return;\n      }\n\n      var cart = new Array();\n\n      let sub = _this40.db.collection(\"Users/\" + uid + \"/Cart_Info\").doc(\"Cart_List_\" + storeUID).valueChanges().subscribe( /*#__PURE__*/function () {\n        var _ref22 = _asyncToGenerator(function* (doc) {\n          const docData = doc;\n\n          if (docData) {\n            let cartList = docData.Cart_List;\n            const promises = cartList.map( /*#__PURE__*/function () {\n              var _ref23 = _asyncToGenerator(function* (productInCart, i) {\n                let uid = productInCart.UID;\n                let size = productInCart.Size;\n                let qty = productInCart.Qty;\n                let timestamp = productInCart.Timestamp.toDate();\n                let productID = productInCart.Post_ID;\n                let product = new Product(uid, productID, undefined, productID, timestamp, undefined, undefined, undefined, undefined, undefined, undefined, false, undefined, true, undefined, undefined, undefined, [], _this40.getURL(uid, productID));\n                let productCart = new ProductInCart(product, size, qty, false, timestamp, \"\", undefined);\n                cart.push(productCart);\n                if (shouldGetProducts) console.log('okmo');\n                yield _this40.getPost(productID, true, i);\n              });\n\n              return function (_x21, _x22) {\n                return _ref23.apply(this, arguments);\n              };\n            }());\n            yield Promise.all(promises);\n          }\n\n          callback(cart);\n          if (isPlatformBrowser(_this40.platformID)) sub.unsubscribe();\n        });\n\n        return function (_x20) {\n          return _ref22.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  getOrder(orderID) {\n    var _this41 = this;\n\n    return _asyncToGenerator(function* () {\n      let sub = _this41.db.collectionGroup(\"Orders\", ref => ref.where(\"order_id\", '==', orderID)).valueChanges().subscribe(docDatas => {\n        docDatas.forEach(doc => {\n          var _a, _b, _c;\n\n          const docData = doc;\n\n          if (docData) {\n            let status = (_a = docData.status) !== null && _a !== void 0 ? _a : \"cancelled\";\n            let intents = docData.order_intents;\n            let timestamp = docData.timestamp.toDate();\n            let shippingIntent = docData.shipping_intent;\n            let trackingNumber = docData.tracking_id;\n            let shippingCost = ((_b = docData.shipping_cost) !== null && _b !== void 0 ? _b : 0) / 100;\n            let taxPercent = docData.tax;\n            let taxNum = docData.sales_tax;\n            let currency = (_c = docData.currency) !== null && _c !== void 0 ? _c : \"CAD\";\n            let currencySymbol = docData.currency_symbol;\n            let orderID = docData.order_id;\n            let merchantID = docData.merchant_uid;\n            var subtotal = 0.0;\n            let address = docData.delivery_address;\n            let street = address.street_address;\n            let city = address.city;\n            let country = address.country;\n            let postalCode = address.postal_code;\n            let area = address.admin_area;\n            let phone = address.phone_number;\n            let name = address.full_name;\n            let company = address.company;\n            let email = address.email;\n            let country_code = address.country_code;\n            const uid = docData.uid; // let shippingCost = (doc[\"shipping_cost\"] as? Double ?? 0.00) / 100              \n\n            let unitNum = address.unit_number;\n            let orderAddress = new ShippingInfo(name, company, street, city, country, area, unitNum, postalCode, phone, country_code, email);\n            let tax = taxNum !== null && taxNum !== void 0 ? taxNum : (taxPercent !== null && taxPercent !== void 0 ? taxPercent : 0) * subtotal;\n            let totalCost = (tax !== null && tax !== void 0 ? tax : 0.0) + (subtotal !== null && subtotal !== void 0 ? subtotal : 0.0) + (shippingCost !== null && shippingCost !== void 0 ? shippingCost : 0.0);\n            let order = new Order(orderID, timestamp, [], status, intents, totalCost, tax, subtotal, orderAddress, currency, currencySymbol, trackingNumber, shippingIntent, shippingCost, uid, merchantID);\n            Globals.selectedOrder = order;\n\n            _this41.getOrderProducts(order, uid, 0, true);\n          } else {\n            Globals.selectedOrder = new Order();\n          }\n        });\n        if (_this41.myCallback) _this41.myCallback();\n        if (isPlatformBrowser(_this41.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  getOrders() {\n    var _this42 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const uid = (_a = yield _this42.isLoggedIn()) === null || _a === void 0 ? void 0 : _a.uid;\n      const storeUID = Globals.storeInfo.uid;\n\n      if (!storeUID || !uid) {\n        if (_this42.myCallback) _this42.myCallback();\n        return;\n      }\n\n      var query = _this42.db.collection(\"Users/\" + uid + \"/Orders\", ref => ref.where(\"merchant_uid\", '==', storeUID).orderBy(\"timestamp\", \"desc\"));\n\n      Globals.orders = [];\n      let sub = query.valueChanges().subscribe(docDatas => {\n        docDatas.forEach((doc, index) => {\n          var _a, _b, _c;\n\n          const docData = doc;\n\n          if (docData) {\n            let status = (_a = docData.status) !== null && _a !== void 0 ? _a : \"cancelled\";\n            let intents = docData.order_intents;\n            let timestamp = docData.timestamp.toDate();\n            let shippingIntent = docData.shipping_intent;\n            let trackingNumber = docData.tracking_id;\n            let shippingCost = docData.shipping_cost;\n            let taxPercent = docData.tax;\n            let taxNum = docData.sales_tax;\n            let currency = (_b = docData.currency) !== null && _b !== void 0 ? _b : \"CAD\";\n            let currencySymbol = docData.currency_symbol;\n            let orderID = docData.order_id;\n            let merchantID = docData.merchant_uid;\n            var subtotal = 0.0;\n            let address = docData.delivery_address;\n            let street = address.street_address;\n            let city = address.city;\n            let country = address.country;\n            let postalCode = address.postal_code;\n            let area = address.admin_area;\n            let phone = address.phone_number;\n            let name = address.full_name;\n            let company = address.company;\n            let email = address.email;\n            let country_code = address.country_code;\n            const uid = docData.uid; // let shippingCost = (doc[\"shipping_cost\"] as? Double ?? 0.00) / 100              \n\n            let unitNum = address.unit_number;\n            let orderAddress = new ShippingInfo(name, company, street, city, country, area, unitNum, postalCode, phone, country_code, email);\n            let tax = taxNum !== null && taxNum !== void 0 ? taxNum : (taxPercent !== null && taxPercent !== void 0 ? taxPercent : 0) * subtotal;\n            let totalCost = (tax !== null && tax !== void 0 ? tax : 0.0) + (subtotal !== null && subtotal !== void 0 ? subtotal : 0.0) + (shippingCost !== null && shippingCost !== void 0 ? shippingCost : 0.0);\n            let order = new Order(orderID, timestamp, [], status, intents, totalCost, tax, subtotal, orderAddress, currency, currencySymbol, trackingNumber, shippingIntent, shippingCost, uid, merchantID);\n            (_c = Globals.orders) === null || _c === void 0 ? void 0 : _c.push(order);\n\n            _this42.getOrderProducts(order, uid, index);\n          }\n        });\n        if (_this42.myCallback) _this42.myCallback();\n        if (isPlatformBrowser(_this42.platformID)) sub.unsubscribe();\n      });\n    })();\n  }\n\n  getOrderProducts(order, uid, orderIndex, isSelectedOrder) {\n    let sub = this.db.collection(\"Users/\" + uid + \"/Orders/\" + order.orderID + \"/Purchases\").valueChanges().subscribe(docDatas => {\n      docDatas.forEach((doc, index) => {\n        const docData = doc;\n\n        if (docData) {\n          let productID = docData.productID;\n          let quantity = docData.quantity;\n          let size = docData.size;\n          let status = docData.status;\n          let price = docData.amount / quantity;\n          let timestamp = docData.timestamp.toDate();\n          let product = new Product(uid, productID, undefined, productID, timestamp, undefined, undefined, price, undefined, undefined, undefined, false, undefined, true, undefined, undefined, undefined, [], this.getURL(uid, productID));\n          let orderProduct = new ProductInCart(product, size, quantity, false, timestamp, undefined, undefined);\n          order.products.push(orderProduct);\n\n          if (isSelectedOrder !== null && isSelectedOrder !== void 0 ? isSelectedOrder : false) {\n            console.log('okpo');\n            this.getPost(productID, undefined, undefined, undefined, orderIndex, index, true);\n          } else {\n            console.log('okp2o');\n            this.getPost(productID, undefined, undefined, true, orderIndex, index, false);\n          }\n        }\n      });\n      if (this.myCallback) this.myCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  getMiscStats(uid) {\n    Globals.views = [];\n    Globals.dropCarts = [];\n    let sub = this.db.collection(\"Users/\" + uid + \"/Daily_Info/\").valueChanges().subscribe(docDatas => {\n      docDatas.forEach((doc, index) => {\n        var _a;\n\n        const docData = doc;\n\n        if (docData) {\n          let time = docData.time;\n          let timestamp = docData.timestamp.toDate();\n          let length = time.length;\n          (_a = Globals.views) === null || _a === void 0 ? void 0 : _a.push({\n            views: length,\n            timestamp: timestamp\n          });\n        }\n      });\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n      let sub2 = this.db.collectionGroup(\"Cart_Info\", ref => ref.where(\"UID\", \"==\", uid)).valueChanges().subscribe(docDatas => {\n        docDatas.forEach((doc, index) => {\n          var _a, _b;\n\n          const docData = doc;\n\n          if (docData) {\n            let timestamp = (_a = docData.Timestamp) === null || _a === void 0 ? void 0 : _a.toDate();\n            (_b = Globals.dropCarts) === null || _b === void 0 ? void 0 : _b.push({\n              dropCarts: 1,\n              timestamp: timestamp\n            });\n          }\n        });\n        if (isPlatformBrowser(this.platformID)) sub2.unsubscribe();\n        if (this.miscCallback) this.miscCallback();\n      });\n    });\n  }\n\n  getAffiliateStats(uid, callback) {\n    let stats = new Array();\n    let sub = this.db.collectionGroup(\"Payment_Info\", ref => ref.where(\"affiliate.id\", '==', uid)).valueChanges().subscribe(docDatas => {\n      docDatas.forEach((doc, index) => {\n        const docData = doc;\n\n        if (docData) {\n          let affiliate = docData.affiliate;\n          let timestamp = affiliate.timestamp.toDate();\n          let id = affiliate.id;\n          stats.push({\n            affiliate: id,\n            timestamp: timestamp\n          });\n        }\n      });\n      callback(stats);\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  getSoldProducts(uid = \"\") {\n    Globals.productsSold = [];\n    let sub = this.db.collectionGroup(\"Purchases\", ref => ref.where(\"merchant_uid\", '==', uid).where(\"status\", '==', 'confirmed')).valueChanges().subscribe(docDatas => {\n      docDatas.forEach((doc, index) => {\n        var _a, _b;\n\n        const docData = doc;\n\n        if (docData) {\n          let productID = docData.productID;\n          let quantity = docData.quantity;\n          let size = docData.size;\n          let price = docData.amount / quantity;\n          let profit = docData.moneyToMerchant / 100;\n          let timestamp = (_a = docData.timestamp) === null || _a === void 0 ? void 0 : _a.toDate();\n          let product = new Product(uid, productID, undefined, productID, timestamp, undefined, undefined, price / 100, undefined, undefined, undefined, false, undefined, true, undefined, undefined, undefined, [], this.getURL(uid, productID));\n          let orderProduct = new ProductInCart(product, size, quantity, false, timestamp, undefined, undefined, profit !== null && profit !== void 0 ? profit : 0);\n          (_b = Globals.productsSold) === null || _b === void 0 ? void 0 : _b.push(orderProduct);\n          console.log('okro');\n          this.getPost(productID, false, undefined, false, undefined, index, false, true);\n        }\n      });\n      if (this.saleCallback) this.saleCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  getPost(productID, forCart, cartIndex, forOrder, orderIndex, productIndex, isSelectedOrder, forSale) {\n    var _this43 = this;\n\n    return _asyncToGenerator(function* () {\n      var query = _this43.db.collectionGroup(\"Products\", ref => ref.where(\"Product_ID\", '==', productID));\n\n      if (!(forSale && productIndex && Globals.productsSold)) {\n        query = _this43.db.collectionGroup(\"Products\", ref => ref.where(\"Product_ID\", '==', productID).where(\"Public\", '==', true));\n      }\n\n      let sub = query.valueChanges().subscribe(docDatas => {\n        if (docDatas.length == 0) {\n          if (_this43.myCallback) _this43.myCallback();\n          if (isPlatformBrowser(_this43.platformID)) sub.unsubscribe();\n        }\n\n        docDatas.forEach(doc => {\n          var _a, _b, _c, _d, _e, _f, _g, _h;\n\n          const docData = doc;\n\n          if (docData) {\n            let uid = docData.UID;\n            let productID = docData.Product_ID;\n            let timestamp = docData.Timestamp.toDate();\n            let description = docData.Description;\n            let name = docData.Name;\n            let blurred = docData.Blurred;\n            let templateColor = docData.Template_Color;\n            let likes = docData.Likes;\n            let comments = docData.Comments;\n            let isPublic = (_a = docData.Public) !== null && _a !== void 0 ? _a : true;\n            let productType = (_b = docData.Type) !== null && _b !== void 0 ? _b : \"ATC1000\";\n            let displaySide = (_c = docData.Side) !== null && _c !== void 0 ? _c : \"front\";\n            let sides = (_d = docData[\"Sides\"]) !== null && _d !== void 0 ? _d : [\"Front\"];\n            let priceCents = docData.Price_Cents;\n            let product = new Product(uid, productID, description, productID, timestamp, \"\", blurred, priceCents, name, templateColor, likes, false, comments, true, isPublic, productType, displaySide, sides, _this43.getURL(uid, productID));\n\n            if (forSale && productIndex != undefined && Globals.productsSold != undefined) {\n              Globals.productsSold[productIndex] = product;\n            } else {\n              if (forCart !== null && forCart !== void 0 ? forCart : false) {\n                _this43.rootComponent.cart[cartIndex].product = product;\n                if (_this43.myCallback) _this43.myCallback();\n                if (isPlatformBrowser(_this43.platformID)) sub.unsubscribe();\n              } else {\n                if (forOrder !== null && forOrder !== void 0 ? forOrder : false) {\n                  product.price = (_f = (_e = Globals.orders[orderIndex].products[productIndex].product) === null || _e === void 0 ? void 0 : _e.price) !== null && _f !== void 0 ? _f : 0;\n                  Globals.orders[orderIndex].products[productIndex].product = product;\n                } else if (isSelectedOrder !== null && isSelectedOrder !== void 0 ? isSelectedOrder : false) {\n                  product.price = (_h = (_g = Globals.selectedOrder.products[productIndex].product) === null || _g === void 0 ? void 0 : _g.price) !== null && _h !== void 0 ? _h : 0;\n                  Globals.selectedOrder.products[productIndex].product = product;\n                } else {\n                  Globals.selectedProduct = product;\n                }\n\n                if (_this43.myCallback) _this43.myCallback();\n                if (isPlatformBrowser(_this43.platformID)) sub.unsubscribe();\n              }\n            }\n          }\n        });\n      });\n    })();\n  }\n\n  getTemplatesFiltered(products) {\n    Globals.templates = [...new Map(Globals.templates.map(item => [item.productCode, item])).values()];\n    return Globals.templates.filter((template, i) => products.some(product => product.productType === template.productCode));\n  }\n\n  getURL(uid, productID) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FProducts%2F' + productID + '%2Flink_' + productID + '.png?alt=media';\n  }\n\n  getProfileURL(uid, dpID) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2Fprofile_pic-' + dpID + '.jpeg?alt=media';\n  }\n\n  getThemeURL(uid) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FStore_Images%2F' + \"theme\" + '.png?alt=media';\n  }\n\n  getDefaultURL() {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Resources%2FSample-Walls%2FHome%2F1.jpg?alt=media';\n  }\n\n  getHomeURL(uid) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FStore_Images%2F' + \"home\" + '.png?alt=media';\n  }\n\n  getActionURL(uid) {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Users%2F' + uid + '%2FStore_Images%2F' + \"action\" + '.png?alt=media';\n  }\n\n  getAltURL() {\n    return 'https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Resources%2Flink_empty.jpeg?alt=media';\n  }\n\n  getTemplate(templateID) {\n    Globals.selectedTemplate = undefined;\n    let sub = this.db.collection(\"Templates\", ref => ref.where(\"Code\", '==', templateID).orderBy(\"index\", \"asc\")).valueChanges({\n      idField: \"TemplateID\"\n    }).subscribe(docDatas => {\n      docDatas.forEach(doc => {\n        var docData = doc;\n\n        if (docData) {\n          let type = doc.TemplateID;\n          let testingAccounts = docData[\"testingAccounts\"];\n          let isAvailable = docData[\"isAvailable\"]; // guard isAvailable ?? false || testingAccounts?.contains(pUserInfo.uid ?? \"\") ?? false else{\n          //     continue\n          //   }\n\n          let display = docData[\"Display_Name\"];\n          let info = docData[\"Info\"];\n          let supportedSides = docData[\"Supported_Sides\"];\n\n          if (!supportedSides || supportedSides.length == 0) {\n            return;\n          }\n\n          let vari = docData[\"Colors\"];\n          let minPrice = docData[\"Min_Price_USD\"];\n          let extra = docData[\"Extra_Cost_USD\"];\n          let code = docData[\"Code\"];\n          let sizes = docData[\"Sizes\"];\n          let category = docData[\"category\"];\n          let onlyBulk = docData[\"Only_Bulk\"];\n          let bulkPrice = docData[\"Bulk_Price_USD\"];\n          let bulkSuggestPrice = docData[\"Bulk_Suggest_Price_USD\"];\n          let bulkUnit = docData[\"Bulk_Unit\"];\n          let has3D = docData[\"has3D\"];\n          let moreInfo = docData[\"More_info\"]; // let discountInfo = docData[\"Discount\"] as Dict<any>\n          // let discountedUsers = discountInfo[\"Artists\"] as Array<string>\n          // let discountedPrice = discountInfo.Minimum_Price_USD as number\n          // let discountCodes = discountInfo.Discount_Codes as Array<Dict<any>>   \n\n          const template = new Template(type, display, info, [], sizes, minPrice, code, category, moreInfo, false, [], extra, bulkPrice, bulkUnit, bulkSuggestPrice, onlyBulk, has3D);\n          supportedSides.forEach(side => {\n            var _a;\n\n            let name = side[\"Name\"];\n            let height = side[\"HeightCM\"];\n            let width = side[\"WidthCM\"];\n            let widthMultiplier = side[\"WidthMultiplier\"];\n            let centerYConst = side[\"CenterYConst\"];\n            let centerXConst = side[\"CenterXConst\"];\n            let rotation = side[\"Rotation\"];\n            let useReverseAspect = (_a = side[\"useReverseAspect\"]) !== null && _a !== void 0 ? _a : false;\n            let supportedSide = new TemplateSide(name, height, width, widthMultiplier, centerYConst, centerXConst, useReverseAspect, rotation);\n            template.supportedSides.push(supportedSide);\n          });\n          vari.forEach(v => {\n            var _a, _b;\n\n            let code = v[\"Code\"];\n            let display = v[\"Display\"];\n            let img = (_a = v[\"IMG\"]) === null || _a === void 0 ? void 0 : _a.toBase64();\n            let backImg = (_b = v[\"IMG_BACK\"]) === null || _b === void 0 ? void 0 : _b.toBase64();\n            let rgb = v[\"RGB\"];\n            let color = new Color(code, display, rgb, img, backImg);\n            template.colors.push(color);\n          });\n          Globals.selectedTemplate = template;\n        }\n      });\n      if (this.myCallback) this.myCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n  getTemplates() {\n    Globals.templates = [];\n    let sub = this.db.collection(\"Templates\", ref => ref.orderBy(\"index\", \"asc\")).valueChanges({\n      idField: \"TemplateID\"\n    }).subscribe(docDatas => {\n      docDatas.forEach(doc => {\n        var docData = doc;\n\n        if (docData) {\n          let type = doc.TemplateID;\n          let testingAccounts = docData[\"testingAccounts\"];\n          let isAvailable = docData[\"isAvailable\"]; // guard isAvailable ?? false || testingAccounts?.contains(pUserInfo.uid ?? \"\") ?? false else{\n          //     continue\n          //   }\n\n          let display = docData[\"Display_Name\"];\n          let info = docData[\"Info\"];\n          let supportedSides = docData[\"Supported_Sides\"];\n\n          if (!supportedSides || supportedSides.length == 0) {\n            return;\n          }\n\n          let vari = docData[\"Colors\"];\n          let minPrice = docData[\"Min_Price_USD\"];\n          let extra = docData[\"Extra_Cost_USD\"];\n          let code = docData[\"Code\"];\n          let sizes = docData[\"Sizes\"];\n          let category = docData[\"category\"];\n          let has3D = docData[\"has3D\"];\n          let onlyBulk = docData[\"Only_Bulk\"];\n          let bulkPrice = docData[\"Bulk_Price_USD\"];\n          let bulkSuggestPrice = docData[\"Bulk_Suggest_Price_USD\"];\n          let bulkUnit = docData[\"Bulk_Unit\"];\n          let moreInfo = docData[\"More_info\"]; // let discountInfo = docData[\"Discount\"] as Dict<any>\n          // let discountedUsers = discountInfo[\"Artists\"] as Array<string>\n          // let discountedPrice = discountInfo.Minimum_Price_USD as number\n          // let discountCodes = discountInfo.Discount_Codes as Array<Dict<any>>   \n\n          const template = new Template(type, display, info, [], sizes, minPrice, code, category, moreInfo, false, [], extra, bulkPrice, bulkUnit, bulkSuggestPrice, onlyBulk, has3D);\n          supportedSides.forEach(side => {\n            var _a;\n\n            let name = side[\"Name\"];\n            let height = side[\"HeightCM\"];\n            let width = side[\"WidthCM\"];\n            let widthMultiplier = side[\"WidthMultiplier\"];\n            let centerYConst = side[\"CenterYConst\"];\n            let centerXConst = side[\"CenterXConst\"];\n            let rotation = side[\"Rotation\"];\n            let useReverseAspect = (_a = side[\"useReverseAspect\"]) !== null && _a !== void 0 ? _a : false;\n            let supportedSide = new TemplateSide(name, height, width, widthMultiplier, centerYConst, centerXConst, useReverseAspect, rotation);\n            template.supportedSides.push(supportedSide);\n          });\n          vari.forEach(v => {\n            var _a, _b;\n\n            let code = v[\"Code\"];\n            let display = v[\"Display\"];\n            let img = (_a = v[\"IMG\"]) === null || _a === void 0 ? void 0 : _a.toBase64();\n            let backImg = (_b = v[\"IMG_BACK\"]) === null || _b === void 0 ? void 0 : _b.toBase64();\n            let rgb = v[\"RGB\"];\n            let color = new Color(code, display, rgb, img, backImg);\n            template.colors.push(color);\n          });\n\n          if (!Globals.templates.includes(template)) {\n            Globals.templates.push(template);\n          }\n        }\n      });\n      if (this.myCallback) this.myCallback();\n      if (isPlatformBrowser(this.platformID)) sub.unsubscribe();\n    });\n  }\n\n}\n\nLoadService.ɵfac = function LoadService_Factory(t) {\n  return new (t || LoadService)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(i1.AngularFirestore), i0.ɵɵinject(i2.AngularFireAuth), i0.ɵɵinject(i3.AngularFireFunctions), i0.ɵɵinject(i4.AngularFireStorage), i0.ɵɵinject(i5.StripeService), i0.ɵɵinject(i6.MatSnackBar));\n};\n\nLoadService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoadService,\n  factory: LoadService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module"}