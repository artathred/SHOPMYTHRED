{"ast":null,"code":"import _asyncToGenerator from \"/Users/artakoroushnia/Desktop/thred-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { DragScrollComponent } from 'ngx-drag-scroll';\nlet DesignComponent = class DesignComponent {\n  constructor(sanitizer) {\n    this.myInnerHeight = 0;\n    this.sanitizer = sanitizer;\n  }\n\n  moveLeft() {\n    var _a;\n\n    (_a = this.ds) === null || _a === void 0 ? void 0 : _a.moveLeft();\n  }\n\n  moveRight() {\n    var _a;\n\n    (_a = this.ds) === null || _a === void 0 ? void 0 : _a.moveRight();\n  }\n\n  moveTo(index) {\n    var _a;\n\n    (_a = this.ds) === null || _a === void 0 ? void 0 : _a.moveTo(index);\n  }\n\n  ngOnInit() {\n    let height = window.innerHeight;\n    let width = window.innerWidth;\n\n    if (width < height) {\n      this.myInnerHeight = width * 0.95;\n    } else {\n      this.myInnerHeight = height * 0.65;\n    }\n\n    this.ds.xWheelEnabled = true;\n    this.loadTemplate();\n  }\n\n  loadTemplate() {// var unsafeImageUrl = this.sanitizer.\n    // this.base64Data = this.sanitizer.bypassSecurityTrustUrl(unsafeImageUrl);\n\n    return _asyncToGenerator(function* () {})();\n  }\n\n};\n\n__decorate([ViewChild('carousel', {\n  read: DragScrollComponent\n})], DesignComponent.prototype, \"ds\", void 0);\n\nDesignComponent = __decorate([Component({\n  selector: 'app-design',\n  templateUrl: './design.component.html',\n  styleUrls: ['./design.component.css']\n})], DesignComponent);\nexport { DesignComponent };","map":{"version":3,"sources":["/Users/artakoroushnia/Desktop/thred-web/src/app/design/design.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,EAA4B,SAA5B,QAA6C,eAA7C;AAGA,SAAS,mBAAT,QAAoC,iBAApC;AASA,IAAa,eAAe,GAA5B,MAAa,eAAb,CAA4B;AAoB1B,EAAA,WAAA,CACE,SADF,EACyB;AAnBzB,SAAA,aAAA,GAAgB,CAAhB;AAqBE,SAAK,SAAL,GAAiB,SAAjB;AACD;;AAhBD,EAAA,QAAQ,GAAA;;;AACN,KAAA,EAAA,GAAA,KAAK,EAAL,MAAO,IAAP,IAAO,EAAA,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAO,EAAA,CAAE,QAAF,EAAP;AACD;;AAED,EAAA,SAAS,GAAA;;;AACP,KAAA,EAAA,GAAA,KAAK,EAAL,MAAO,IAAP,IAAO,EAAA,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAO,EAAA,CAAE,SAAF,EAAP;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAc;;;AAClB,KAAA,EAAA,GAAA,KAAK,EAAL,MAAO,IAAP,IAAO,EAAA,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAO,EAAA,CAAE,MAAF,CAAS,KAAT,CAAP;AACD;;AAQD,EAAA,QAAQ,GAAA;AACN,QAAI,MAAM,GAAG,MAAM,CAAC,WAApB;AACA,QAAI,KAAK,GAAG,MAAM,CAAC,UAAnB;;AAEA,QAAI,KAAK,GAAG,MAAZ,EAAmB;AACjB,WAAK,aAAL,GAAqB,KAAK,GAAG,IAA7B;AACD,KAFD,MAGI;AACF,WAAK,aAAL,GAAqB,MAAM,GAAG,IAA9B;AACD;;AAED,SAAK,EAAL,CAAS,aAAT,GAAyB,IAAzB;AAEA,SAAK,YAAL;AACD;;AAEK,EAAA,YAAY,GAAA,CAEhB;AAEA;;AAJgB;AAKjB;;AA/CyB,CAA5B;;AAMsD,UAAA,CAAA,CAAnD,SAAS,CAAC,UAAD,EAAa;AAAC,EAAA,IAAI,EAAE;AAAP,CAAb,CAA0C,CAAA,E,yBAAA,E,IAAA,E,KAAyB,CAAzB,CAAA;;AANzC,eAAe,GAAA,UAAA,CAAA,CAL3B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,YADD;AAET,EAAA,WAAW,EAAE,yBAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,wBAAD;AAHF,CAAD,CAKkB,CAAA,EAAf,eAAe,CAAf;SAAA,e","sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Template } from '../models/template.model';\nimport { DragScrollComponent } from 'ngx-drag-scroll';\n\n\n\n@Component({\n  selector: 'app-design',\n  templateUrl: './design.component.html',\n  styleUrls: ['./design.component.css']\n})\nexport class DesignComponent implements OnInit {\n\n  myInnerHeight = 0\n  templates?: Array<Template>\n  sanitizer?: DomSanitizer\n\n  @ViewChild('carousel', {read: DragScrollComponent}) ds?: DragScrollComponent;\n\n  moveLeft() {\n    this.ds?.moveLeft();\n  }\n\n  moveRight() {\n    this.ds?.moveRight();\n  }\n\n  moveTo(index: number) {\n    this.ds?.moveTo(index);\n  }\n\n  constructor(\n    sanitizer: DomSanitizer,\n  ) { \n    this.sanitizer = sanitizer\n  }\n\n  ngOnInit(): void {\n    let height = window.innerHeight\n    let width = window.innerWidth\n\n    if (width < height){\n      this.myInnerHeight = width * 0.95\n    }\n    else{\n      this.myInnerHeight = height * 0.65\n    }\n\n    this.ds!.xWheelEnabled = true\n\n    this.loadTemplate()\n  }\n\n  async loadTemplate() {\n    \n    // var unsafeImageUrl = this.sanitizer.\n\n    // this.base64Data = this.sanitizer.bypassSecurityTrustUrl(unsafeImageUrl);\n  }\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}