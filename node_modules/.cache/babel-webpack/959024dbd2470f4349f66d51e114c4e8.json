{"ast":null,"code":"import _asyncToGenerator from \"/Users/artakoroushnia/Desktop/thred-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet CropperComponent = class CropperComponent {\n  constructor(activeModal) {\n    this.activeModal = activeModal;\n    this.imageChangedEvent = '';\n    this.croppedImage = '';\n    this.ratio = 1;\n    this.width = 200;\n    this.height = 200;\n  }\n\n  innerHeight() {\n    return window.innerHeight * 0.9;\n  }\n\n  ngOnInit() {\n    console.log(window.innerHeight);\n  }\n\n  imageCropped(event) {\n    this.croppedImage = event.base64;\n  }\n\n  imageLoaded() {// show cropper\n  }\n\n  compressImage(src) {\n    return new Promise((res, rej) => {\n      const img = new Image();\n      img.src = src;\n\n      img.onload = () => {\n        const elem = document.createElement('canvas');\n        elem.width = this.width;\n        elem.height = this.height;\n        const ctx = elem.getContext('2d');\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, this.width, this.height);\n        const data = ctx === null || ctx === void 0 ? void 0 : ctx.canvas.toDataURL(\"image/jpg\");\n        res(data);\n      };\n\n      img.onerror = error => rej(error);\n    });\n  }\n\n  useImage() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let res = yield _this.compressImage(_this.croppedImage);\n\n      _this.activeModal.dismiss(res);\n    })();\n  }\n\n  cropperReady() {// cropper ready\n  }\n\n  loadImageFailed() {// show message\n  }\n\n};\nCropperComponent = __decorate([Component({\n  selector: 'app-cropper',\n  templateUrl: './cropper.component.html',\n  styleUrls: ['./cropper.component.css']\n})], CropperComponent);\nexport { CropperComponent };","map":{"version":3,"sources":["/Users/artakoroushnia/Desktop/thred-web/src/app/cropper/cropper.component.ts"],"names":[],"mappings":";;AAAA,SAAS,SAAT,QAAkC,eAAlC;AASA,IAAa,gBAAgB,GAA7B,MAAa,gBAAb,CAA6B;AAW3B,EAAA,WAAA,CACU,WADV,EACqC;AAA3B,SAAA,WAAA,GAAA,WAAA;AAVV,SAAA,iBAAA,GAAyB,EAAzB;AACA,SAAA,YAAA,GAAoB,EAApB;AACA,SAAA,KAAA,GAAQ,CAAR;AACA,SAAA,KAAA,GAAQ,GAAR;AACA,SAAA,MAAA,GAAS,GAAT;AAQE;;AAPF,EAAA,WAAW,GAAA;AACT,WAAO,MAAM,CAAC,WAAP,GAAqB,GAA5B;AACD;;AAOD,EAAA,QAAQ,GAAA;AACN,IAAA,OAAO,CAAC,GAAR,CAAY,MAAM,CAAC,WAAnB;AACD;;AACD,EAAA,YAAY,CAAC,KAAD,EAAyB;AACnC,SAAK,YAAL,GAAoB,KAAK,CAAC,MAA1B;AACH;;AACD,EAAA,WAAW,GAAA,CACT;AACD;;AAED,EAAA,aAAa,CAAC,GAAD,EAAY;AACvB,WAAO,IAAI,OAAJ,CAAY,CAAC,GAAD,EAAM,GAAN,KAAa;AAC9B,YAAM,GAAG,GAAG,IAAI,KAAJ,EAAZ;AACA,MAAA,GAAG,CAAC,GAAJ,GAAU,GAAV;;AACA,MAAA,GAAG,CAAC,MAAJ,GAAa,MAAK;AAChB,cAAM,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAb;AACA,QAAA,IAAI,CAAC,KAAL,GAAa,KAAK,KAAlB;AACA,QAAA,IAAI,CAAC,MAAL,GAAc,KAAK,MAAnB;AACA,cAAM,GAAG,GAAG,IAAI,CAAC,UAAL,CAAgB,IAAhB,CAAZ;AACA,QAAA,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAG,KAAA,CAAH,GAAA,GAAG,CAAE,SAAL,CAAe,GAAf,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,KAAK,KAA/B,EAAsC,KAAK,MAA3C,CAAA;AACA,cAAM,IAAI,GAAG,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAG,KAAA,CAAH,GAAA,GAAG,CAAE,MAAL,CAAY,SAAZ,CAAsB,WAAtB,CAAb;AACA,QAAA,GAAG,CAAC,IAAD,CAAH;AACD,OARD;;AASA,MAAA,GAAG,CAAC,OAAJ,GAAc,KAAK,IAAI,GAAG,CAAC,KAAD,CAA1B;AACD,KAbM,CAAP;AAcD;;AAEK,EAAA,QAAQ,GAAA;AAAA;;AAAA;AACZ,UAAI,GAAG,SAAS,KAAI,CAAC,aAAL,CAAmB,KAAI,CAAC,YAAxB,CAAhB;;AACA,MAAA,KAAI,CAAC,WAAL,CAAiB,OAAjB,CAAyB,GAAzB;AAFY;AAGb;;AAED,EAAA,YAAY,GAAA,CACR;AACH;;AACD,EAAA,eAAe,GAAA,CACX;AACH;;AArD4B,CAA7B;AAAa,gBAAgB,GAAA,UAAA,CAAA,CAL5B,SAAS,CAAC;AACT,EAAA,QAAQ,EAAE,aADD;AAET,EAAA,WAAW,EAAE,0BAFJ;AAGT,EAAA,SAAS,EAAE,CAAC,yBAAD;AAHF,CAAD,CAKmB,CAAA,EAAhB,gBAAgB,CAAhB;SAAA,gB","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ImageCroppedEvent, LoadedImage } from 'ngx-image-cropper';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-cropper',\n  templateUrl: './cropper.component.html',\n  styleUrls: ['./cropper.component.css']\n})\nexport class CropperComponent implements OnInit {\n\n  imageChangedEvent: any = '';\n  croppedImage: any = '';\n  ratio = 1;\n  width = 200\n  height = 200\n  innerHeight(){\n    return window.innerHeight * 0.9\n  }\n\n  constructor(\n    private activeModal: NgbActiveModal,\n  ) {\n   }\n\n  ngOnInit(): void {\n    console.log(window.innerHeight)\n  }\n  imageCropped(event: ImageCroppedEvent) {\n    this.croppedImage = event.base64;\n}\nimageLoaded() {\n  // show cropper\n}\n\ncompressImage(src: string) {\n  return new Promise((res, rej) => {\n    const img = new Image();\n    img.src = src;\n    img.onload = () => {\n      const elem = document.createElement('canvas');\n      elem.width = this.width;\n      elem.height = this.height;\n      const ctx = elem.getContext('2d');\n      ctx?.drawImage(img, 0, 0, this.width, this.height);\n      const data = ctx?.canvas.toDataURL(\"image/jpg\")\n      res(data);\n    }\n    img.onerror = error => rej(error);\n  })\n}\n\nasync useImage(){\n  let res = await this.compressImage(this.croppedImage)\n  this.activeModal.dismiss(res)\n}\n\ncropperReady() {\n    // cropper ready\n}\nloadImageFailed() {\n    // show message\n}\n\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}