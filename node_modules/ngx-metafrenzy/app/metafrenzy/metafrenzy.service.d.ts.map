{"version":3,"file":"metafrenzy.service.d.ts","sources":["metafrenzy.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { RendererFactory2 } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\nexport interface LinkDefinition {\n    charset?: string;\n    crossorigin?: string;\n    href?: string;\n    hreflang?: string;\n    media?: string;\n    rel?: string;\n    rev?: string;\n    sizes?: string;\n    target?: string;\n    type?: string;\n    [prop: string]: string | undefined;\n}\nexport interface OpenGraph {\n    title?: string;\n    description?: string;\n    type?: string;\n    url?: string;\n    image?: string;\n    site_name?: string;\n    [prop: string]: string | undefined;\n}\nexport interface Tags {\n    title?: string;\n    description?: string;\n    url?: string;\n    robots?: Robots;\n    image?: string;\n}\nexport declare type Robots = 'index,follow' | 'index,nofollow' | 'noindex,nofollow' | 'noindex,follow' | 'index, follow' | 'index, nofollow' | 'noindex, nofollow' | 'noindex, follow';\nexport declare class MetafrenzyService {\n    private readonly title;\n    private readonly meta;\n    private readonly rendererFactory;\n    private document;\n    constructor(title: Title, meta: Meta, rendererFactory: RendererFactory2, document: any);\n    setTitle(title: string): void;\n    getTitle(): string;\n    setMetaTag(name: string, content: string): void;\n    getMetaTag(selector: string, returnElement?: boolean): string | HTMLMetaElement;\n    removeMetaTag(selector: string | HTMLMetaElement): void;\n    setMetaCharsetTag(value: string): void;\n    removeLinkTags(shouldRemoveLinkTagCb: (linkTag: HTMLLinkElement) => boolean): void;\n    setLinkTag(tag: LinkDefinition): void;\n    setAllTitleTags(title: string): void;\n    setAllDescriptionTags(description: string): void;\n    setCanonical(href: string): void;\n    removeCanonical(): void;\n    setRobots(content: Robots): void;\n    setOpenGraph(og: OpenGraph): void;\n    setTags(tags: Tags): void;\n}\n"]}