{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x3101ba279f325281E10Af344f01bB35a169ace22",
    "txHash": "0x7481d1d7cd01153001ec387a452101a378be689f61db5c72cd8c8325ee1baa07"
  },
  "proxies": [
    {
      "address": "0x63B7D6251237a2aC8F341742346c2be92f3119CD",
      "txHash": "0x9fa498be26e19f9c84085a9aab9a1cbac5147487d0060f96eae312d8c790ca9a",
      "kind": "transparent"
    },
    {
      "address": "0xd0B2538F39dA19AE21f18626fBBc9F7498E8065E",
      "txHash": "0x8ef08f5bc92fd2d9a85e382fbc00cdfbabe5bcb9096b160dd7d7cec4a18f5912",
      "kind": "transparent"
    },
    {
      "address": "0x93A57582c49e306384ED15D9B93D499f4df73c47",
      "txHash": "0x67f58900a21c2817cf9ec1f276ef21764da3041d5377668c02707156a8d07427",
      "kind": "transparent"
    }
  ],
  "impls": {
    "840ce97c65719eb77b495f8d96fdb3b3ac0d118fe9906ae7482202567f9ea69d": {
      "address": "0x4Ce346Afb4691125a1e6EA46bbf465F014563B40",
      "txHash": "0x0fa0423d8e7fc3da8d6d75b26470984e562b969e812d8c4d5736045cdd088050",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(Counter)5450_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:28"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7441_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:83"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7452_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7441_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5450_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7441_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7452_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5450_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7452_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "043531fb7f6b567f388f4951711a8aba8454c20dfaaa9fce79255a2312c328f3": {
      "address": "0x21980A0709369E5779d00658dD57f9CE98BE7EEd",
      "txHash": "0xf649678c36e465a90ea8e58a8b34a8f9bd4913562178ff7fe9448b3de111eac3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "4ca5a50b32d949b0e8e83e8dcab534f33a865d23e49ff7417b7657eaae61e525": {
      "address": "0xe0a471599e56FafE106865709c7559eb1Cbd757c",
      "txHash": "0x705c65a314fb21692f6fe5dadcc477326c64e8d26096bb3a5fe08b16a4a55c55",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "b0b7d912ef3dbbf36edbb396266e13a4bb13d08debb550f125abe53f7327e2b1": {
      "address": "0x88D2d540a4BC2aD784BbaeB0e2C4F704EEC0E877",
      "txHash": "0x68ca4a05a3afb0f96e546835db7423b69349d38457b2337a0e71535da1573b27",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          },
          {
            "label": "collectionVolume",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:93"
          },
          {
            "label": "withdrawAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "5b566d302bab8db5340c0a62890b2020cfdb168fd3aa579250a32eec4af1cf06": {
      "address": "0x2501a814113B1AAb232bdC0c837b350e0C8a77Db",
      "txHash": "0x8426a80e06e8d9b5d82c887e0422220ee6c03dcf9c344a409ea7ae5cf418cfdb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          },
          {
            "label": "collectionVolume",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:93"
          },
          {
            "label": "withdrawAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "db2e7eb3505848f2f7fc9b923322b33adc6f0493dee9326279a3f8cd46c20567": {
      "address": "0x55244aF9b25a0138FF381E5a2957B99E8dE313E3",
      "txHash": "0x5f977d05ceec19d26fbe046e24f96681eadc3bbeea534473b225ca2af7ccbace",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          },
          {
            "label": "collectionVolume",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:93"
          },
          {
            "label": "withdrawAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "f76230298fcbf837df30b3b78596074610088eb01071c48177cceda93e1c369d": {
      "address": "0x74C31C2DcE0F4583840E51685726B85c5c275102",
      "txHash": "0xa62de2daad97f08008bf1666b569872c0f4f7c59471ee6f73df4888bf11c9e7f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          },
          {
            "label": "collectionVolume",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:93"
          },
          {
            "label": "withdrawAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "9c043f5902e05ad36320354066e49435a1f68f584104e1e9cd42ec773416fd3b": {
      "address": "0x091a0A3531EBdE5E04B716A1bb192d92f8adF97c",
      "txHash": "0x79c65db7dfce4b9e74c89859161426c5f9bb11c0d225b1973fee7ee9cfd4b3a7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          },
          {
            "label": "collectionVolume",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:93"
          },
          {
            "label": "withdrawAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "91f9371a9292a7e6f1d9d0bed4face73b2a8b48460171a148583353b5c2ebbe2": {
      "address": "0x22df2cA78DA3EBBf8703Fe0D91aEdb6f00BAa32f",
      "txHash": "0xbf5b1aac0074bc0b9c4d44c84ef9fda782e6b001052541c650ca4aaf17ece279",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "51",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "52",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "53",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "153",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_itemIds",
            "offset": 0,
            "slot": "203",
            "type": "t_struct(Counter)5603_storage",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:34"
          },
          {
            "label": "idToMarketItem",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:89"
          },
          {
            "label": "marketplace",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:91"
          },
          {
            "label": "collectionVolume",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:93"
          },
          {
            "label": "withdrawAmount",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "ThredMarketplace",
            "src": "contracts/ThredMarketplace/ThredMarketplace.sol:95"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Variation)7608_storage)dyn_storage": {
            "label": "struct ThredMarketplace.Variation[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MarketItem)7597_storage)": {
            "label": "mapping(uint256 => struct ThredMarketplace.MarketItem)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)5603_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MarketItem)7597_storage": {
            "label": "struct ThredMarketplace.MarketItem",
            "members": [
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nftContract",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tokenId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "owner",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "variations",
                "type": "t_array(t_struct(Variation)7608_storage)dyn_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "royalty",
                "type": "t_uint96",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tokenContract",
                "type": "t_address",
                "offset": 12,
                "slot": "5"
              },
              {
                "label": "isNative",
                "type": "t_bool",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "minted",
                "type": "t_bool",
                "offset": 1,
                "slot": "6"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "mintedVariations",
                "type": "t_struct(Counter)5603_storage",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "fungible",
                "type": "t_bool",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "tokenUri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Variation)7608_storage": {
            "label": "struct ThredMarketplace.Variation",
            "members": [
              {
                "label": "seller",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "variationId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "itemId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "forSale",
                "type": "t_bool",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    }
  }
}
