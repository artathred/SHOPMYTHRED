{"version":3,"sources":["./src/app/billing-admin/billing-admin.component.ts","./src/app/billing-admin/billing-admin.component.html","./src/app/billing-admin/billing-admin.module.ts"],"names":[],"mappings":"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","file":"336.js","sourcesContent":["import { Component, OnInit, Inject, PLATFORM_ID, ChangeDetectorRef, ViewChild, ViewEncapsulation, AfterViewInit } from '@angular/core';\nimport { Globals } from '../globals';\nimport { Product } from '../models/product.model';\nimport { ProductInCart } from '../models/product-in-cart.model';\nimport { Dict, LoadService } from '../services/load.service';\nimport { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport { Country } from '../models/shipping-country.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { BillingInfo } from '../models/billing-address.model';\nimport { MatRadioChange } from '@angular/material/radio';\nimport { AppComponent } from '../app.component';\nimport { StripeCardComponent, StripeService, STRIPE_PUBLISHABLE_KEY, WindowRef } from 'ngx-stripe';\nimport { NgxSpinnerService } from \"ngx-spinner\";\n\nimport {\n  StripeCardElementOptions,\n  StripeElementsOptions,\n  Stripe\n} from '@stripe/stripe-js';\nimport { RoutingService } from '../services/routing.service';\n\n@Component({\n  selector: 'app-billing-admin',\n  templateUrl: './billing-admin.component.html',\n  styleUrls: ['./billing-admin.component.css']\n})\nexport class BillingAdminComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(StripeCardComponent) card1?: StripeCardComponent;\n\n  \n\n\n\n  \n\n  cardOptions: StripeCardElementOptions = {\n    hidePostalCode: true,\n    style: {\n      base: {\n        iconColor: '#06415F',\n        color: '#051113',\n        fontWeight: 'regular',\n        fontFamily: 'Arial',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#979999'\n        }\n      }\n    }\n  };\n\n  selectedTheme(){\n    \n    let co = Globals.storeInfo?.colorStyle?.btn_color\n    let bco = Globals.storeInfo?.colorStyle?.bg_color\n    let name = Globals.storeInfo?.colorStyle?.name\n\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\"\n\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\"\n\n    var theme: Dict<string> = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    }\n    return theme\n  }\n\n  elementsOptions: StripeElementsOptions = {\n    locale: 'en'\n  };\n\n  stripeTest!: FormGroup;\n  \n  billingForm = this.fb.group({\n    company: null,\n    cardholder: [null, Validators.required],\n    address: [null, Validators.required],\n    address2: null,\n    country: [null, Validators.required],\n    city: [null, Validators.required],\n    state: [null, Validators.required],\n    postalCode: [null, [Validators.required, Validators.minLength(5), Validators.maxLength(8)]],\n    shipping: ['custom', Validators.required]\n  });\n\n  hasUnitNumber = false;\n\n  states(country?: string){\n\n    country = country?.toLowerCase()\n    if (country == \"canada\"){\n      return Globals.caProvinces\n    }\n    if (country == \"united states\"){\n      return Globals.usStates\n    }\n    if (country == \"united kingdom\"){\n      return Globals.ukNations\n    }\n    return Globals.usStates\n  }\n\n  countries(){\n    return Globals.allCountries\n  }\n\n  getStateFieldName(country?: string){\n\n    country = country?.toLowerCase()\n    if (country == \"canada\"){\n      return \"Province\"\n    }\n    if (country == \"united states\"){\n      return \"State\"\n    }\n    if (country == \"united kingdom\"){\n      return \"Region\"\n    }\n    return \"State\"\n  }\n\n  getZipFieldName(country?: string){\n\n    country = country?.toLowerCase()\n    if (country == \"canada\"){\n      return \"Postal Code\"\n    }\n    if (country == \"united states\"){\n      return \"Zip Code\"\n    }\n    if (country == \"united kingdom\"){\n      return \"Postal Code\"\n    }\n    return \"Zip Code\"\n  }\n\n  storeInfo(){return Globals.storeInfo}\n\n  availableCurrencies(){return Globals.availableCurrencies}\n\n  selectedCurrency(){return Globals.selectedCurrency}\n\n  templates(){return Globals.availableTemplates}\n\n  availableTemplates(){return Globals.availableTemplates}\n\n\n  selectedProduct(){return Globals.selectedProduct}\n  \n  selectedTemplate(){return Globals.selectedTemplate}\n\n  selectedCode!: string\n\n  cart(){\n    return this.rootComponent\n  }\n\n\n  getColor(product?: Product){\n\n    let colors = Globals.templates.find(template => template.productCode == product?.productType)?.colors\n    return colors?.find(color => color.code == product?.templateColor)?.display ?? \"White\"\n  }\n\n  firstName(){\n    return Globals.billingInfo?.name.split(' ').slice(0, -1).join(' ')\n  }\n\n  lastName(){\n    return Globals.billingInfo?.name.split(' ').slice(-1).join(' ')\n  }\n\n  format(d: Date) {\n    return Globals.months[d.getMonth()].substring(0,3) + \" \" + d.getDate() + \" \" + d.getFullYear()\n  }\n\n  setForm(){\n    this.card1?.element.on('change', ({error}) => {\n      this.validCard = !error\n\n      if (error) {\n        console.log(error)\n      }\n    });\n\n    this.billingForm.controls.company.setValue(Globals.billingInfo?.company ?? \"\")\n    this.billingForm.controls.cardholder.setValue(Globals.billingInfo?.name ?? \"\")\n    this.billingForm.controls.address.setValue(Globals.billingInfo?.street ?? \"\")\n    this.billingForm.controls.address2.setValue(Globals.billingInfo?.unit ?? \"\")\n    this.billingForm.controls.country.setValue(Globals.billingInfo?.country ?? \"\")\n    this.billingForm.controls.city.setValue(Globals.billingInfo?.city ?? \"\")\n    this.billingForm.controls.state.setValue(Globals.billingInfo?.admin_area ?? \"\")\n    this.billingForm.controls.postalCode.setValue(Globals.billingInfo?.postal ?? \"\")\n  }\n\n  selectedIndicator(){\n    \n    let co = Globals.storeInfo?.loading?.color\n    let bco = Globals.storeInfo?.loading?.bg_color\n    let name = Globals.storeInfo?.loading?.name\n\n    let color = \"rgba(\" + co[0] + \",\" + co[1] + \",\" + co[2] + \",\" + co[3] + \")\"\n\n    let bg_color = \"rgba(\" + bco[0] + \",\" + bco[1] + \",\" + bco[2] + \",\" + bco[3] + \")\"\n\n    let indicator: Dict<string> = {\n      \"name\": name,\n      \"color\": color,\n      \"bg_color\": bg_color\n    }\n    return indicator\n  }\n\n  async callback(){\n\n    if (await this.loadService.authenticated()){\n      this.cardOptions.style!.base!.color = this.selectedTheme().color\n      this.cardOptions.style!.base!.iconColor = this.selectedTheme().color\n      this.cardOptions.style!.base!['::placeholder']!.color = this.selectedTheme().color\n\n      if (Globals.storeInfo.username){\n        this.rootComponent.setFavIcon(Globals.storeInfo.profileLink!.toString())\n        this.addTags(Globals.storeInfo.fullName ?? \"Thred\", (Globals.storeInfo.profileLink ?? new URL(\"https://shopmythred.com\")).toString(), Globals.storeInfo.bio ?? \"Check out my Thred Store!\", \"shopmythred.com/\" + Globals.storeInfo.username)\n        if (Globals.billingInfo == undefined && isPlatformBrowser(this.platformID)){\n          this.loadService.getBillingAddress()\n        }\n        else if (Globals.userInfo == undefined && isPlatformBrowser(this.platformID)){\n          this.loadService.getCustomer()\n        }\n        else{\n          this.setForm()\n          this.cdr.detectChanges()\n        }\n      }\n      else{\n        this.routingService.routeTo404(this.getStoreName().isCustom)\n      }\n    }\n    else{\n      // this.rout()\n    }\n  }\n\n\n  validCard = false\n  err = \"\"\n\n  async addCard(){\n\n    \n    if (this.billingForm.valid && this.validCard){\n\n      let f = this.billingForm.controls\n\n      Globals.billingInfo = new BillingInfo(\n        f.cardholder.value, \n        f.company.value, \n        undefined, \n        undefined, \n        f.address.value, \n        f.city.value, \n        f.country.value, \n        f.state.value, \n        f.address2.value, \n        f.postalCode.value, \n        this.getCountryCode(f.country.value), \n      )\n\n      if (f.country.value == \"CA\" || f.country.value == \"Canada\"){\n        Globals.billingInfo.admin_area = Globals.caProvinces.find(province => { return province.name == f.state.value || province.abbreviation == f.state.value})?.abbreviation ?? \"ON\"\n      }\n      console.log(f.country.value)\n\n\n      this.loadService.linkCard({card: this.card1, stripe: this.stripeService}, (err?: any) => {\n        if (err){\n          this.err = err\n        }\n        else{\n          this.routeToReview()\n        }\n      })\n\n      if (isPlatformBrowser(this.platformID)){\n          this.spinner.show()\n      };\n    }\n  }\n\n  routeToReview(){\n    if (isPlatformBrowser(this.platformID)){\n          this.spinner.hide()\n   }\n   console.log(Globals.storeInfo?.username!)\n   console.log(this.getStoreName().isCustom)\n\n   this.routingService.routeToProfile(Globals.storeInfo?.username!, this.getStoreName().isCustom, 'billing')\n  }\n  \n  init() {\n\n\n    this.cardOptions.style!.base!.color = this.selectedTheme().color\n\n    Globals.billingInfo = undefined\n\n    const storeInfo = this.getStoreName()\n    this.downloadAllStoreInfo(storeInfo.link, storeInfo.isCustom)\n\n  }\n\n\n  downloadAllStoreInfo(storeName: string, isCustom = false){\n    this.loadService.myCallback = () => this.callback()\n    this.loadService.getUser(storeName, undefined, isCustom)\n  }\n\n  getStoreName(){\n    var request = \"\"\n    if (isPlatformServer(this.platformID)){\n      request = Globals.URL\n      console.log(request)\n    }\n    else{\n      request = globalThis.location.host\n    }  \n    if (request != 'localhost:4200' && request != 'shopmythred.com'){\n      return {\n        isCustom: true,\n        link: request\n      }\n    }\n    const routeParams = this.router.snapshot.paramMap;\n    const storeID = routeParams.get('user') as string;\n    return {\n      isCustom: false,\n      link: storeID\n    }\n  }\n\n  \n\n  isBrowser(){\n    return isPlatformBrowser(this.platformID)\n  }\n\n  getCountryCode(country: string){\n    var returnItem = this.countries().find(c => c.name == country)?.code\n    return returnItem\n  }\n\n  addTags(title: string, imgUrl: string, description: string, url: string){\n    this.metaService.updateTag({property: 'og:title', content: title  + \" - \" + \"Home\"});\n    this.metaService.updateTag({property: 'og:image', content: imgUrl});\n    this.metaService.updateTag({property: 'og:url', content: url})\n    this.metaService.updateTag({property: 'og:description', content: description})\n    this.titleService.setTitle(title)\n    this.metaService.updateTag({property: 'description', content: description})\n\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformID: Object,\n\n    private cdr: ChangeDetectorRef,\n    private router: ActivatedRoute,\n    private titleService: Title, \n    private metaService: Meta,\n    private loadService: LoadService,\n    private _router: Router,\n    private fb: FormBuilder,\n    private rootComponent: AppComponent,\n    private spinner: NgxSpinnerService,\n    private stripeService: StripeService,\n    private routingService: RoutingService,\n\n  ) {}\n  ngAfterViewInit(): void {\n    \n  }\n\n\n\n  buttonBack(){\n    console.log(this.storeInfo()?.colorStyle.back_code)\n    if (this.storeInfo()?.colorStyle.back_code == \"dark\"){\n      return 'rgb(255,255,255)'\n    }\n    return 'rgb(0,0,0)'\n  }\n\n  ngOnInit(): void {\n\n    \n    this.init()\n\n  }\n\n\n}\n","<router-outlet></router-outlet>\n\n\n<ngx-spinner\n*ngIf=\"isBrowser()\" \nbdColor = '{{selectedIndicator().bg_color}}'\nsize = \"large\"\ncolor = '{{selectedIndicator().color}}'\ntype = {{selectedIndicator().name}} \n[fullScreen] = \"true\"\nstyle.color = \"{{selectedIndicator()!.color}}\"\n>\n<h3 class=\"text-center mt-5\" [style.font-family]=\"storeInfo().fontName!\" class=\"text-center\"> Updating Billing Information...\n</h3>\n</ngx-spinner>\n\n  <!-- Header-->\n  <div class=\"h-100\" style.background-color=\"{{selectedTheme()!.bg_color}}\">\n    <header *ngIf=\"isBrowser() && storeInfo().username != undefined\" class=\"bg-{{storeInfo().colorStyle!.back_code}} py-6\">\n      <div class=\"cover\" style=\"background-image: url(https://firebasestorage.googleapis.com/v0/b/clothingapp-ed125.appspot.com/o/Resources%2FSample-Walls%2FHome%2F1.jpg?alt=media);\" [style.background-image]='\"url(\" + storeInfo()!.themeLink!.toString() + \")\"'>\n          <div class=\"d-flex align-items-center justify-content-center\" style=\"height: 200px; font-weight: bold;font-size:35px\">\n            <div>\n              <p [style.font-family]=\"storeInfo().fontName!\" class = \"text-center\" style = \"line-height:1.2em;text-shadow: 2px 2px 4px #42424281;\">\n                BILLING INFO\n               </p>\n            </div>\n              \n               \n             </div>\n        </div>\n    </header>\n  \n    <section *ngIf=\"isBrowser() && storeInfo().username != undefined && cardOptions.style!.base!.color == selectedTheme().color\" class=\"py-5\" style.background-color=\"{{selectedTheme()!.bg_color}}\">\n      <div class=\"container pb-5 mb-2 mb-md-4\">\n  \n          <div class=\"row mt-3\">\n            <!-- List of items-->\n            <!-- <div class=\"d-flex justify-content-left align-items-center pb-4 pb-sm-5 mt-1 ms-2 ps-1\">\n              <a class=\"btn btn-outline-primary btn-sm ps-2\" href=\"shop-grid-ls.html\"><i class=\"ci-arrow-left me-2\"></i>Continue shopping</a>\n            </div> -->\n            \n            <section class=\"col-lg-8\">\n              \n              \n              <!-- Item-->\n              <form [formGroup]=\"billingForm\" novalidate>\n                \n  \n  \n                  <mat-card class=\"shipping-card bg-{{storeInfo().colorStyle!.back_code}} mt-0\">\n                    <mat-card-header>\n                      <mat-card-title style.color=\"{{selectedTheme()!.color}}\" [style.font-family]=\"storeInfo().fontName!\">Billing Method</mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                      <div class=\"row\">\n                          <div class=\"col\">\n                            <mat-form-field class=\"full-width\">\n                              <input class=\"text-{{storeInfo().colorStyle!.text_code}}\" matInput style.color=\"{{selectedTheme()!.color}}\" formControlName=\"cardholder\">\n                              <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>Cardholder Name</mat-placeholder>\n                              <mat-error *ngIf=\"billingForm.controls['cardholder'].hasError('required')\">\n                                  Cardholder name is <strong>required</strong>\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n                      </div>\n                      <div class=\"row gx-10 row-cols-1 row-cols-md-3 row-cols-xl-3 mb-4 mt-4 justify-content-between\">\n  \n                          <div class=\"col d-block\">\n                              <ngx-stripe-card\n                              [options]=\"cardOptions\"\n                              [elementsOptions]=\"elementsOptions\">\n                              </ngx-stripe-card>\n                          </div>\n  \n                      \n                          \n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col\">\n                          <mat-form-field class=\"full-width\">\n                            <input class=\"text-{{storeInfo().colorStyle!.text_code}}\" matInput formControlName=\"company\" >\n                            <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>Company (Optional)</mat-placeholder>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"row mt-5\">\n                          <mat-card-header>\n                              <mat-card-title class=\"text-{{storeInfo().colorStyle!.text_code}}\" [style.font-family]=\"storeInfo().fontName!\">Billing Address</mat-card-title>\n                            </mat-card-header>\n                        <div class=\"col\">\n                          <mat-form-field class=\"full-width\">\n                            <input class=\"text-{{storeInfo().colorStyle!.text_code}}\" matInput formControlName=\"address\">\n                            <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>Address</mat-placeholder>\n                            <mat-error *ngIf=\"billingForm.controls['address'].hasError('required')\">\n                              Address is <strong>required</strong>\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\n                        <div class=\"col\">\n                          <button class=\"text-{{storeInfo().colorStyle!.text_code}}\" mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\n                            + Add C/O, Apt, Suite, Unit\n                          </button>\n                        </div>\n                      </div>\n                      <div class=\"row\" *ngIf=\"hasUnitNumber\">\n                        <div class=\"col\">\n                          <mat-form-field class=\"full-width\">\n                            <textarea class=\"text-{{storeInfo().colorStyle!.text_code}}\" matInput formControlName=\"address2\"></textarea>\n                            <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>Address 2</mat-placeholder>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                          <div class=\"col\">\n                              <mat-form-field class=\"full-width text-{{storeInfo().colorStyle!.text_code}}\">\n                                <mat-select formControlName=\"country\">\n                                  <mat-option class=\"not-empty-select text-{{storeInfo().colorStyle!.text_code}} bg-{{storeInfo().colorStyle!.back_code}}\" *ngFor=\"let country of countries()\" [value]=\"country.name\">\n                                    {{ country.name }}\n                                  </mat-option>\n                                </mat-select>\n                                <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>Country</mat-placeholder>\n                                <mat-error *ngIf=\"billingForm.controls['country'].hasError('required')\">\n                                  Country is <strong>required</strong>\n                                </mat-error>\n                              </mat-form-field>\n                            </div>\n                        <div class=\"col\">\n                          <mat-form-field class=\"full-width\">\n                            <input class=\"text-{{storeInfo().colorStyle!.text_code}}\" matInput formControlName=\"city\">\n                            <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>City</mat-placeholder>\n                            <mat-error *ngIf=\"billingForm.controls['city'].hasError('required')\">\n                              City is <strong>required</strong>\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                        <div class=\"col\">\n                          <mat-form-field class=\"full-width\">\n\n                            <input class=\"text-{{storeInfo().colorStyle!.text_code}}\" matInput formControlName=\"state\">\n                            <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>Province/State</mat-placeholder>\n                            <mat-error *ngIf=\"billingForm.controls['state'].hasError('required')\">\n                              State is <strong>required</strong>\n                            </mat-error>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col\">\n                          <mat-form-field class=\"full-width\">\n                            <input class=\"text-{{storeInfo().colorStyle!.text_code}}\" matInput #postalCode maxlength=\"10\" formControlName=\"postalCode\">\n                            <mat-placeholder class=\"placeholder\" [style.color] = 'selectedTheme()!.color'>{{getZipFieldName(billingForm.controls['country'].value)}}</mat-placeholder>\n                            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\n                          </mat-form-field>\n                        </div>\n                      </div>\n                    </mat-card-content>\n                    <!-- <mat-card-actions>\n                      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n                    </mat-card-actions> -->\n                  </mat-card>\n                </form>\n              \n              \n            </section>\n            <!-- Sidebar-->\n            <aside class=\"col-lg-4 pt-4 pt-lg-0 ps-xl-5\">\n                <div class=\"bg-{{storeInfo().colorStyle!.back_code}} rounded-3 shadow-lg p-4\">\n                  <div class=\"py-2 px-xl-2\">\n                    <div class=\"text-center mb-4 pb-3 border-bottom\">\n                      <!-- <h2 [style.font-family]=\"storeInfo().fontName!\" class=\"h6 mb-3 pb-1\" style.color=\"{{selectedTheme()!.color}}\">Subtotal</h2> -->\n                    </div>\n                    <div class=\"text-center mt-2\"><a [style.font-family]=\"storeInfo().fontName!\" class=\"btn mt-4 d-flex flex-wrap\" style=\"font-weight:bold; font-size:20px; justify-content: center;\" (click) = \"addCard()\" style.background-color=\"{{selectedTheme()!.color}}\" style.color=\"{{selectedTheme()!.bg_color}}\"  [innerHTML]=\"'Save Billing Info'\"></a></div>\n                    <p [hidden]=\"err == ''\" [style.font-family]=\"storeInfo().fontName!\" class = \"text-center mt-3 mb-3\" style = \"line-height:1.0em; font-size: 12px; height: 15px; font-weight: normal; color: red;\">\n                      {{err}}\n                    </p>\n                  </div>\n                </div>\n              </aside>\n          </div>\n        </div>\n    </section>\n  </div>\n  \n    <!-- Bootstrap core JS-->\n    <script *ngIf=\"isBrowser();\" src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js\"></script>\n    <!-- Core theme JS-->\n    <script *ngIf=\"isBrowser();\" src=\"js/scripts.js\"></script>","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { CommonModule } from \"@angular/common\";\nimport { Globals } from '../globals';\nimport { MatCardModule } from '@angular/material/card';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { MatInputModule } from '@angular/material/input';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { NgxStripeModule } from 'ngx-stripe';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BillingAdminComponent } from './billing-admin.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BillingAdminComponent,\n  },\n];\n\n\n@NgModule({\n  declarations: [\n    BillingAdminComponent,\n  ],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    MatIconModule,\n    NgxSpinnerModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    RouterModule.forChild(routes),\n    NgxStripeModule.forRoot('pk_live_m7nEWhyTHoxGspcxtJAci6pu002LUiOnJK'),\n\n\n  ],\n  schemas:[CUSTOM_ELEMENTS_SCHEMA],\n  providers: [Globals],\n  bootstrap: [BillingAdminComponent]\n})\nexport class BillingAdminModule { }\n"],"sourceRoot":"webpack:///"}